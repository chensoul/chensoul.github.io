<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Translation on ChenSoul Blog</title>
    <link>https://blog.chensoul.cc/tags/translation/</link>
    <description>Recent content in Translation on ChenSoul Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 14 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.chensoul.cc/tags/translation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[译]测试 Spring Boot 应用程序：最佳实践和框架</title>
      <link>https://blog.chensoul.cc/posts/2024/10/14/testing-spring-boot-applications-best-practices-and-frameworks/</link>
      <pubDate>Mon, 14 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/10/14/testing-spring-boot-applications-best-practices-and-frameworks/</guid>
      <description>&lt;p&gt;测试是软件开发不可或缺的一部分。它可确保您的 Spring Boot 应用程序按预期运行，并在不断发展的过程中继续保持这种状态。在本文中，我们将探讨如何使用最佳实践和工具测试 Spring Boot 应用程序。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]分布式系统速成课程</title>
      <link>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-distributed-systems/</link>
      <pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-distributed-systems/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://blog.bytebytego.com/p/a-crash-course-on-distributed-systems&#34; target=&#34;_blank&#34;&gt;https://blog.bytebytego.com/p/a-crash-course-on-distributed-systems&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;分布式系统是多台计算机（也称为节点）的集合，它们协作执行特定任务或提供服务。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]关系数据库设计速成课程</title>
      <link>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-relational-database/</link>
      <pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-relational-database/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://blog.bytebytego.com/p/a-crash-course-on-relational-database&#34; target=&#34;_blank&#34;&gt;https://blog.bytebytego.com/p/a-crash-course-on-relational-database&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;在当今数据驱动的世界中，高效存储和管理信息是各种规模的企业和组织的关键要求。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]领域驱动设计速成课程</title>
      <link>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-domain-driven-design/</link>
      <pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-domain-driven-design/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://blog.bytebytego.com/p/a-crash-course-on-domain-driven-design&#34; target=&#34;_blank&#34;&gt;https://blog.bytebytego.com/p/a-crash-course-on-domain-driven-design&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;为复杂领域开发软件是一项具有挑战性的任务。&lt;/p&gt;&#xA;&lt;p&gt;随着问题领域的复杂性不断增长，创建准确表示业务概念、规则和流程的软件变得越来越困难。设计不良的软件很快就会变成难以理解、难以维护和扩展的混乱代码。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]数据库分片速成课程</title>
      <link>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-in-database-sharding/</link>
      <pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-in-database-sharding/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://blog.bytebytego.com/p/a-crash-course-in-database-sharding&#34; target=&#34;_blank&#34;&gt;https://blog.bytebytego.com/p/a-crash-course-in-database-sharding&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;随着应用程序越来越受欢迎，它会吸引更多活跃用户并加入更多功能。这种增长导致每日数据生成量增加，从业务角度来看，这是一个积极的指标。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]数据库扩展策略速成课程</title>
      <link>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-in-database-scaling/</link>
      <pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-in-database-scaling/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://blog.bytebytego.com/p/a-crash-course-in-database-scaling&#34; target=&#34;_blank&#34;&gt;https://blog.bytebytego.com/p/a-crash-course-in-database-scaling&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;数据库是现代应用程序开发的支柱。它们在存储、管理和检索数据方面发挥着至关重要的作用，使应用程序和服务能够有效运行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JMS 2.0 的十个好处意味着可以减少代码编写量</title>
      <link>https://blog.chensoul.cc/posts/2024/07/24/jms20-means-less-code/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/24/jms20-means-less-code/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://javaee.github.io/jms-spec/pages/JMS20MeansLessCode&#34; target=&#34;_blank&#34;&gt;Ten ways in which JMS 2.0 means writing less code&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JMS 2.0 中的新增功能</title>
      <link>https://blog.chensoul.cc/posts/2024/07/24/what-is-new-in-jms-2-0/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/24/what-is-new-in-jms-2-0/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://hasithah.medium.com/what-is-new-in-jms-2-0-821266fc1bf0&#34; target=&#34;_blank&#34;&gt;What is new in JMS 2.0&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JMS 2.0 中的新增功能（第二部分）- 新的消息传送功能</title>
      <link>https://blog.chensoul.cc/posts/2024/07/24/jms20/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/24/jms20/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://www.oracle.com/technical-resources/articles/java/jms2messaging.html&#34; target=&#34;_blank&#34;&gt;https://www.oracle.com/technical-resources/articles/java/jms2messaging.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;作者：Nigel Deakin&lt;/em&gt;&#xA;出版日期：2013 年 5 月&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JMS 2.0 中的新增功能（第一部分）- 易于使用</title>
      <link>https://blog.chensoul.cc/posts/2024/07/24/jms20/</link>
      <pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/24/jms20/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://www.oracle.com/technical-resources/articles/java/jms20.html&#34; target=&#34;_blank&#34;&gt;https://www.oracle.com/technical-resources/articles/java/jms20.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;作者：Nigel Deakin&lt;/em&gt;&#xA;出版日期：2013 年 5 月&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JMS 点对点消息传递的实际应用</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/jms-point-to-point-messaging-in-action/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/jms-point-to-point-messaging-in-action/</guid>
      <description>&lt;p&gt;点对点系统使用队列进行消息传递。客户端将消息发送到特定队列，特定订阅者监听或接收来自该队列的消息。在 JMS 点对点消息传递系统中，队列用于处理单个发送者和单个消费者。确保您已经阅读了有关&lt;a href=&#34;https://jstobigdata.com/jms/jms-message-model/&#34; target=&#34;_blank&#34;&gt;JMS 消息模型&lt;/a&gt;以及&lt;a href=&#34;https://jstobigdata.com/jms/send-and-receive-message-in-jms/&#34; target=&#34;_blank&#34;&gt;如何在 JMS 中发送和接收消息的&lt;/a&gt;先前教程。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JMS 发布-订阅消息模型</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/jms-pub-sub-messaging-model/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/jms-pub-sub-messaging-model/</guid>
      <description>&lt;p&gt;在本文中，您将了解 JMS 发布-订阅 (publish-subscribe) 消息传递模型。正如您在&lt;a href=&#34;https://jstobigdata.com/jms/jms-introduction-java-message-service/&#34; target=&#34;_blank&#34;&gt;JMS 简介文章&lt;/a&gt;中所读到的，在发布/订阅模型中，客户端通过称为主题的中介将消息发送给多个接收者。发送者通常称为发布者，接收者称为订阅者。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JMS 事务的实际应用</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/jms-transactions-in-action/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/jms-transactions-in-action/</guid>
      <description>&lt;p&gt;在本文中，您将了解如何选择性地使用 JMS 事务。在 JMS 中，您可以选择控制一个会话的原子操作。每个会话都支持一系列事务。每个事务将一组生成或使用的消息分组为一个原子工作单元。确保您已经理解了&lt;a href=&#34;https://jstobigdata.com/jms/guaranteed-delivery-using-jms-message-acknowledgement/&#34; target=&#34;_blank&#34;&gt;JMS 中的消息确认&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JMS 消息模型</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/jms-message-model/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/jms-message-model/</guid>
      <description>&lt;p&gt;消息是 JMS 的核心，无论是事件还是业务数据。消息由标头、自定义属性和正文组成。这是您将在 JMS 消息模型（JMS 消息剖析）中学习的内容。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]JMS 消息优先级</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/jms-prioritize-messages/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/jms-prioritize-messages/</guid>
      <description>&lt;p&gt;我们将通过示例详细讨论 JMS 消息优先级。每条消息的标头字段代表其优先级。我在消息模型教程&lt;code&gt;JMSPriority&lt;/code&gt;中讨论过消息优先级。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]使用 JMS 消息确认保证传送</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/guaranteed-delivery-using-jms-message-acknowledgement/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/guaranteed-delivery-using-jms-message-acknowledgement/</guid>
      <description>&lt;p&gt;JMS 通过 JMS 消息确认（确认模式）确保消息传递的可靠性。如果会话已进行事务处理，则该&lt;code&gt;commit()&lt;/code&gt;方法会自动处理消息确认。否则，该方法将处理恢复&lt;code&gt;rollback()&lt;/code&gt;。在本文中，我们将假设会话未进行事务处理。这是一个高级主题，请确保您对 JMS 有基本的了解。如果您是 JMS 新手，可以参考使用 JMS&lt;a href=&#34;https://jstobigdata.com/jms/send-and-receive-message-in-jms/&#34; target=&#34;_blank&#34;&gt;发送和接收消息。&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]在 JMS 中发送和接收消息</title>
      <link>https://blog.chensoul.cc/posts/2024/07/23/send-and-receive-message-in-jms/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/07/23/send-and-receive-message-in-jms/</guid>
      <description>&lt;p&gt;您将了解 JMS 架构，学习如何在 JMS 中发送和接收消息。我将介绍管理对象、JMS 1.1 API 和 JMS 2.0 API。我们还将看到与 JMS 1.1 API 相比，JMS 2.0 API 的使用有多么简单。在继续学习本课程之前，请确保您已完成 JMS 设置。如果您是初学者，请确保您已了解&lt;a href=&#34;https://jstobigdata.com/jms/jms-introduction-java-message-service/&#34; target=&#34;_blank&#34;&gt;JMS 的基础知识&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]如何组织代码</title>
      <link>https://blog.chensoul.cc/posts/2024/05/30/how-to-structure-our-code/</link>
      <pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/05/30/how-to-structure-our-code/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://medium.com/@minadev/how-to-structure-our-code-b5e7b1c32c21&#34; target=&#34;_blank&#34;&gt;How to Structure Code&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]2024年最好的WebSocket替代品</title>
      <link>https://blog.chensoul.cc/posts/2024/05/07/websocket-alternatives/</link>
      <pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/05/07/websocket-alternatives/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://ably.com/topic/websocket-alternatives&#34; target=&#34;_blank&#34;&gt;https://ably.com/topic/websocket-alternatives&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;什么是-websocket&#34;&gt;什么是 WebSocket？&lt;/h2&gt;&#xA;&lt;p&gt;简而言之，WebSocket 是一种实时 Web 技术，可通过持久连接在客户端和服务器之间实现双向、全双工通信。 WebSocket 连接会根据需要保持活动状态（理论上，它可以永远持续），从而允许服务器和客户端以最小的开销随意发送数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]WebSocket API和协议说明</title>
      <link>https://blog.chensoul.cc/posts/2024/05/07/the-websocket-api-and-protocol-explained/</link>
      <pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/05/07/the-websocket-api-and-protocol-explained/</guid>
      <description>&lt;p&gt;原文地址：&lt;a href=&#34;https://ably.com/topic/websockets&#34; target=&#34;_blank&#34;&gt;https://ably.com/topic/websockets&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;WebSocket 标志着 Web 开发的转折点。 WebSocket 技术旨在以事件为驱动，并针对低延迟进行了优化，已成为许多寻求构建交互式实时数字体验以提供令人愉悦的用户体验的组织和开发人员的首选。本文探讨了与 WebSocket 相关的关键主题：&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]WebSocket与HTTP：2024年为您的项目选择哪一个</title>
      <link>https://blog.chensoul.cc/posts/2024/05/07/websockets-vs-http/</link>
      <pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/05/07/websockets-vs-http/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://ably.com/topic/websockets-vs-http&#34; target=&#34;_blank&#34;&gt;https://ably.com/topic/websockets-vs-http&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;当谈到 WebSocket 与 HTTP 时，决定使用哪一种并不总是那么明确。哪一个更好？您的应用程序应该使用哪一款？&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]什么是HTTP/3？</title>
      <link>https://blog.chensoul.cc/posts/2024/05/07/http3/</link>
      <pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/05/07/http3/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://www.pubnub.com/guides/http-3/&#34; target=&#34;_blank&#34;&gt;https://www.pubnub.com/guides/http-3/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;什么是-http3&#34;&gt;什么是 HTTP/3？&lt;/h2&gt;&#xA;&lt;p&gt;HTTP/3（或 HTTP-over-QUIC）是超文本传输协议 ( &lt;a href=&#34;https://www.pubnub.com/guides/http/&#34; target=&#34;_blank&#34;&gt;HTTP&lt;/a&gt; ) 的第三个主要版本。它是用于 Web 浏览器和服务器之间通信的应用层协议。 HTTP/3 旨在提高 Web 通信的性能和安全性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]什么是Socket.IO？</title>
      <link>https://blog.chensoul.cc/posts/2024/05/07/socket-io/</link>
      <pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/05/07/socket-io/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://www.pubnub.com/guides/socket-io/&#34; target=&#34;_blank&#34;&gt;https://www.pubnub.com/guides/socket-io/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;什么是socketio&#34;&gt;什么是Socket.IO？&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://socket.io/&#34; target=&#34;_blank&#34;&gt;Socket.IO&lt;/a&gt;是一个开源的跨平台库，它提供客户端和服务器之间基于事件的&lt;a href=&#34;https://www.geeksforgeeks.org/transmission-modes-computer-networks/&#34; target=&#34;_blank&#34;&gt;全双工双向通信&lt;/a&gt;。它基于 WebSocket 协议构建，提供附加功能，例如自动重新连接以及在无法使用 &lt;a href=&#34;https://www.pubnub.com/guides/what-are-websockets-and-when-should-you-use-them/&#34; target=&#34;_blank&#34;&gt;WebSocket时回退到&lt;/a&gt;&lt;a href=&#34;https://www.pubnub.com/blog/http-long-polling/&#34; target=&#34;_blank&#34;&gt;HTTP 长轮询。&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]什么是WebSocket？</title>
      <link>https://blog.chensoul.cc/posts/2024/05/07/websockets/</link>
      <pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2024/05/07/websockets/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://www.pubnub.com/guides/websockets/&#34; target=&#34;_blank&#34;&gt;https://www.pubnub.com/guides/websockets/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;什么是-websocket&#34;&gt;什么是 WebSocket？&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.pubnub.com/guides/tcp-ip/&#34; target=&#34;_blank&#34;&gt;WebSocket 是一种通过单个TCP&lt;/a&gt;连接提供全双工通信通道的通信协议。它支持客户端和服务器之间的实时、事件驱动的连接。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《Grokking the System Design Interview》设计Pastebin</title>
      <link>https://blog.chensoul.cc/posts/2023/11/24/designing-pastebin/</link>
      <pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/24/designing-pastebin/</guid>
      <description>&lt;p&gt;这是一篇双语翻译的文章，原文出自 &lt;a href=&#34;https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf&#34; target=&#34;_blank&#34;&gt;grok_system_design_interview.pdf&lt;/a&gt; 的一篇文章《Designing Pastebin》设计 Pastebin。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《Grokking the System Design Interview》域名系统</title>
      <link>https://blog.chensoul.cc/posts/2023/11/17/dns/</link>
      <pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/17/dns/</guid>
      <description>&lt;p&gt;这是一篇双语翻译的文章，原文出自《Grokking the System Design Interview》教程的 &lt;a href=&#34;https://www.educative.io/courses/grokking-modern-system-design-interview-for-engineers-managers/introduction-to-domain-name-system-dns&#34; target=&#34;_blank&#34;&gt;Domain Name System&lt;/a&gt; 这篇章节。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《Grokking the System Design Interview》系统设计访谈：分步指南</title>
      <link>https://blog.chensoul.cc/posts/2023/11/16/sdi-a-step-by-step-guide/</link>
      <pubDate>Thu, 16 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/16/sdi-a-step-by-step-guide/</guid>
      <description>&lt;p&gt;这是一篇双语翻译的文章，原文出自 &lt;a href=&#34;https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf&#34; target=&#34;_blank&#34;&gt;grok_system_design_interview.pdf&lt;/a&gt; 的一篇文章《System Design Interviews: A step by step guide》系统设计访谈：分步指南。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》1.高层分布式系统</title>
      <link>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-01/</link>
      <pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-01/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》2.抽象层次的上下</title>
      <link>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-02/</link>
      <pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-02/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》3.时间及顺序</title>
      <link>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-03/</link>
      <pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-03/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》5.复制：弱一致性模型协议</title>
      <link>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-05/</link>
      <pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-05/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》6.进一步阅读和附录</title>
      <link>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-06/</link>
      <pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-06/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者Mikito Takada撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p&gt;&#xA;&lt;p&gt;这本书涵盖了与分布式系统相关的广泛主题，包括网络、容错性、一致性模型、分布式算法、可扩展性等等。它旨在以清晰易懂的方式解释复杂的概念，适合初学者和有经验的分布式系统从业者阅读。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]给年轻的工程师们的关于分布式系统的一些笔记</title>
      <link>https://blog.chensoul.cc/posts/2023/11/10/notes-on-distributed-systems-for-young-bloods/</link>
      <pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/10/notes-on-distributed-systems-for-young-bloods/</guid>
      <description>&lt;p&gt;我一直在思考分布式系统工程师在工作中学到的教训。我们大部分的教导都来自于在生产环境中犯过的错误留下的伤痕。这些伤痕固然是有用的提醒，但让更多的工程师能够完整地保留手指会更好。&lt;/p&gt;&#xA;&lt;p&gt;新的系统工程师在自我学习中会遇到分布式计算的谬论和CAP定理。但这些都是抽象的概念，缺乏针对经验不足的工程师直接可行的建议。让人惊讶的是，新工程师在开始工作时所了解到的背景信息是如此之少。&lt;/p&gt;&#xA;&lt;p&gt;下面是我作为一名分布式系统工程师学到的一些经验教训，值得告诉新工程师。其中一些经验是微妙的，一些是令人惊讶的，但没有一条是有争议的。这个列表是为了引导新的分布式系统工程师思考他们所从事领域的问题，虽然不是全面的，但是是一个很好的开始。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]《分布式系统：为了乐趣和利益》介绍</title>
      <link>https://blog.chensoul.cc/posts/2023/11/09/distributed-systems-intro/</link>
      <pubDate>Thu, 09 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/11/09/distributed-systems-intro/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者Mikito Takada撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p&gt;&#xA;&lt;p&gt;这本书涵盖了与分布式系统相关的广泛主题，包括网络、容错性、一致性模型、分布式算法、可扩展性等等。它旨在以清晰易懂的方式解释复杂的概念，适合初学者和有经验的分布式系统从业者阅读。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]关于 HTTP 您需要了解的一切</title>
      <link>https://blog.chensoul.cc/posts/2023/10/12/http-in-depth/</link>
      <pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/10/12/http-in-depth/</guid>
      <description>&lt;p&gt;HTTP 是每个 Web 开发人员都应该了解的协议，因为它为整个 Web 提供动力。了解 HTTP 当然可以帮助您开发更好的应用程序。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]Spring Events</title>
      <link>https://blog.chensoul.cc/posts/2023/08/25/spring-events/</link>
      <pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/08/25/spring-events/</guid>
      <description>&lt;h2 id=&#34;1-概述&#34;&gt;1. 概述&lt;/h2&gt;&#xA;&lt;p&gt;在本教程中，我们将讨论如何在 Spring 中使用事件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]如何在Spring中执行@Async</title>
      <link>https://blog.chensoul.cc/posts/2023/08/25/spring-async/</link>
      <pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/08/25/spring-async/</guid>
      <description>&lt;h2 id=&#34;1-概述&#34;&gt;1. 概述&lt;/h2&gt;&#xA;&lt;p&gt;在本教程中，我们将探讨 Spring 中的异步执行支持和 &lt;code&gt;@Async&lt;/code&gt; 注解。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]使用@Async进行Spring Security上下文传播</title>
      <link>https://blog.chensoul.cc/posts/2023/08/25/spring-security-async-principal-propagation/</link>
      <pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/08/25/spring-security-async-principal-propagation/</guid>
      <description>&lt;h2 id=&#34;1-简介&#34;&gt;1. 简介&lt;/h2&gt;&#xA;&lt;p&gt;在本教程中，我们将重点关注使用 &lt;code&gt;@Async&lt;/code&gt; 传播 Spring Security 主体&#xA;默认情况下，Spring Security 身份验证绑定到 &lt;code&gt;ThreadLocal&lt;/code&gt; - 因此，当执行流在带有 &lt;code&gt;@Async&lt;/code&gt; 的新线程中运行时，它不会是经过身份验证的上下文。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]微服务设计模式</title>
      <link>https://blog.chensoul.cc/posts/2023/06/26/microservice-design-patterns/</link>
      <pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/26/microservice-design-patterns/</guid>
      <description>&lt;p&gt;基于微服务的应用程序的主要特征在 &lt;a href=&#34;http://web.archive.org/web/20190705163602/http://blog.arungupta.me/microservices-monoliths-noops/&#34; target=&#34;_blank&#34;&gt;微服务、单体和 NoOps&lt;/a&gt; 中定义。它们是功能分解或领域驱动设计、定义良好的接口、明确发布的接口、单一责任原则和潜在的多语言。每项服务都是完全自主和全栈的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]Python模块和包-简介</title>
      <link>https://blog.chensoul.cc/posts/2023/06/25/python-modules-packages/</link>
      <pubDate>Sun, 25 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/25/python-modules-packages/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;../../../static/images/Python-Modules-and-Packages-An-Introduction_Watermarked.webp&#34; alt=&#34;Python Modules &amp;amp; Packages&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>[译]使用 Python 的 pip 管理项目的依赖关系</title>
      <link>https://blog.chensoul.cc/posts/2023/06/01/what-is-pip/</link>
      <pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.chensoul.cc/posts/2023/06/01/what-is-pip/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://files.realpython.com/media/What-is-PIP_Watermarked.4944e95d83ad.jpg&#34; alt=&#34;Using Python&amp;rsquo;s pip to Manage Your Projects&amp;rsquo; Dependencies&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
