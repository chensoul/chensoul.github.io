<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on ChenSoul Blog</title><link>https://blog.chensoul.cc/posts/</link><description>Recent content in Posts on ChenSoul Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 24 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.chensoul.cc/posts/rss.xml" rel="self" type="application/rss+xml"/><item><title>Spring异常处理思路</title><link>https://blog.chensoul.cc/posts/2025/07/24/spring-exception/</link><pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/07/24/spring-exception/</guid><description>&lt;p>本文档描述了基于 Spring Boot 的异常处理设计思路，旨在构建一个统一、可扩展、支持国际化的异常处理体系。通过合理的异常分类、统一的响应格式和完善的国际化支持，为前端提供友好的错误信息，同时便于后端进行问题定位和监控。&lt;/p></description></item><item><title>ThingsBoard接口设计</title><link>https://blog.chensoul.cc/posts/2025/07/24/thingsboard-api/</link><pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/07/24/thingsboard-api/</guid><description>&lt;p>本文档整理了ThingsBoard平台的各种协议接口设计，作为IoT平台开发的参考。&lt;/p></description></item><item><title>Spring 国际化实现</title><link>https://blog.chensoul.cc/posts/2025/07/17/spring-i18n/</link><pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/07/17/spring-i18n/</guid><description>&lt;h2 id="-一设计背景">📜 一、设计背景&lt;/h2>
&lt;h3 id="11-国际化需求的产生">1.1 国际化需求的产生&lt;/h3>
&lt;p>随着软件应用的全球化发展，企业级应用需要支持多种语言和地区设置。Spring Framework 作为 Java 企业级开发的核心框架，必须提供完善的国际化（i18n）支持来满足以下需求：&lt;/p></description></item><item><title>RuoYi AI 源码分析</title><link>https://blog.chensoul.cc/posts/2025/07/15/ruoyi-ai/</link><pubDate>Tue, 15 Jul 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/07/15/ruoyi-ai/</guid><description>&lt;p>&lt;strong>RuoYi AI&lt;/strong> 是一个基于Spring Boot 3.4的企业级AI助手平台，深度集成FastGPT、扣子(Coze)、DIFY等主流AI平台，提供先进的RAG技术和多模型支持。&lt;/p></description></item><item><title>ThingsBoard HTTP Transport 实现方式</title><link>https://blog.chensoul.cc/posts/2025/07/02/thingsboard-http-transport/</link><pubDate>Wed, 02 Jul 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/07/02/thingsboard-http-transport/</guid><description>&lt;p>本篇文档系统梳理 ThingsBoard 平台 HTTP 设备接入的整体实现方式，重点详解 HTTP
自动注册（provision）机制的完整调用链、核心模块及消息流转机制，并补充核心注册逻辑代码说明，帮助理解其分层解耦与分布式架构设计。&lt;/p></description></item><item><title>Thingsboard源码中的OAuth2登录实现</title><link>https://blog.chensoul.cc/posts/2025/06/06/oauth2-client-login-in-thingsboard/</link><pubDate>Fri, 06 Jun 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/06/06/oauth2-client-login-in-thingsboard/</guid><description>&lt;h2 id="thingsboard-启用-oauth2-功能">Thingsboard 启用 OAuth2 功能&lt;/h2>
&lt;p>使用 &lt;a href="mailto:sysadmin@thingsboard.org">sysadmin@thingsboard.org&lt;/a> / sysadmin 账号登录 Thingsboard 系统之后，在安全 -&amp;gt; OAuth2.0 页面，点击OAuth2.0客户端，先创建一个客户端，这里我创建的是 Github 客户端。&lt;/p></description></item><item><title>Thingsboard源码中的代码片段</title><link>https://blog.chensoul.cc/posts/2025/04/30/codes-in-thingsboard/</link><pubDate>Wed, 30 Apr 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/04/30/codes-in-thingsboard/</guid><description>&lt;p>Uuids&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>UUID uuid &lt;span style="color:#f92672">=&lt;/span> Uuids.timeBased&lt;span style="color:#f92672">()&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Uuids.unixTimestamp&lt;span style="color:#f92672">(&lt;/span>uuid&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>UUID NULL_UUID &lt;span style="color:#f92672">=&lt;/span> Uuids.startOf&lt;span style="color:#f92672">(&lt;/span>0&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>UUIDConverter&lt;/p></description></item><item><title>使用 Docker 安装 Gitea</title><link>https://blog.chensoul.cc/posts/2025/04/08/install-gitea-using-docker/</link><pubDate>Tue, 08 Apr 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/04/08/install-gitea-using-docker/</guid><description>&lt;h2 id="安装-gitea">安装 Gitea&lt;/h2>
&lt;p>创建目录：&lt;/p></description></item><item><title>Canal原理、安装和测试</title><link>https://blog.chensoul.cc/posts/2025/03/31/canal-install-test/</link><pubDate>Mon, 31 Mar 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/03/31/canal-install-test/</guid><description>&lt;p>Canal 是阿里巴巴开源的一款分布式增量数据同步工具，主要用于基于 MySQL 数据库的增量日志 Binlog 解析，提供增量数据的订阅和消费。&lt;/p></description></item><item><title>常见分布式 ID 解决方案</title><link>https://blog.chensoul.cc/posts/2025/03/28/id-generator/</link><pubDate>Fri, 28 Mar 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/03/28/id-generator/</guid><description>&lt;p>分布式 ID 的生成是分布式系统中的一个核心问题，需要确保生成的 ID 全局唯一、性能高效，并且能够适应高并发和大规模的场景。以下是一些常见的分布式 ID 生成方案：&lt;/p></description></item><item><title>如何实现榜单 top N 统计</title><link>https://blog.chensoul.cc/posts/2025/02/17/top-n-using-redis/</link><pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/02/17/top-n-using-redis/</guid><description>&lt;p>以下是一个基于本地缓存 + Redis ZSet + 定时任务的榜单方案，适用于高并发场景：&lt;/p></description></item><item><title>区分偶发性超时和频繁超时的重试策略</title><link>https://blog.chensoul.cc/posts/2025/02/14/retry-for-timeout/</link><pubDate>Fri, 14 Feb 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/02/14/retry-for-timeout/</guid><description>&lt;p>在实际项目中，区分偶发性超时和频繁超时的重试策略非常重要。偶发性超时可能是由于网络抖动或临时负载过高引起的，适合立即重试；而频繁超时则可能是系统过载或下游服务不可用，此时应避免重试，以免加剧问题。&lt;/p>
&lt;p>在实际面试的过程中，经常会遇到类似的面试题目，这时候可以这样回答：&lt;/p>
&lt;blockquote>
&lt;p>在处理大量请求时，我们经常会遇到超时的情况。为了合理控制重试行为，避免所谓的“重试风暴”，我设计了一个基于时间窗口的算法。在这个算法中，我们维护了一个滑动窗口，窗口内记录了每个请求的时间戳以及该请求是否超时。每当一个请求超时后，我们会统计窗口内超时的请求数量。如果超时请求的数量超过了设定的阈值，我们就认为当前系统压力较大，不适合进行重试；否则，我们认为可以安全地进行重试。&lt;/p></description></item><item><title>什么是限流</title><link>https://blog.chensoul.cc/posts/2025/02/14/rate-limit/</link><pubDate>Fri, 14 Feb 2025 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2025/02/14/rate-limit/</guid><description>&lt;p>在互联网领域，限流是指对进入系统的请求数量或频率进行控制的一种机制，以防止系统因流量暴增而过载，从而保障系统的稳定性和可用性。&lt;/p></description></item><item><title>2024年我的付费软件</title><link>https://blog.chensoul.cc/posts/2024/12/31/til/</link><pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/12/31/til/</guid><description>&lt;p>2024 年的付费软件：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>TablePlus：&lt;/p></description></item><item><title>2024-12-27｜今天我做了什么</title><link>https://blog.chensoul.cc/posts/2024/12/27/til/</link><pubDate>Fri, 27 Dec 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/12/27/til/</guid><description>&lt;p>今天我做了什么？&lt;/p>
&lt;ul>
&lt;li>
&lt;p>更新文章 &lt;a href="https://blog.chensoul.cc/posts/2023/01/25/notes-about-deploy-services-in-vps/">我的VPS服务部署记录&lt;/a>&lt;/p>
&lt;ul>
&lt;li>使用 docker 部署 &lt;a href="https://github.com/Finb/Bark" target="_blank">Bark&lt;/a>、&lt;a href="https://github.com/plankanban/planka" target="_blank">Planka&lt;/a>、&lt;a href="https://github.com/hoarder-app/hoarder" target="_blank">Hoarder&lt;/a>&lt;/li>
&lt;li>将 memos 中的书签导入 hoarder，并将 memos 版本退回到 0.21.0 ，因为 0.21.0 之后的版本去掉了分享功能。同时需要修改 memos api，同步修改 &lt;a href="https://github.com/chensoul/chensoul/blob/main/fetch_memos.py" target="_blank">fetch_memos.py&lt;/a> 文件，将 &lt;a href="https://memos.chensoul.cc/api/v1/memos" target="_blank">https://memos.chensoul.cc/api/v1/memos&lt;/a> 改为 &lt;a href="https://memos.chensoul.cc/api/v2/memos" target="_blank">https://memos.chensoul.cc/api/v2/memos&lt;/a>&lt;/li>
&lt;li>完善备份脚本，并在 macos 上通过 crontab 下载 vps 上的备份文件到本地的 icloud 目录下&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> * * * scp -r root@vps.chensoul.cc://data/backup /Users/chensoul/Library/Mobile&lt;span style="color:#ae81ff">\ &lt;/span>Documents/com&lt;span style="color:#ae81ff">\~&lt;/span>apple&lt;span style="color:#ae81ff">\~&lt;/span>CloudDocs/vps/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>推荐博客 &lt;a href="https://www.jinhuaiyao.com/" target="_blank">Huaiyao Jin&lt;/a>&lt;/p></description></item><item><title>ThingsBoard源码中的Github Actions</title><link>https://blog.chensoul.cc/posts/2024/12/03/github-actions-in-thingsboard/</link><pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/12/03/github-actions-in-thingsboard/</guid><description>&lt;p>ThingsBoard 源码地址：&lt;a href="https://github.com/thingsboard/thingsboard" target="_blank">https://github.com/thingsboard/thingsboard&lt;/a>，其 .github/workflows 目录下面有两个文件：&lt;/p></description></item><item><title>ThingsBoard源码中的Security</title><link>https://blog.chensoul.cc/posts/2024/12/03/security-in-thingsboard/</link><pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/12/03/security-in-thingsboard/</guid><description>&lt;p>ThingsBoard 源码地址：&lt;a href="https://github.com/thingsboard/thingsboard" target="_blank">https://github.com/thingsboard/thingsboard&lt;/a>，启动成功之后，使用系统管理员： &lt;a href="mailto:sysadmin@thingsboard.org">sysadmin@thingsboard.org&lt;/a> / sysadmin 进行登陆。&lt;/p></description></item><item><title>2024-11-14-Quarkus 快速入门</title><link>https://blog.chensoul.cc/posts/2024/11/14/quarkus-quick-start/</link><pubDate>Thu, 14 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/11/14/quarkus-quick-start/</guid><description>&lt;h2 id="使用--quarkus-cli-创建项目">使用 Quarkus CLI 创建项目&lt;/h2>
&lt;ol>
&lt;li>使用 sdk 安装&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sdk install quarkus
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>创建应用&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>quarkus create &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd code-with-quarkus
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>出现异常：&lt;/p></description></item><item><title>2024-11-13｜今天我做了什么</title><link>https://blog.chensoul.cc/posts/2024/11/13/til/</link><pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/11/13/til/</guid><description>&lt;h2 id="spring-周报">Spring 周报&lt;/h2>
&lt;p>&lt;a href="https://spring.io/blog/2024/11/12/this-week-in-spring-november-12th-2024" target="_blank">This Week in Spring - November 12th, 2024&lt;/a>&lt;/p></description></item><item><title>[译]从JUnit4迁移到JUnit5：权威指南</title><link>https://blog.chensoul.cc/posts/2024/11/07/junit-5-migration/</link><pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/11/07/junit-5-migration/</guid><description>&lt;p>在本文中，我们将了解从 JUnit 4 迁移到 JUnit 5 所需的步骤。我们将了解如何运行新版本的现有测试，以及迁移代码需要进行哪些更改。&lt;/p></description></item><item><title>2024-11-07｜今天我做了什么</title><link>https://blog.chensoul.cc/posts/2024/11/07/til/</link><pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/11/07/til/</guid><description>&lt;h1 id="构建-docker-镜像---最佳实践">构建 Docker 镜像 - 最佳实践&lt;/h1>
&lt;p>&lt;a href="https://www.marcobehler.com/guides/building-docker-images" target="_blank">构建 Docker 镜像 - 最佳实践&lt;/a> 笔记：&lt;/p></description></item><item><title>2024-11-06｜今天我做了什么</title><link>https://blog.chensoul.cc/posts/2024/11/06/til/</link><pubDate>Wed, 06 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/11/06/til/</guid><description>&lt;p>&lt;a href="https://x.com/david_syer/status/1849839624325157198?s=12" target="_blank">David Syer 博士宣布推出 Spring GRPC 项目&lt;/a>&lt;/p></description></item><item><title>2024-11-05｜今天我做了什么</title><link>https://blog.chensoul.cc/posts/2024/11/05/til/</link><pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/11/05/til/</guid><description>&lt;h2 id="图片转换">图片转换&lt;/h2>
&lt;h3 id="使用-sip-将-jpg-图片转为-png">使用 sip 将 JPG 图片转为 PNG&lt;/h3>
&lt;p>macos 上先安装 sip：&lt;/p></description></item><item><title>2024-11-04｜SivaLabs博客文章</title><link>https://blog.chensoul.cc/posts/2024/11/04/sivalabs-blog-posts/</link><pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/11/04/sivalabs-blog-posts/</guid><description>&lt;p>以下是 &lt;a href="https://www.sivalabs.in/" target="_blank">SivaLabs 博客&lt;/a> 中的一些文章，记录在此，方便后面阅读。&lt;/p></description></item><item><title>Kafka 安装和快速上手</title><link>https://blog.chensoul.cc/posts/2024/10/17/kafka-install-and-quickstart/</link><pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/10/17/kafka-install-and-quickstart/</guid><description>&lt;h2 id="下载-kafka">下载 Kafka&lt;/h2>
&lt;p>&lt;a href="https://kafka.apache.org/downloads" target="_blank">下载&lt;/a> 最新的版本&lt;/p></description></item><item><title>Kafka 基础知识</title><link>https://blog.chensoul.cc/posts/2024/10/17/kafka-fundamental/</link><pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/10/17/kafka-fundamental/</guid><description>&lt;p>Kafka 是一个分布式流式处理平台。&lt;/p>
&lt;p>流平台具有三个关键功能：&lt;/p></description></item><item><title>[译]Spring Security 和 JWT 入门</title><link>https://blog.chensoul.cc/posts/2024/10/15/spring-security-jwt/</link><pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/10/15/spring-security-jwt/</guid><description>&lt;p>&lt;a href="https://docs.spring.io/spring-security/reference/index.html" target="_blank">Spring Security&lt;/a> 为 Java 应用程序提供了一套全面的安全功能，涵盖身份验证、授权、会话管理以及针对&lt;a href="https://reflectoring.io/spring-csrf/" target="_blank">CSRF（跨站点请求伪造）&lt;/a>等常见安全威胁的防护。Spring Security 框架具有高度可定制性，允许开发人员根据其应用程序需求来管理安全配置。它提供了一个灵活的架构，支持各种身份验证机制，如基本身份验证、JWT 和 OAuth。&lt;/p></description></item><item><title>[译]测试 Spring Boot 应用程序：最佳实践和框架</title><link>https://blog.chensoul.cc/posts/2024/10/14/testing-spring-boot-applications-best-practices-and-frameworks/</link><pubDate>Mon, 14 Oct 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/10/14/testing-spring-boot-applications-best-practices-and-frameworks/</guid><description>&lt;p>测试是软件开发不可或缺的一部分。它可确保您的 Spring Boot 应用程序按预期运行，并在不断发展的过程中继续保持这种状态。在本文中，我们将探讨如何使用最佳实践和工具测试 Spring Boot 应用程序。&lt;/p></description></item><item><title>ActiveMQ源码-BrokerService和PersistenceAdapter</title><link>https://blog.chensoul.cc/posts/2024/08/27/activemq-source-code-broker-service/</link><pubDate>Tue, 27 Aug 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/08/27/activemq-source-code-broker-service/</guid><description>&lt;p>activemq-broker 模块 test/java 目录下有个 IDERunner 类：&lt;/p></description></item><item><title>ThingsBoard源码编译和Idea运行</title><link>https://blog.chensoul.cc/posts/2024/08/27/thingsboard-code-source-compile/</link><pubDate>Tue, 27 Aug 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/08/27/thingsboard-code-source-compile/</guid><description>&lt;p>ThingsBoard 源码地址：&lt;a href="https://github.com/thingsboard/thingsboard" target="_blank">https://github.com/thingsboard/thingsboard&lt;/a>，从 &lt;a href="https://github.com/thingsboard/thingsboard/releases/tag/v3.7" target="_blank">3.7&lt;/a> 版本之后，要求 JDK17。官方提供了源码编译的文档：&lt;a href="https://thingsboard.io/docs/user-guide/install/building-from-source/" target="_blank">Building from sources&lt;/a>&lt;/p></description></item><item><title>ActiveMQ源码本地调试运行</title><link>https://blog.chensoul.cc/posts/2024/08/09/debug-activemq-source-code/</link><pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/08/09/debug-activemq-source-code/</guid><description>&lt;h2 id="源码构建">源码构建&lt;/h2>
&lt;p>1、从 &lt;a href="https://github.com/apache/activemq" target="_blank">https://github.com/apache/activemq&lt;/a> 下载源码&lt;/p></description></item><item><title>[译]分布式系统速成课程</title><link>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-distributed-systems/</link><pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-distributed-systems/</guid><description>&lt;p>原文链接：&lt;a href="https://blog.bytebytego.com/p/a-crash-course-on-distributed-systems" target="_blank">https://blog.bytebytego.com/p/a-crash-course-on-distributed-systems&lt;/a>&lt;/p>
&lt;p>分布式系统是多台计算机（也称为节点）的集合，它们协作执行特定任务或提供服务。&lt;/p></description></item><item><title>[译]关系数据库设计速成课程</title><link>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-relational-database/</link><pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-relational-database/</guid><description>&lt;p>原文链接：&lt;a href="https://blog.bytebytego.com/p/a-crash-course-on-relational-database" target="_blank">https://blog.bytebytego.com/p/a-crash-course-on-relational-database&lt;/a>&lt;/p>
&lt;p>在当今数据驱动的世界中，高效存储和管理信息是各种规模的企业和组织的关键要求。&lt;/p></description></item><item><title>[译]领域驱动设计速成课程</title><link>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-domain-driven-design/</link><pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-on-domain-driven-design/</guid><description>&lt;p>原文链接：&lt;a href="https://blog.bytebytego.com/p/a-crash-course-on-domain-driven-design" target="_blank">https://blog.bytebytego.com/p/a-crash-course-on-domain-driven-design&lt;/a>&lt;/p>
&lt;p>为复杂领域开发软件是一项具有挑战性的任务。&lt;/p>
&lt;p>随着问题领域的复杂性不断增长，创建准确表示业务概念、规则和流程的软件变得越来越困难。设计不良的软件很快就会变成难以理解、难以维护和扩展的混乱代码。&lt;/p></description></item><item><title>[译]数据库分片速成课程</title><link>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-in-database-sharding/</link><pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-in-database-sharding/</guid><description>&lt;p>原文链接：&lt;a href="https://blog.bytebytego.com/p/a-crash-course-in-database-sharding" target="_blank">https://blog.bytebytego.com/p/a-crash-course-in-database-sharding&lt;/a>&lt;/p>
&lt;p>随着应用程序越来越受欢迎，它会吸引更多活跃用户并加入更多功能。这种增长导致每日数据生成量增加，从业务角度来看，这是一个积极的指标。&lt;/p></description></item><item><title>[译]数据库扩展策略速成课程</title><link>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-in-database-scaling/</link><pubDate>Mon, 05 Aug 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/08/05/a-crash-course-in-database-scaling/</guid><description>&lt;p>原文链接：&lt;a href="https://blog.bytebytego.com/p/a-crash-course-in-database-scaling" target="_blank">https://blog.bytebytego.com/p/a-crash-course-in-database-scaling&lt;/a>&lt;/p>
&lt;p>数据库是现代应用程序开发的支柱。它们在存储、管理和检索数据方面发挥着至关重要的作用，使应用程序和服务能够有效运行。&lt;/p></description></item><item><title>Github Action 发布 Jar 到 Maven 中央仓库</title><link>https://blog.chensoul.cc/posts/2024/08/01/publishing-a-jar-to-maven-repository-with-github-action/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/08/01/publishing-a-jar-to-maven-repository-with-github-action/</guid><description>&lt;p>作为一名 Java 开发者,将自己的项目发布到 Maven 中央仓库是一个非常重要的步骤。这不仅可以让更多的开发者发现和使用您的项目,也可以提高项目的知名度和影响力。&lt;/p></description></item><item><title>[译]JMS 2.0 的十个好处意味着可以减少代码编写量</title><link>https://blog.chensoul.cc/posts/2024/07/24/jms20-means-less-code/</link><pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/24/jms20-means-less-code/</guid><description>&lt;p>原文链接：&lt;a href="https://javaee.github.io/jms-spec/pages/JMS20MeansLessCode" target="_blank">Ten ways in which JMS 2.0 means writing less code&lt;/a>&lt;/p></description></item><item><title>[译]JMS 2.0 中的新增功能</title><link>https://blog.chensoul.cc/posts/2024/07/24/what-is-new-in-jms-2-0/</link><pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/24/what-is-new-in-jms-2-0/</guid><description>&lt;p>原文链接：&lt;a href="https://hasithah.medium.com/what-is-new-in-jms-2-0-821266fc1bf0" target="_blank">What is new in JMS 2.0&lt;/a>&lt;/p></description></item><item><title>[译]JMS 2.0 中的新增功能（第二部分）- 新的消息传送功能</title><link>https://blog.chensoul.cc/posts/2024/07/24/jms20/</link><pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/24/jms20/</guid><description>&lt;p>原文链接：&lt;a href="https://www.oracle.com/technical-resources/articles/java/jms2messaging.html" target="_blank">https://www.oracle.com/technical-resources/articles/java/jms2messaging.html&lt;/a>&lt;/p>
&lt;p>&lt;em>作者：Nigel Deakin&lt;/em>
出版日期：2013 年 5 月&lt;/p></description></item><item><title>[译]JMS 2.0 中的新增功能（第一部分）- 易于使用</title><link>https://blog.chensoul.cc/posts/2024/07/24/jms20/</link><pubDate>Wed, 24 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/24/jms20/</guid><description>&lt;p>原文链接：&lt;a href="https://www.oracle.com/technical-resources/articles/java/jms20.html" target="_blank">https://www.oracle.com/technical-resources/articles/java/jms20.html&lt;/a>&lt;/p>
&lt;p>&lt;em>作者：Nigel Deakin&lt;/em>
出版日期：2013 年 5 月&lt;/p></description></item><item><title>[译]JMS 点对点消息传递的实际应用</title><link>https://blog.chensoul.cc/posts/2024/07/23/jms-point-to-point-messaging-in-action/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/23/jms-point-to-point-messaging-in-action/</guid><description>&lt;p>点对点系统使用队列进行消息传递。客户端将消息发送到特定队列，特定订阅者监听或接收来自该队列的消息。在 JMS 点对点消息传递系统中，队列用于处理单个发送者和单个消费者。确保您已经阅读了有关&lt;a href="https://jstobigdata.com/jms/jms-message-model/" target="_blank">JMS 消息模型&lt;/a>以及&lt;a href="https://jstobigdata.com/jms/send-and-receive-message-in-jms/" target="_blank">如何在 JMS 中发送和接收消息的&lt;/a>先前教程。&lt;/p></description></item><item><title>[译]JMS 发布-订阅消息模型</title><link>https://blog.chensoul.cc/posts/2024/07/23/jms-pub-sub-messaging-model/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/23/jms-pub-sub-messaging-model/</guid><description>&lt;p>在本文中，您将了解 JMS 发布-订阅 (publish-subscribe) 消息传递模型。正如您在&lt;a href="https://jstobigdata.com/jms/jms-introduction-java-message-service/" target="_blank">JMS 简介文章&lt;/a>中所读到的，在发布/订阅模型中，客户端通过称为主题的中介将消息发送给多个接收者。发送者通常称为发布者，接收者称为订阅者。&lt;/p></description></item><item><title>[译]JMS 事务的实际应用</title><link>https://blog.chensoul.cc/posts/2024/07/23/jms-transactions-in-action/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/23/jms-transactions-in-action/</guid><description>&lt;p>在本文中，您将了解如何选择性地使用 JMS 事务。在 JMS 中，您可以选择控制一个会话的原子操作。每个会话都支持一系列事务。每个事务将一组生成或使用的消息分组为一个原子工作单元。确保您已经理解了&lt;a href="https://jstobigdata.com/jms/guaranteed-delivery-using-jms-message-acknowledgement/" target="_blank">JMS 中的消息确认&lt;/a>。&lt;/p></description></item><item><title>[译]JMS 消息模型</title><link>https://blog.chensoul.cc/posts/2024/07/23/jms-message-model/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/23/jms-message-model/</guid><description>&lt;p>消息是 JMS 的核心，无论是事件还是业务数据。消息由标头、自定义属性和正文组成。这是您将在 JMS 消息模型（JMS 消息剖析）中学习的内容。&lt;/p></description></item><item><title>[译]JMS 消息选择器在过滤消息中的应用</title><link>https://blog.chensoul.cc/posts/2024/07/23/jms-message-selectors-in-action-to-filter-messages/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/23/jms-message-selectors-in-action-to-filter-messages/</guid><description>&lt;p>发送给接收方的消息通常需要根据某些标准进行过滤。JMS 提供消息选择器，允许 JMS 消费者根据消息头指定其感兴趣的消息。在本文中，您将学习使用 JMS 消息选择器来过滤消息。&lt;/p></description></item><item><title>[译]JMS 消息优先级</title><link>https://blog.chensoul.cc/posts/2024/07/23/jms-prioritize-messages/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/23/jms-prioritize-messages/</guid><description>&lt;p>我们将通过示例详细讨论 JMS 消息优先级。每条消息的标头字段代表其优先级。我在消息模型教程&lt;code>JMSPriority&lt;/code>中讨论过消息优先级。&lt;/p></description></item><item><title>[译]JMS介绍 – Java消息服务</title><link>https://blog.chensoul.cc/posts/2024/07/23/jms-introduction-java-message-service/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/23/jms-introduction-java-message-service/</guid><description>&lt;p>JMS 代表 Java 消息服务，它是 Java 中访问消息中间件服务器的标准。这是一个 JMS 介绍教程，为您提供消息传递和 JMS 的简要概述。您将了解使用 JMS 的优势以及 JMS 中的不同消息传递模型。&lt;/p></description></item><item><title>[译]使用 JMS 消息确认保证传送</title><link>https://blog.chensoul.cc/posts/2024/07/23/guaranteed-delivery-using-jms-message-acknowledgement/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/23/guaranteed-delivery-using-jms-message-acknowledgement/</guid><description>&lt;p>JMS 通过 JMS 消息确认（确认模式）确保消息传递的可靠性。如果会话已进行事务处理，则该&lt;code>commit()&lt;/code>方法会自动处理消息确认。否则，该方法将处理恢复&lt;code>rollback()&lt;/code>。在本文中，我们将假设会话未进行事务处理。这是一个高级主题，请确保您对 JMS 有基本的了解。如果您是 JMS 新手，可以参考使用 JMS&lt;a href="https://jstobigdata.com/jms/send-and-receive-message-in-jms/" target="_blank">发送和接收消息。&lt;/a>&lt;/p></description></item><item><title>[译]完整的 JMS 2.0 教程</title><link>https://blog.chensoul.cc/posts/2024/07/23/a-complete-jms-2-0-tutorial/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/23/a-complete-jms-2-0-tutorial/</guid><description>&lt;p>JMS 代表 Java 消息服务，它是 Java 中访问消息中间件服务器的标准。消息传递是在各种应用程序或服务之间交换业务数据的过程。这是&lt;strong>一个完整的 JMS 2.0 教程，&lt;/strong> 其中包含大量代码示例。完整的代码示例可在 GitHub 上找到，请下载并运行示例。本教程使用 Glassfish 开源服务器作为 JMS 提供程序的示例。&lt;/p></description></item><item><title>[译]为 JMS 安装和设置 Glassfish</title><link>https://blog.chensoul.cc/posts/2024/07/23/install-and-setup-glassfish-for-jms/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/23/install-and-setup-glassfish-for-jms/</guid><description>&lt;p>在本文中，我们将为 JMS 2.0 设置 Glassfish，创建一个 Java 项目并添加必要的依赖项。&lt;/p></description></item><item><title>[译]在 JMS 中发送和接收消息</title><link>https://blog.chensoul.cc/posts/2024/07/23/send-and-receive-message-in-jms/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/23/send-and-receive-message-in-jms/</guid><description>&lt;p>您将了解 JMS 架构，学习如何在 JMS 中发送和接收消息。我将介绍管理对象、JMS 1.1 API 和 JMS 2.0 API。我们还将看到与 JMS 1.1 API 相比，JMS 2.0 API 的使用有多么简单。在继续学习本课程之前，请确保您已完成 JMS 设置。如果您是初学者，请确保您已了解&lt;a href="https://jstobigdata.com/jms/jms-introduction-java-message-service/" target="_blank">JMS 的基础知识&lt;/a>。&lt;/p></description></item><item><title>GitLab Runner安装和部署</title><link>https://blog.chensoul.cc/posts/2024/07/19/gitlab-runner-install/</link><pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/19/gitlab-runner-install/</guid><description>&lt;h2 id="介绍">介绍&lt;/h2>
&lt;p>GitLab Runner 是一个用于在 GitLab CI/CD（持续集成/持续交付）流水线中运行作业（Jobs）的开源工具。它充当了 GitLab CI/CD 系统中的代理，负责接收作业请求、执行作业脚本并报告结果。&lt;/p></description></item><item><title>将 Maven 站点发布到 GitHub Pages</title><link>https://blog.chensoul.cc/posts/2024/07/18/publishing-a-maven-site-to-github-pages/</link><pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/18/publishing-a-maven-site-to-github-pages/</guid><description>&lt;p>本文源代码：&lt;a href="https://github.com/chensoul/maven-site-github-example/" target="_blank">https://github.com/chensoul/maven-site-github-example/&lt;/a> 。&lt;/p>
&lt;h2 id="创建-java-maven-项目">创建 Java Maven 项目&lt;/h2>
&lt;p>让我们使用 Maven 创建一个简单的 Java 项目&lt;/p></description></item><item><title>Gitlab安装和部署-使用yum源</title><link>https://blog.chensoul.cc/posts/2024/07/15/install-gitlab-using-yum/</link><pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/15/install-gitlab-using-yum/</guid><description>&lt;h2 id="gitlab-server-部署">Gitlab Server 部署&lt;/h2>
&lt;h3 id="1环境配置">1、环境配置&lt;/h3>
&lt;p>关闭防火墙、SELinux&lt;/p></description></item><item><title>Git介绍</title><link>https://blog.chensoul.cc/posts/2024/07/15/git/</link><pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/15/git/</guid><description>&lt;h2 id="gitgithubgitlab-的区别">Git、Github、Gitlab 的区别&lt;/h2>
&lt;p>Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。&lt;/p></description></item><item><title>Git使用</title><link>https://blog.chensoul.cc/posts/2024/07/15/git/</link><pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/15/git/</guid><description>&lt;h2 id="部署git-服务">部署Git 服务&lt;/h2>
&lt;p>&lt;strong>创建git仓库&lt;/strong>&lt;/p></description></item><item><title>Minikube快速入门</title><link>https://blog.chensoul.cc/posts/2024/07/10/minikube-quick-start/</link><pubDate>Wed, 10 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/10/minikube-quick-start/</guid><description>&lt;h2 id="安装">安装&lt;/h2>
&lt;p>macos 系统使用 brew 安装&lt;/p></description></item><item><title>Spring Boot集成SpringDoc生成Api文档</title><link>https://blog.chensoul.cc/posts/2024/07/10/springdoc-with-spring-boot/</link><pubDate>Wed, 10 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/10/springdoc-with-spring-boot/</guid><description>&lt;p>以下以 Maven 为例介绍 Spring Boot集成SpringDoc生成Api文档。&lt;/p></description></item><item><title>Docker安装和配置</title><link>https://blog.chensoul.cc/posts/2024/07/09/install-docker/</link><pubDate>Tue, 09 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/09/install-docker/</guid><description>&lt;h1 id="centos7安装docker">Centos7安装Docker&lt;/h1>
&lt;h2 id="配置宿主机网卡转发">配置宿主机网卡转发&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 配置网卡转发，看值是否为1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sysctl -a |grep -w net.ipv4.ip_forward
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.ip_forward = &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 若未配置，需要执行如下&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/sysctl.d/docker.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.bridge.bridge-nf-call-ip6tables = &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.bridge.bridge-nf-call-iptables = &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>net.ipv4.ip_forward=&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EOF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sysctl -p /etc/sysctl.d/docker.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="yum安装配置docker">Yum安装配置docker&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 下载阿里源repo文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo yum install -y yum-utils
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo yum-config-manager --add-repo http&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>//mirrors.aliyun.com/repo/Centos-&lt;span style="color:#ae81ff">7&lt;/span>.repo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo yum-config-manager --add-repo http&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span>//mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo yum clean all &amp;amp;&amp;amp; yum makecache
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## yum安装&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo yum install -y docker-ce docker-ce-cli 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 设置开机自启&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl enable docker 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 启动docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl start docker 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 查看docker信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## docker-client&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>which docker
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## docker daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ps aux |grep docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装 Compose plugin：&lt;/p></description></item><item><title>使用 Docker 容器化并运行 Spring Boot 应用程序</title><link>https://blog.chensoul.cc/posts/2024/07/09/docker-for-spring-boot/</link><pubDate>Tue, 09 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/09/docker-for-spring-boot/</guid><description>&lt;blockquote>
&lt;p>本文翻译自 Docker 官方网站的《&lt;a href="https://docs.docker.com/guides/java/" target="_blank">Java language-specific guide&lt;/a>》文章，并做了一些改动。&lt;/p></description></item><item><title>[译]Minikube 中的 Minions - 面向 Java 开发人员的 Kubernetes 简介</title><link>https://blog.chensoul.cc/posts/2024/07/08/minions-in-minikube-a-kubernetes-intro-for-java-de/</link><pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/08/minions-in-minikube-a-kubernetes-intro-for-java-de/</guid><description>&lt;p>我们希望我们的微服务是可复制、可替换的工作程序，我们可以轻松升级或降级，无需停机，管理也只需最少。我们可能会说我们希望他们是我们的奴才。在本文中，我们将通过一个简单的示例来了解 Kubernetes 通过创建和编排奴才大军可以为我们做些什么。您可以按照本文进行编码，也可以从&lt;a href="https://github.com/ryandawsonuk/minions/blob/master/minion-army.yml" target="_blank">此处&lt;/a>克隆项目。&lt;/p></description></item><item><title>[译]面向 Java 开发人员的 Kubernetes</title><link>https://blog.chensoul.cc/posts/2024/07/08/kubernetes-for-java-developers/</link><pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/08/kubernetes-for-java-developers/</guid><description>&lt;blockquote>
&lt;p>有一类新工具可用于将应用程序 docker 化并部署到 Kubernetes，这些工具专门面向开发人员。该类别中的最新工具是 RedHat 的 JKube。&lt;/p></description></item><item><title>ActiveMQ安装和使用</title><link>https://blog.chensoul.cc/posts/2024/07/05/install-activemq/</link><pubDate>Fri, 05 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/05/install-activemq/</guid><description>&lt;p>ActiveMQ 是一个实现了 JMS 协议的开源消息中间件，目前它有两种版本：ActiveMQ &amp;ldquo;Classic&amp;rdquo; 和 ActiveMQ Artemis。&lt;/p></description></item><item><title>Gitlab安装和部署-使用Docker</title><link>https://blog.chensoul.cc/posts/2024/06/26/install-gitlab/</link><pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/26/install-gitlab/</guid><description>&lt;h2 id="安装-gitlab">安装 Gitlab&lt;/h2>
&lt;p>安装 gitlab-ce 版本，当前最新版本为 17.2.0&lt;/p></description></item><item><title>Jenkins安装和部署-使用Docker</title><link>https://blog.chensoul.cc/posts/2024/06/26/install-jenkins/</link><pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/26/install-jenkins/</guid><description>&lt;h2 id="使用-docker-安装">使用 Docker 安装&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker volume create --name jenkins_data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker run -p 8080:8080 -p 50000:50000 -v jenkins_data://var/jenkins_home jenkins/jenkins:jdk21
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第一次启动 Jenkins 时，Docker 日志将包含如下消息：&lt;/p></description></item><item><title>Tengine动态裁剪图片</title><link>https://blog.chensoul.cc/posts/2024/06/26/install-cert-manager/</link><pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/26/install-cert-manager/</guid><description>&lt;h2 id="软件列表">软件列表&lt;/h2>
&lt;ul>
&lt;li>Tengine：&lt;a href="https://github.com/alibaba/tengine" target="_blank">https://github.com/alibaba/tengine&lt;/a>&lt;/li>
&lt;li>Lua：&lt;a href="http://www.lua.org/ftp/" target="_blank">http://www.lua.org/ftp/&lt;/a> ，这里使用 lua-5.3.1.tar.gz&lt;/li>
&lt;li>LuaJIT：&lt;a href="">http://luajit.org/download.html&lt;/a> ，这里使用 LuaJIT-2.0.4.tar.gz&lt;/li>
&lt;li>GraphicdMagick：&lt;a href="https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/" target="_blank">https://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/&lt;/a> ，这里使用 GraphicsMagick-1.3.18.tar.gz&lt;/li>
&lt;/ul>
&lt;h2 id="安装lua">安装Lua&lt;/h2>
&lt;p>先安装依赖：&lt;/p></description></item><item><title>搭建本地 Maven 仓库 Artifactory 开源版</title><link>https://blog.chensoul.cc/posts/2024/06/25/install-artifactory-oss/</link><pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/25/install-artifactory-oss/</guid><description>&lt;h2 id="安装-artifactory">安装 Artifactory&lt;/h2>
&lt;p>官方下载安装地址：&lt;a href="https://jfrog.com/community/download-artifactory-oss/" target="_blank">https://jfrog.com/community/download-artifactory-oss/&lt;/a> ，支持三种安装方式：&lt;/p></description></item><item><title>搭建本地Maven仓库Nexus</title><link>https://blog.chensoul.cc/posts/2024/06/25/install-nexus/</link><pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/25/install-nexus/</guid><description>&lt;h2 id="使用-docker-安装">使用 Docker 安装&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker volume create --name nexus_data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker run -d -p 8081:8081--name nexus -v nexus_data://nexus-data sonatype/nexus3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>8081 是 Nexus UI 端口&lt;/li>
&lt;/ul>
&lt;h2 id="使用-docker-compose-安装">使用 Docker Compose 安装&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">nexus&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">sonatype/nexus3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">platform&lt;/span>: &lt;span style="color:#ae81ff">linux/amd64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;8081:8081&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">nexus_data://nexus-data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">/etc/localtime://etc/localtime:ro&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">nexus_data&lt;/span>:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="访问并配置-nexus">访问并配置 Nexus&lt;/h2>
&lt;p>访问 http://127.0.0.1:8081/ 或者是 &lt;code>http://&amp;lt;your IP&amp;gt;:8081&lt;/code>，用户名为 admin ，初始密码在容器里的 /nexus-data/admin.password 文件&lt;/p></description></item><item><title>All things about OAuth</title><link>https://blog.chensoul.cc/posts/2024/06/06/all-things-about-oauth/</link><pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/06/all-things-about-oauth/</guid><description>&lt;p>OAuth 是一种&lt;strong>开放协议&lt;/strong>，允许通过网络、移动和桌面应用程序以&lt;strong>简单&lt;/strong>、&lt;strong>标准的方式进行&lt;/strong>安全授权。&lt;/p>
&lt;h2 id="oauth-2-入门">OAuth 2 入门&lt;/h2>
&lt;p>以下是一些 OAuth 2.0 指南，涵盖了理解和实现客户端和服务器所需的许多主题。&lt;/p></description></item><item><title>JWT</title><link>https://blog.chensoul.cc/posts/2024/06/06/jwt/</link><pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/06/jwt/</guid><description>&lt;h2 id="什么是-jwt">什么是 JWT？&lt;/h2>
&lt;p>JWT（JSON Web Token）是一种开放标准(RFC 7519)，用于在网络应用程序之间安全地传输信息。它被设计用于在两方之间传输声明，这些声明可以是身份验证和授权信息，也可以是任何其他类型的信息。&lt;/p></description></item><item><title>OAuth2和OIDC区别</title><link>https://blog.chensoul.cc/posts/2024/06/06/oauth2-oidc/</link><pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/06/oauth2-oidc/</guid><description>&lt;h2 id="认证和授权">认证和授权&lt;/h2>
&lt;p>&lt;strong>认证 (Authentication)&lt;/strong>：&lt;/p></description></item><item><title>Spring Boot项目创建Docker镜像并运行应用</title><link>https://blog.chensoul.cc/posts/2024/06/06/spring-boot-docker-image/</link><pubDate>Thu, 06 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/06/spring-boot-docker-image/</guid><description>&lt;h2 id="手动创建-dockerfile">手动创建 Dockerfile&lt;/h2>
&lt;p>在您的 Spring Boot 项目根目录下创建一个名为 &lt;code>Dockerfile&lt;/code> 的文件，并添加以下内容:&lt;/p></description></item><item><title>[译]OAuth2 with Spring 第1部分：了解基本概念</title><link>https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-1-knowing-the-basic-concepts/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-1-knowing-the-basic-concepts/</guid><description>&lt;p>原文地址：&lt;a href="https://mainul35.medium.com/oauth2-with-spring-part-1-knowing-the-basic-concepts-5c4aa17884a" target="_blank">https://mainul35.medium.com/oauth2-with-spring-part-1-knowing-the-basic-concepts-5c4aa17884a&lt;/a>&lt;/p>
&lt;p>在本系列&lt;strong>关于 Spring 的 OAuth2&lt;/strong>的文章中，我将尝试介绍和解释与 OAuth2 相关的每一个问题以及如何在 Spring 框架中实现这些问题。请记住，OAuth2 完全是一个概念性的东西，在不同的框架中，它有自己的实现。此外，许多应用程序开发人员开发自己的 OAuth2 实现，而不使用 Spring 框架提供的 OAuth2 框架支持。因此，我将就这个主题撰写一系列文章。&lt;/p></description></item><item><title>[译]OAuth2 with Spring 第2部分：授权服务器入门</title><link>https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-2-getting-started-with-authorization-server/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-2-getting-started-with-authorization-server/</guid><description>&lt;p>原文地址：&lt;a href="https://mainul35.medium.com/oauth2-with-spring-part-2-getting-started-with-authorization-server-13804910cb2a" target="_blank">https://mainul35.medium.com/oauth2-with-spring-part-2-getting-started-with-authorization-server-13804910cb2a&lt;/a>&lt;/p>
&lt;p>Spring 团队最近发布了他们的授权服务器。OAuth2 一直是一个热门话题，而构建或理解授权服务器一直是一个谜。在本系列的&lt;a href="https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-1-knowing-the-basic-concepts/">第 1 部分&lt;/a>中，我描述了几乎所有您需要了解的有关 OAuth2 的概念性内容。在本系列的这篇文章中，我将尝试演示如何构建具有&lt;strong>client_credential&lt;/strong>授权类型的授权服务器。我将从使用配置属性进行自动配置开始解释它们，并通过编写 Java 代码自定义配置。让我们开始吧。&lt;/p></description></item><item><title>[译]OAuth2 with Spring 第3部分：使用Spring授权服务器授予authorization_code OIDC客户端</title><link>https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-3-authorizing-oidc-client-with-via-authorization-code-grant-from-spring/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-3-authorizing-oidc-client-with-via-authorization-code-grant-from-spring/</guid><description>&lt;p>原文地址：&lt;a href="https://mainul35.medium.com/oauth2-with-spring-part-3-authorizing-oidc-client-with-via-authorization-code-grant-from-spring-67769f9dd68a" target="_blank">https://mainul35.medium.com/oauth2-with-spring-part-3-authorizing-oidc-client-with-via-authorization-code-grant-from-spring-67769f9dd68a&lt;/a>&lt;/p>
&lt;p>在&lt;a href="https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-2-getting-started-with-authorization-server/">上一篇文章&lt;/a>中，我们讨论了使用 client_credential 的 OAuth2 授权服务器配置。在本文中，我们将讨论使用 authorization_code 授予类型的授权服务器配置。此授权流程将有一个 OIDC 客户端，它将通过使用授权码进行请求来获取 JWT 令牌。&lt;/p></description></item><item><title>[译]OAuth2 with Spring 第4部分：Spring授权客户端与Google授权服务器的社交登录演示</title><link>https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-4-spring-authorization-client-social-login-demo-with-google/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-4-spring-authorization-client-social-login-demo-with-google/</guid><description>&lt;p>原文地址：&lt;a href="https://mainul35.medium.com/oauth2-with-spring-part-4-spring-authorization-client-social-login-demo-with-google-be6097ec18a5" target="_blank">https://mainul35.medium.com/oauth2-with-spring-part-4-spring-authorization-client-social-login-demo-with-google-be6097ec18a5&lt;/a>&lt;/p>
&lt;p>在&lt;a href="https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-3-authorizing-oidc-client-with-via-authorization-code-grant-from-spring/">之前的文章&lt;/a>中，我们学习了如何使用 OIDC 连接到我们自己的授权服务器。我们在自托管授权服务器中定义了我们自己的客户端应用程序。在今天的文章中，我们将使用 Google 和 GitHub 作为我们的授权服务器，并将我们的授权客户端应用程序连接到这些授权服务器并从它们接收令牌。应用程序登录屏幕将如下所示。&lt;/p></description></item><item><title>[译]OAuth2 with Spring 第5部分：使用PKCE保护您的Spring Boot应用程序以增强安全性</title><link>https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-5-securing-your-spring-boot-application-with-pkce-for-enhanced-security/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/05/oauth2-with-spring-part-5-securing-your-spring-boot-application-with-pkce-for-enhanced-security/</guid><description>&lt;p>原文地址：&lt;a href="https://mainul35.medium.com/oauth2-with-spring-part-5-securing-your-spring-boot-application-with-pkce-for-enhanced-security-d8025cd08769" target="_blank">https://mainul35.medium.com/oauth2-with-spring-part-5-securing-your-spring-boot-application-with-pkce-for-enhanced-security-d8025cd08769&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>免责声明：本文技术性很强，需要清楚了解本系列前几篇文章，特别是第 1 部分和第 3 部分。&lt;/p></description></item><item><title>[译]OAuth2.0服务器</title><link>https://blog.chensoul.cc/posts/2024/06/05/oauth2-server/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/05/oauth2-server/</guid><description>&lt;h1 id="背景">背景&lt;/h1>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;em>作者：&lt;a href="https://aaronparecki.com/" target="_blank">Aaron Parecki&lt;/a>&lt;/em>&lt;/p></description></item><item><title>[译]OAuth2简化版</title><link>https://blog.chensoul.cc/posts/2024/06/05/oauth-2-simplified/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/05/oauth-2-simplified/</guid><description>&lt;p>这篇文章以简化的格式描述了 OAuth 2.0，以帮助开发人员和服务提供商实现该协议。&lt;/p></description></item><item><title>RFC6749 | OAuth2.0授权框架中文版</title><link>https://blog.chensoul.cc/posts/2024/06/05/oauth2/</link><pubDate>Wed, 05 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/05/oauth2/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;h3 id="摘要">摘要&lt;/h3>
&lt;p>OAuth2.0 授权框架允许第三方应用获取对 HTTP 服务的有限的访问权限，既可以以资源所有者名义在资源所有者和 HTTP 服务之间进行允许的交互，也可以允许第三方应用以自己的名义进行访问。本规范取代并淘汰 RFC 5849 中描述的 OAuth 1.0 协议。&lt;/p></description></item><item><title>[译]如何组织代码</title><link>https://blog.chensoul.cc/posts/2024/05/30/how-to-structure-our-code/</link><pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/30/how-to-structure-our-code/</guid><description>&lt;p>原文链接：&lt;a href="https://medium.com/@minadev/how-to-structure-our-code-b5e7b1c32c21" target="_blank">How to Structure Code&lt;/a>&lt;/p></description></item><item><title>[译]使用 Spring Boot 构建 RESTful API：集成 DDD 和六边形架构</title><link>https://blog.chensoul.cc/posts/2024/05/30/building-a-restful-api-with-spring-boot-integrating-ddd-and-hexagonal-architecture/</link><pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/30/building-a-restful-api-with-spring-boot-integrating-ddd-and-hexagonal-architecture/</guid><description>&lt;p>原文链接：&lt;a href="https://medium.com/@juannegrin/building-a-restful-api-with-spring-boot-integrating-ddd-and-hexagonal-architecture-df50fe24a1ff" target="_blank">Building a RESTful API with Spring Boot: Integrating DDD and Hexagonal Architecture&lt;/a>&lt;/p></description></item><item><title>Redis安装和部署</title><link>https://blog.chensoul.cc/posts/2024/05/14/redis-install/</link><pubDate>Tue, 14 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/14/redis-install/</guid><description>&lt;h2 id="单机安装">单机安装&lt;/h2>
&lt;h3 id="通过-yum-安装">通过 yum 安装&lt;/h3>
&lt;p>在 CentOS 7 上通过 yum 安装 Redis，可以按照以下步骤进行操作：&lt;/p></description></item><item><title>Argo CD安装和部署</title><link>https://blog.chensoul.cc/posts/2024/05/11/argocd/</link><pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/11/argocd/</guid><description>&lt;h2 id="安装-argocd">安装 ArgoCD&lt;/h2>
&lt;p>安装：&lt;/p></description></item><item><title>All things about WebSocket</title><link>https://blog.chensoul.cc/posts/2024/05/10/all-things-about-websocket/</link><pubDate>Fri, 10 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/10/all-things-about-websocket/</guid><description>&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/WebSocket" target="_blank">Wikipedia：WebSocket&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket" target="_blank">WebSocket - Web APIs | MDN&lt;/a>&lt;/p></description></item><item><title>K8s安装Cert Manager</title><link>https://blog.chensoul.cc/posts/2024/05/10/install-cert-manager/</link><pubDate>Fri, 10 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/10/install-cert-manager/</guid><description>&lt;p>cert-manager 为 Kubernetes 或 OpenShift 集群中的工作负载创建 TLS 证书，并在证书过期之前续订证书。&lt;/p></description></item><item><title>Rancher安装和部署-使用K8s</title><link>https://blog.chensoul.cc/posts/2024/05/10/install-rancher/</link><pubDate>Fri, 10 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/10/install-rancher/</guid><description>&lt;h2 id="前提条件">前提条件&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ranchermanager.docs.rancher.com/zh/getting-started/installation-and-upgrade/install-upgrade-on-a-kubernetes-cluster#kubernetes-%e9%9b%86%e7%be%a4" target="_blank">Kubernetes 集群&lt;/a>：可以使用 &lt;strong>RKE&lt;/strong>、&lt;strong>RKE2&lt;/strong>、&lt;strong>K3S&lt;/strong> 等工具安装集群&lt;/li>
&lt;li>&lt;a href="https://ranchermanager.docs.rancher.com/zh/getting-started/installation-and-upgrade/install-upgrade-on-a-kubernetes-cluster#ingress-controller" target="_blank">Ingress Controller&lt;/a>：对于 RKE、RKE2 和 K3s，你不需要手动安装 Ingress Controller，因为它是默认安装的。&lt;/li>
&lt;li>&lt;a href="https://ranchermanager.docs.rancher.com/zh/getting-started/installation-and-upgrade/install-upgrade-on-a-kubernetes-cluster#cli-%e5%b7%a5%e5%85%b7" target="_blank">CLI 工具&lt;/a>：安装 kubectl 和 helm&lt;/li>
&lt;/ul>
&lt;h2 id="使用-docker-安装-rancher">使用 docker 安装 Rancher&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir -p /data/rancher
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run --name rancher --privileged -d --restart&lt;span style="color:#f92672">=&lt;/span>unless-stopped -p 80:80 -p 443:443 -v /data/rancher://var/lib/rancher/ rancher/rancher:stable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker logs -f rancher
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用-helm-安装-rancher">使用 helm 安装 Rancher&lt;/h2>
&lt;p>参考：&lt;a href="https://ranchermanager.docs.rancher.com/zh/getting-started/installation-and-upgrade/install-upgrade-on-a-kubernetes-cluster" target="_blank">在 Kubernetes 集群上安装/升级 Rancher&lt;/a>&lt;/p></description></item><item><title>All things about Drone</title><link>https://blog.chensoul.cc/posts/2024/05/09/all-things-about-drone/</link><pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/09/all-things-about-drone/</guid><description>&lt;p>Drone by &lt;a href="https://harness.io/" target="_blank">Harness&lt;/a> ™ 是一个现代化的持续集成平台，使忙碌的团队能够使用强大的云原生管道引擎自动化其构建、测试和发布工作流程。&lt;/p></description></item><item><title>All things about Spring Modulith</title><link>https://blog.chensoul.cc/posts/2024/05/09/all-things-about-spring-modulith/</link><pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/09/all-things-about-spring-modulith/</guid><description>&lt;p>VMware 推出了一个实验性的项目&lt;a href="https://spring.io/projects/spring-modulith" target="_blank">Spring Modulith&lt;/a>，以便于通过模块和事件更好地组织 Spring Boot 3 应用。该项目引入了新的类和注解，但并不会生成代码。它的模块没有使用 Java Platform Module System（JPMS），而是映射到了普通的 Java 包。模块有 API，但是 Spring Modulith 鼓励使用 Spring 应用事件作为“主要的交互方式”。这些事件可以自动持久化到事件日志中。Spring Modulith 还简化了模块和事件的测试。&lt;/p></description></item><item><title>安装k3s</title><link>https://blog.chensoul.cc/posts/2024/05/09/install-k3s/</link><pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/09/install-k3s/</guid><description>&lt;p>K3s 是轻量级的 Kubernetes。K3s 易于安装，仅需要 Kubernetes 内存的一半，所有组件都在一个小于 100 MB 的二进制文件中。&lt;/p></description></item><item><title>通过k3d安装k3s</title><link>https://blog.chensoul.cc/posts/2024/05/09/install-k3s-using-k3d/</link><pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/09/install-k3s-using-k3d/</guid><description>&lt;h2 id="k3d是什么">k3d是什么&lt;/h2>
&lt;p>k3d 是一个轻量级包装器，用于在 docker 中运行&lt;a href="https://github.com/rancher/k3s" target="_blank">k3s&lt;/a>（Rancher Lab 的最小 Kubernetes 发行版）。&lt;/p></description></item><item><title>通过k3sup安装k3s</title><link>https://blog.chensoul.cc/posts/2024/05/09/install-k3s-using-k3sup/</link><pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/09/install-k3s-using-k3sup/</guid><description>&lt;p>k3sup是一个支持在PC、虚拟机、ARM设备上安装k3s的工具，官方网站：&lt;a href="https://k3sup.dev/" target="_blank">https://k3sup.dev/&lt;/a>&lt;/p>
&lt;h2 id="安装k3sup">安装k3sup&lt;/h2>
&lt;p>在线安装：&lt;/p></description></item><item><title>[译]比较 Socket.IO 和 HTTP：主要区别和用例</title><link>https://blog.chensoul.cc/posts/2024/05/08/socketio-vs-http/</link><pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/08/socketio-vs-http/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/socketio-vs-http" target="_blank">https://ably.com/topic/socketio-vs-http&lt;/a>&lt;/p>
&lt;p>在规划实时应用程序时，您应该仔细考虑要使用哪些技术。本文对&lt;a href="https://ably.com/topic/socketio" target="_blank">Socket.IO&lt;/a>实时库和&lt;a href="https://ably.com/topic/websockets-vs-http#http" target="_blank">HTTP&lt;/a>协议进行了比较。下面您将了解每种解决方案的功能、每种解决方案的优缺点以及何时使用它们。&lt;/p>
&lt;h2 id="什么是socketio">什么是Socket.IO？&lt;/h2>
&lt;p>Socket.IO 是一个创建于 2010 年的库，提供客户端和服务器之间的实时双向通信。它允许管理连接、发送和接收消息等等。这使得 Socket.IO 成为构建消息/聊天应用程序的理想选择。&lt;/p></description></item><item><title>[译]探索 http2（第 1 部分）：概述</title><link>https://blog.chensoul.cc/posts/2024/05/08/exploring-http2-part-1-overview/</link><pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/08/exploring-http2-part-1-overview/</guid><description>&lt;p>原文链接：&lt;a href="https://noobj.medium.com/exploring-http2-part-1-overview-dc3e9b53968f" target="_blank">https://noobj.medium.com/exploring-http2-part-1-overview-dc3e9b53968f&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>让我们来谈谈&lt;/em> &lt;strong>http2 的内容、原因、时间和方式&lt;/strong>&lt;/p></description></item><item><title>[译]探索 http2（第 2 部分）：使用 node-http2 核心和 hapijs</title><link>https://blog.chensoul.cc/posts/2024/05/08/exploring-http2-part-2-overview/</link><pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/08/exploring-http2-part-2-overview/</guid><description>&lt;p>原文链接：&lt;a href="https://noobj.medium.com/exploring-http2-part-2-with-node-http2-core-and-hapijs-74e3df14249" target="_blank">https://noobj.medium.com/exploring-http2-part-2-with-node-http2-core-and-hapijs-74e3df14249&lt;/a>&lt;/p>
&lt;p>&lt;img src="../../../static/images/exploring-http2-part-2-overview-01.webp" alt="img">&lt;/p>
&lt;p>来源：&lt;a href="https://www.thewebmaster.com/hosting/2015/dec/14/what-is-http2-and-how-does-it-compare-to-http1-1/" target="_blank">https://www.thewebmaster.com/&lt;/a>&lt;/p></description></item><item><title>[译]2024年最好的WebSocket替代品</title><link>https://blog.chensoul.cc/posts/2024/05/07/websocket-alternatives/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websocket-alternatives/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/websocket-alternatives" target="_blank">https://ably.com/topic/websocket-alternatives&lt;/a>&lt;/p>
&lt;h2 id="什么是-websocket">什么是 WebSocket？&lt;/h2>
&lt;p>简而言之，WebSocket 是一种实时 Web 技术，可通过持久连接在客户端和服务器之间实现双向、全双工通信。 WebSocket 连接会根据需要保持活动状态（理论上，它可以永远持续），从而允许服务器和客户端以最小的开销随意发送数据。&lt;/p></description></item><item><title>[译]Apache Kafka、RabbitMQ 与 AWS SNSSQS：哪个消息代理最好？</title><link>https://blog.chensoul.cc/posts/2024/05/07/apache-kafka-vs-rabbitmq-vs-aws-sns-sqs/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/apache-kafka-vs-rabbitmq-vs-aws-sns-sqs/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/apache-kafka-vs-rabbitmq-vs-aws-sns-sqs" target="_blank">https://ably.com/topic/apache-kafka-vs-rabbitmq-vs-aws-sns-sqs&lt;/a>&lt;/p>
&lt;p>将消息从一个组件获取到另一个组件是微服务架构中最重要的部分之一。每个服务必须能够与任何其他服务异步、可靠且大规模地通信。&lt;/p>
&lt;p>这就是消息代理的用武之地。消息代理（例如 Apache Kafka、RabbitMQ 和&lt;a href="https://ably.com/topic/aws-sns-vs-sqs" target="_blank">AWS SNS/SQS&lt;/a>）为您提供一个通用接口和一组保证，而不是手动协调可能数千个微服务之间的通信。这简化了集成并更容易推理您的系统。&lt;/p></description></item><item><title>[译]HTTP 的演变 – HTTP2 深入探讨</title><link>https://blog.chensoul.cc/posts/2024/05/07/http2/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/http2/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/http2" target="_blank">https://ably.com/topic/http2&lt;/a>&lt;/p>
&lt;p>可以毫不夸张地说，超文本传输协议 (HTTP) 造就了我们所熟知的互联网。 HTTP 最初是由万维网的发明者蒂姆·伯纳斯·李 (Tim Berners-Lee) 于 1989 年提出的应用程序协议。第一个记录版本 HTTP/0.9 被称为单行协议。鉴于它催生了万维网，它现在可以被描述为有史以来最伟大的俏皮话。&lt;/p></description></item><item><title>[译]Java和WebSockets：构建可靠的实时应用程序</title><link>https://blog.chensoul.cc/posts/2024/05/07/websockets-java/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websockets-java/</guid><description>&lt;p>原文：&lt;a href="https://ably.com/topic/websockets-java" target="_blank">https://ably.com/topic/websockets-java&lt;/a>&lt;/p>
&lt;p>在全球范围内，人们对实时传输数据的需求不断增长，&lt;a href="https://ably.com/topic/websockets" target="_blank">WebSocket&lt;/a>可能是此类用例中最流行的传输协议。在 WebSocket 出现之前，“实时”网络已经存在，但它很难实现，通常速度较慢，并且是通过破解现有的网络技术来实现的，而这些技术并不是为实时应用程序设计的。 WebSocket 协议为真正的实时网络铺平了道路。&lt;/p></description></item><item><title>[译]WebSocket API和协议说明</title><link>https://blog.chensoul.cc/posts/2024/05/07/the-websocket-api-and-protocol-explained/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/the-websocket-api-and-protocol-explained/</guid><description>&lt;p>原文地址：&lt;a href="https://ably.com/topic/websockets" target="_blank">https://ably.com/topic/websockets&lt;/a>&lt;/p>
&lt;p>WebSocket 标志着 Web 开发的转折点。 WebSocket 技术旨在以事件为驱动，并针对低延迟进行了优化，已成为许多寻求构建交互式实时数字体验以提供令人愉悦的用户体验的组织和开发人员的首选。本文探讨了与 WebSocket 相关的关键主题：&lt;/p></description></item><item><title>[译]WebSocket与HTTP：2024年为您的项目选择哪一个</title><link>https://blog.chensoul.cc/posts/2024/05/07/websockets-vs-http/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websockets-vs-http/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/websockets-vs-http" target="_blank">https://ably.com/topic/websockets-vs-http&lt;/a>&lt;/p>
&lt;p>当谈到 WebSocket 与 HTTP 时，决定使用哪一种并不总是那么明确。哪一个更好？您的应用程序应该使用哪一款？&lt;/p></description></item><item><title>[译]WebSocket与REST</title><link>https://blog.chensoul.cc/posts/2024/05/07/websocket-vs-rest/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websocket-vs-rest/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/websocket-vs-rest" target="_blank">https://ably.com/topic/websocket-vs-rest&lt;/a>&lt;/p>
&lt;p>无论您是将客户端连接到服务器、将微服务相互连接，还是将应用程序的一部分连接到外部服务，在通信方法方面，您几乎都会有多种选择。不过，有两个比较突出：WebSocket 和 REST。&lt;/p></description></item><item><title>[译]如何通过 WebSocket 将 Kafka 消息流式传输到面向互联网的客户端</title><link>https://blog.chensoul.cc/posts/2024/05/07/websockets-kafka/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websockets-kafka/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/websockets-kafka" target="_blank">https://ably.com/topic/websockets-kafka&lt;/a>&lt;/p>
&lt;p>Apache Kafka 是目前最强大的异步消息传递技术之一。 Kafka 由 Jay Kreps、Jun Rao 和 Neha Narkhede 等团队于 2010 年在 LinkedIn 设计，并于 2011 年初开源。如今，该工具被众多公司（包括科技巨头，例如 Slack、Airbnb 或 Netflix 使用）为其实时数据流管道提供支持。&lt;/p></description></item><item><title>[译]什么是 HTTP？</title><link>https://blog.chensoul.cc/posts/2024/05/07/http/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/http/</guid><description>&lt;p>原文链接：&lt;a href="https://www.pubnub.com/guides/http/" target="_blank">https://www.pubnub.com/guides/http/&lt;/a>&lt;/p>
&lt;h2 id="http-概述">HTTP 概述&lt;/h2>
&lt;p>HTTP，即超文本传输协议，是互联网通信的基础。它在客户端-服务器模型上运行，其中前端客户端（例如网络浏览器）通过向服务器发送HTTP请求消息来发起请求，例如请求网页（例如搜索引擎）。然后，服务器使用包含所请求资源的 HTTP 响应消息进行响应，如果资源不可用，则使用错误消息进行响应。&lt;/p></description></item><item><title>[译]什么是 OAuth？</title><link>https://blog.chensoul.cc/posts/2024/05/07/oauth/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/oauth/</guid><description>&lt;p>原文链接：&lt;a href="https://www.pubnub.com/guides/oauth/" target="_blank">https://www.pubnub.com/guides/oauth/&lt;/a>&lt;/p>
&lt;h2 id="什么是-oauth">什么是 OAuth？&lt;/h2>
&lt;p>&lt;a href="https://oauth.net/" target="_blank">OAuth（开放授权）&lt;/a>是一种开放标准授权框架，允许第三方应用程序访问用户数据，而无需用户共享其登录凭据。它为用户提供了一种安全且标准化的方式，将其在一个网站上的资源的访问权限授予另一个网站或应用程序，而无需暴露其密码。&lt;/p></description></item><item><title>[译]什么是HTTP/3？</title><link>https://blog.chensoul.cc/posts/2024/05/07/http3/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/http3/</guid><description>&lt;p>原文链接：&lt;a href="https://www.pubnub.com/guides/http-3/" target="_blank">https://www.pubnub.com/guides/http-3/&lt;/a>&lt;/p>
&lt;h2 id="什么是-http3">什么是 HTTP/3？&lt;/h2>
&lt;p>HTTP/3（或 HTTP-over-QUIC）是超文本传输协议 ( &lt;a href="https://www.pubnub.com/guides/http/" target="_blank">HTTP&lt;/a> ) 的第三个主要版本。它是用于 Web 浏览器和服务器之间通信的应用层协议。 HTTP/3 旨在提高 Web 通信的性能和安全性。&lt;/p></description></item><item><title>[译]什么是HTTP流式传输？</title><link>https://blog.chensoul.cc/posts/2024/05/07/http-streaming/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/http-streaming/</guid><description>&lt;p>原文链接：&lt;a href="https://www.pubnub.com/guides/http-streaming/" target="_blank">https://www.pubnub.com/guides/http-streaming/&lt;/a>&lt;/p>
&lt;h2 id="什么是-http-流式传输">什么是 HTTP 流式传输？&lt;/h2>
&lt;p>HTTP 流，也称为基于 HTTP 的流或 HTTP 实时流，是一种用于通过 Internet 传送实时多媒体内容（例如音频或视频）的技术。该协议允许从服务器到客户端设备的连续数据传输，使用户能够消费媒体内容而无需完整的文件下载。&lt;/p></description></item><item><title>[译]什么是Socket.IO？</title><link>https://blog.chensoul.cc/posts/2024/05/07/socket-io/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/socket-io/</guid><description>&lt;p>原文链接：&lt;a href="https://www.pubnub.com/guides/socket-io/" target="_blank">https://www.pubnub.com/guides/socket-io/&lt;/a>&lt;/p>
&lt;h1 id="什么是socketio">什么是Socket.IO？&lt;/h1>
&lt;p>&lt;a href="https://socket.io/" target="_blank">Socket.IO&lt;/a>是一个开源的跨平台库，它提供客户端和服务器之间基于事件的&lt;a href="https://www.geeksforgeeks.org/transmission-modes-computer-networks/" target="_blank">全双工双向通信&lt;/a>。它基于 WebSocket 协议构建，提供附加功能，例如自动重新连接以及在无法使用 &lt;a href="https://www.pubnub.com/guides/what-are-websockets-and-when-should-you-use-them/" target="_blank">WebSocket时回退到&lt;/a>&lt;a href="https://www.pubnub.com/blog/http-long-polling/" target="_blank">HTTP 长轮询。&lt;/a>&lt;/p></description></item><item><title>[译]什么是WebSocket？</title><link>https://blog.chensoul.cc/posts/2024/05/07/websockets/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websockets/</guid><description>&lt;p>原文链接：&lt;a href="https://www.pubnub.com/guides/websockets/" target="_blank">https://www.pubnub.com/guides/websockets/&lt;/a>&lt;/p>
&lt;h2 id="什么是-websocket">什么是 WebSocket？&lt;/h2>
&lt;p>&lt;a href="https://www.pubnub.com/guides/tcp-ip/" target="_blank">WebSocket 是一种通过单个TCP&lt;/a>连接提供全双工通信通道的通信协议。它支持客户端和服务器之间的实时、事件驱动的连接。&lt;/p></description></item><item><title>[译]什么是长轮询？</title><link>https://blog.chensoul.cc/posts/2024/05/07/long-polling/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/long-polling/</guid><description>&lt;p>原文链接：&lt;a href="https://www.pubnub.com/guides/long-polling/" target="_blank">https://www.pubnub.com/guides/long-polling/&lt;/a>&lt;/p>
&lt;h2 id="什么是长轮询">什么是长轮询？&lt;/h2>
&lt;p>长轮询用于实时 Web 应用程序，以实现客户端和 Web 服务器之间近乎即时的通信。它在实时更新至关重要的聊天和消息应用程序中特别有用。&lt;/p></description></item><item><title>ThingsBoard的领域模型</title><link>https://blog.chensoul.cc/posts/2024/05/07/thingsboard-domain/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/thingsboard-domain/</guid><description>&lt;p>ThingsBoard是一个开源的物联网平台，用于管理和监控物联网设备和数据。它提供了一个可扩展的架构，可以连接各种设备，并实时收集、处理和分析设备生成的数据。&lt;/p>
&lt;h2 id="领域模型">领域模型&lt;/h2>
&lt;p>在ThingsBoard中，领域模型是一个关键概念，用于描述物联网系统中的物理实体、属性和行为。以下是ThingsBoard中的主要领域模型组件：&lt;/p></description></item><item><title>All things about ThingsBoard</title><link>https://blog.chensoul.cc/posts/2024/04/29/all-things-about-thingsboard/</link><pubDate>Mon, 29 Apr 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/04/29/all-things-about-thingsboard/</guid><description>&lt;p>thingsboard 是一款乌克兰团队基于java语言研发的开源物联网框架，开源的是ce版，企业版需要购买授权且无源码。&lt;/p>
&lt;p>官方网站：&lt;/p></description></item><item><title>TBMQ测试和源码分析</title><link>https://blog.chensoul.cc/posts/2024/04/28/thingsboard-tbmq-test/</link><pubDate>Sun, 28 Apr 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/04/28/thingsboard-tbmq-test/</guid><description>&lt;ol>
&lt;li>
&lt;p>启动 TBMQ 程序，浏览器访问 http://localhost:8083，创建一个 Application，Credentials Type 为 BASIC，客户端 ID、用户名和密码均设置为 tbmq_app&lt;/p></description></item><item><title>ThingsBoard TBMQ本地和通过Docker运行</title><link>https://blog.chensoul.cc/posts/2024/04/17/thingsboard-tbmq-local-docker-run/</link><pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/04/17/thingsboard-tbmq-local-docker-run/</guid><description>&lt;h2 id="docker-compose-运行">docker-compose 运行&lt;/h2>
&lt;p>参考：&lt;a href="https://thingsboard.io/docs/mqtt-broker/install/cluster/docker-compose-setup/" target="_blank">https://thingsboard.io/docs/mqtt-broker/install/cluster/docker-compose-setup/&lt;/a>&lt;/p></description></item><item><title>2024-02-20｜RateLimitAspect请求限流、调整spring-cloud-examples项目结构</title><link>https://blog.chensoul.cc/posts/2024/02/20/til/</link><pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/02/20/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>ChatGPT 编写一个 RateLimitAspect 类，实现基于用户的 get 查询请求的限流功能&lt;/li>
&lt;/ol></description></item><item><title>2024-02-19｜foodie-cloud集成Sharding Sphere实现读写分离</title><link>https://blog.chensoul.cc/posts/2024/02/19/til/</link><pubDate>Mon, 19 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/02/19/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>重构 foodie-cloud 项目
&lt;ul>
&lt;li>基于 docker 实现数据库配置主从复制，集成 Sharding Sphere 实现读写分离&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>2024-02-18｜NewRelice应用性能监控、6个Diagrams工具、foodie-food测试</title><link>https://blog.chensoul.cc/posts/2024/02/18/til/</link><pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/02/18/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;a href="https://newrelic.com/" target="_blank">NewRelice&lt;/a>：应用性能监控&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.cnblogs.com/caoweixiong/p/14798449.html" target="_blank">https://www.cnblogs.com/caoweixiong/p/14798449.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=jCd6XfWLZsg" target="_blank">Top 6 Tools to Turn Code into Beautiful Diagrams&lt;/a> ：&lt;/p></description></item><item><title>2024-02-05｜Spring Cloud Config快速入门</title><link>https://blog.chensoul.cc/posts/2024/02/05/til/</link><pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/02/05/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>创建项目 &lt;a href="https://github.com/chensoul/spring-cloud-examples" target="_blank">spring-cloud-examples&lt;/a>，测试 &lt;em>Spring Cloud&lt;/em> Config 使用本地文件和 git 仓库作为配置中心&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>&lt;em>Spring Cloud&lt;/em> Config 是一个基于http协议的远程配置实现方式。通过统一的配置管理服务器进行配置管理，客户端通过http协议主动的拉取服务的的配置信息，完成配置获取。
&lt;em>Spring Cloud&lt;/em> Config 支持以下几种存储方式：&lt;/p></description></item><item><title>2024-02-04｜foodie-cloud集成Resilience4j</title><link>https://blog.chensoul.cc/posts/2024/02/04/til/</link><pubDate>Sun, 04 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/02/04/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>重构 foodie-cloud 项目&lt;/p></description></item><item><title>2024-02-02｜foodie-cloud集成Spring Cloud Config和SpringDoc</title><link>https://blog.chensoul.cc/posts/2024/02/02/til/</link><pubDate>Fri, 02 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/02/02/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;p>参考 《&lt;a href="https://download.packt.com/free-ebook/9781805128694" target="_blank">Microservices with Spring Boot 3 and Spring Cloud&lt;/a>》，重构
foodie-cloud 项目&lt;/p></description></item><item><title>2024-02-01｜使用 Spring Initializr 创建项目</title><link>https://blog.chensoul.cc/posts/2024/02/01/til/</link><pubDate>Thu, 01 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/02/01/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>重构 foodie-cloud 项目，部署到 docker 容器&lt;/li>
&lt;li>使用 Spring Initializr 创建项目&lt;/li>
&lt;/ol>
&lt;h2 id="使用-spring-initializr-创建项目">使用 Spring Initializr 创建项目&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>安装 spring cli&lt;/p></description></item><item><title>2024-01-31｜Redis事务</title><link>https://blog.chensoul.cc/posts/2024/01/31/til/</link><pubDate>Wed, 31 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/31/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>下载 《&lt;a href="https://download.packt.com/free-ebook/9781805128694" target="_blank">Microservices with Spring Boot 3 and Spring Cloud&lt;/a>》，源码在 &lt;a href="https://github.com/PacktPublishing/Microservices-with-Spring-Boot-and-Spring-Cloud-Third-Edition" target="_blank">github&lt;/a>&lt;/li>
&lt;li>Redis 事务&lt;/li>
&lt;/ol>
&lt;h1 id="redis事务">Redis事务&lt;/h1>
&lt;h2 id="原理">原理&lt;/h2>
&lt;p>Redis 是一个内存数据库，它支持事务操作。Redis 事务是一系列的命令操作，这些命令会被一起执行，要么全部成功，要么全部失败。在事务执行期间，其他客户端提交的命令不会被插入到事务中，确保事务的原子性。&lt;/p></description></item><item><title>2024-01-30｜Mybatis plus和Jackson配置</title><link>https://blog.chensoul.cc/posts/2024/01/30/til/</link><pubDate>Tue, 30 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/30/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>重构 foodie-cloud 项目
&lt;ul>
&lt;li>参考 DDD 组织包结构&lt;/li>
&lt;li>Mybatis plus 配置主键生成策略和数据审计功能&lt;/li>
&lt;li>Jackson 配置日期序列化&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="重构-foodie-cloud-项目">重构 foodie-cloud 项目&lt;/h2>
&lt;h3 id="mybatis-plus-配置主键生成策略">Mybatis plus 配置主键生成策略&lt;/h3>
&lt;p>实体类中可以不用添加@TableId，减少实体类对 mybatis-plus-annotation的依赖&lt;/p></description></item><item><title>2024-01-29｜C4架构模型</title><link>https://blog.chensoul.cc/posts/2024/01/29/til/</link><pubDate>Mon, 29 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/29/til/</guid><description>&lt;h2 id="c4架构模型">C4架构模型&lt;/h2>
&lt;p>C4 架构模型是一种简洁且易于理解的软件架构描述方法，由 Simon Brown 提出。C4 表示 Context, Containers, Components, and Code，这四个层级帮助我们组织和描述软件系统的不同抽象层次。&lt;/p></description></item><item><title>2024-01-26｜foodie-cloud集成Feign</title><link>https://blog.chensoul.cc/posts/2024/01/26/til/</link><pubDate>Fri, 26 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/26/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>重构 foodie-cloud 项目&lt;/p></description></item><item><title>2024-01-25｜Idea和zsh快捷键</title><link>https://blog.chensoul.cc/posts/2024/01/25/til/</link><pubDate>Thu, 25 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/25/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>整理 Idea 快捷键&lt;/li>
&lt;li>整理 zsh 中定义的常用的快捷键&lt;/li>
&lt;/ol>
&lt;h2 id="idea-快捷键">Idea 快捷键&lt;/h2>
&lt;ul>
&lt;li>使用快捷键 command +1 打开 Project 窗口&lt;/li>
&lt;li>输入 control + R 可以运行 Java 代码&lt;/li>
&lt;/ul>
&lt;h3 id="上下文">上下文&lt;/h3>
&lt;ul>
&lt;li>在 for 方法上，输入 option + enter，可以调出上下文，替换 for 表达式&lt;/li>
&lt;li>在字符串上面输入 option + enter，可以调出上下文。&lt;/li>
&lt;li>在字符串上面或者双击选中，然后双击两次 ⇧ ，打开 &lt;code>Search Everywhere&lt;/code> 弹窗，然后输入 case ，选择 &lt;code>Toggle Case&lt;/code> 将 AVERAGE
变为小写。&lt;/li>
&lt;li>在没有使用的方法参数 redundant 上，输入 option + enter，可以选择 &lt;code>Safe delete 'redunant'&lt;/code> 删除该参数&lt;/li>
&lt;li>在三目运算，输入 option + enter，可以选择 &lt;code>Negate '?:'&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="搜索">搜索&lt;/h3>
&lt;ul>
&lt;li>查找最近文件：comand + E&lt;/li>
&lt;li>输入 ⇧ + command + A 可以打开 Find Action 窗口。&lt;/li>
&lt;li>双击两次 ⇧ 可以打开 Search Everywhere 窗口。输入关键字，可以搜索 java 类。&lt;/li>
&lt;li>如果想搜索Java类，则可以输入 command + O，并可以选择在 All Places 搜索。&lt;/li>
&lt;li>如果想搜索方法或者变量名称，则可以使用 option + command + O&lt;/li>
&lt;/ul>
&lt;h3 id="自动补全">自动补全&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>command + ↑ + enter 补全方法体、if、while、for 、switch 后面括号&lt;/p></description></item><item><title>2024-01-24｜今天做了什么</title><link>https://blog.chensoul.cc/posts/2024/01/24/til/</link><pubDate>Wed, 24 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/24/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>观看 B 站视频《&lt;a href="https://www.bilibili.com/video/BV1F5411y7Ta/" target="_blank">鸟宝的春天11_security编码实现&lt;/a>》
&lt;ol>
&lt;li>
&lt;p>参考视频中示例使用 SecurityFilterChain DSL 语法实现用户名密码登录功能。&lt;/p></description></item><item><title>2024-01-23｜今天做了什么</title><link>https://blog.chensoul.cc/posts/2024/01/23/til/</link><pubDate>Tue, 23 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/23/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>重构 foodie-cloud 项目，修改模块名称、表名及字段名。&lt;/li>
&lt;li>修改 &lt;a href="https://github.com/chensoul/spring-security-oauth2-legacy-examples" target="_blank">spring-security-oauth2-legacy-examples&lt;/a> ，测试资源服务器通过 jwt、jwk、远程三种方式获取用户信息；测试 sso 单点登录（进行中）。&lt;/li>
&lt;/ol></description></item><item><title>2024-01-22｜今天做了什么</title><link>https://blog.chensoul.cc/posts/2024/01/22/til/</link><pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/22/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>修改瑞吉外卖项目 &lt;a href="https://github.com/chensoul/reggie" target="_blank">reggie&lt;/a>：
&lt;ul>
&lt;li>去掉 .mvn 相关文件，去掉 github action 中用到 .mvn 的 workflow&lt;/li>
&lt;li>参考 DDD 修改包结构&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>2024-01-18｜今天做了什么</title><link>https://blog.chensoul.cc/posts/2024/01/18/til/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/18/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ol>
&lt;li>修改瑞吉外卖项目 &lt;a href="https://github.com/chensoul/reggie" target="_blank">reggie&lt;/a>：
&lt;ul>
&lt;li>修改数据源配置，使用 HikariCP 数据源&lt;/li>
&lt;li>修改接口返回字段和前端文件，code=0 表示成功&lt;/li>
&lt;li>添加 mysql、redis 安装文档&lt;/li>
&lt;li>添加 openresty lua 脚本实现 redis 缓存&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>2024-01-17｜MySQL 主从复制、ShardingJDBC实现读写分离、集成Springdoc+Javadoc</title><link>https://blog.chensoul.cc/posts/2024/01/17/til/</link><pubDate>Wed, 17 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/17/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ul>
&lt;li>观看《2022年黑马程序员新版java课程》中 MySQL 主从复制和读写分离相关视频，使用 Docker 搭建 MySQL 主从复制环境。&lt;/li>
&lt;li>foodie-cloud 项目实现读写分离并集成 Springdoc&lt;/li>
&lt;/ul>
&lt;h2 id="docker-搭建-mysql-主从复制环境">Docker 搭建 MySQL 主从复制环境&lt;/h2>
&lt;p>参考文章 ：&lt;a href="https://learnku.com/articles/30439" target="_blank">基于 Docker 的 MySQL 主从复制搭建及原理（真正弄懂）&lt;/a>&lt;/p></description></item><item><title>2024-01-16｜Redis安装</title><link>https://blog.chensoul.cc/posts/2024/01/16/til/</link><pubDate>Tue, 16 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/16/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;p>1、&lt;a href="https://github.com/chensoul/spring-cloud-examples" target="_blank">spring-cloud-examples&lt;/a> 添加分布式锁、rabbitmq、kafka、分库分表等示例代码
2、foodie-cloud 添加登录部分代码
3、整理 Redis 安装文档&lt;/p></description></item><item><title>2024-01-15｜Nginx配置结构与指令语法</title><link>https://blog.chensoul.cc/posts/2024/01/15/til/</link><pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/15/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;p>1、看 JHipster 源码发现这两个类库&lt;/p></description></item><item><title>2024-01-11｜Session和Cookie的区别、单点登录和三方登录的区别</title><link>https://blog.chensoul.cc/posts/2024/01/11/til/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/11/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;input checked="" disabled="" type="checkbox"> 1、观看 B 站 《&lt;a href="https://www.bilibili.com/video/BV1ht4y1E7EL?p=1" target="_blank">SSO单点登录&lt;/a>》视频&lt;/p></description></item><item><title>2024-01-10｜ Java审计框架inspektr</title><link>https://blog.chensoul.cc/posts/2024/01/10/til/</link><pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/10/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;p>1、Java Lambda 增强 &lt;a href="https://github.com/jOOQ/jOOL" target="_blank">https://github.com/jOOQ/jOOL&lt;/a> 和 &lt;a href="https://github.com/vavr-io/vavr" target="_blank">https://github.com/vavr-io/vavr&lt;/a> ，jOOL 在 jdk8 下存在编译错误，计划，整合这两个项目，创建一个新的项目，只引入自己需要的一些类。
2、&lt;a href="https://www.pac4j.org/" target="_blank">https://www.pac4j.org/&lt;/a> 一个安全框架
3、&lt;a href="https://github.com/apereo/inspektr" target="_blank">https://github.com/apereo/inspektr&lt;/a> 一个轻量级的 Java 审计框架。这个是在看 CAS 源码的过程中，发现的。
在 CAS 的源码中，有一些比较不错的代码，引入到自己的项目中，另外，打算仿照这个 inspektr 框架，重写公司微服务项目中的日志记录模块。
4、分享一个安全相关的 wiki 网站：&lt;a href="https://wukong-doc.redhtc.com/security" target="_blank">https://wukong-doc.redhtc.com/security&lt;/a>&lt;/p></description></item><item><title>2024-01-09｜单点登录</title><link>https://blog.chensoul.cc/posts/2024/01/09/til/</link><pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/09/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://zexo.dev/posts/2020/03/01/keep-your-repo-dependencies-up-to-date-with-renovate/" target="_blank">使用 renovate 监控第三方依赖更新&lt;/a> ，renovate 貌似需要付费，放弃。&lt;/li>
&lt;li>spring-security-oauth2-samples 示例工程重命名模块和包名，代码见 &lt;a href="https://github.com/chensoul/spring-security-oauth2-boot" target="_blank">spring-security-oauth2-boot&lt;/a>&lt;/li>
&lt;li>实现单点登录并测试&lt;/li>
&lt;/ul>
&lt;h2 id="实现单点登录并测试">实现单点登录并测试&lt;/h2>
&lt;p>实现单点登录（Single Sign-On，SSO）可以采用多种思路和技术。下面是几种常见的实现思路：&lt;/p></description></item><item><title>2024-01-08｜VPS 迁移</title><link>https://blog.chensoul.cc/posts/2024/01/08/til/</link><pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/08/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ul>
&lt;li>VPS 迁移&lt;/li>
&lt;li>继续重构 foodie-cloud&lt;/li>
&lt;li>参考 &lt;a href="https://github.com/mybatis/parent/" target="_blank">https://github.com/mybatis/parent/ &lt;/a>
重构 &lt;a href="https://github.com/chensoul/chensoul-parent" target="_blank">chensoul-parent&lt;/a>
&lt;ul>
&lt;li>修改了 maven 插件&lt;/li>
&lt;li>添加了 Github Actions&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="vps-迁移">VPS 迁移&lt;/h2>
&lt;p>迁移步骤：&lt;/p></description></item><item><title>2024-01-05｜Nginx、正向代理和反向代理</title><link>https://blog.chensoul.cc/posts/2024/01/05/til/</link><pubDate>Fri, 05 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/05/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ul>
&lt;li>Nginx、正向代理和反向代理&lt;/li>
&lt;/ul>
&lt;h2 id="nginx-介绍">Nginx 介绍&lt;/h2>
&lt;p>Nginx（发音为&amp;quot;engine-x&amp;quot;）是一个高性能的开源Web服务器和反向代理服务器。它专注于高并发、低内存消耗和高度模块化的架构，因此被广泛用于构建性能出色的网站、应用程序和服务。&lt;/p></description></item><item><title>2024-01-04｜GitHub Actions</title><link>https://blog.chensoul.cc/posts/2024/01/04/til/</link><pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/04/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ul>
&lt;li>修改个人联系方式&lt;/li>
&lt;li>注销亚马逊账号&lt;/li>
&lt;li>利用GitHub Actions自动优雅地为项目构建Releases&lt;/li>
&lt;li>利用GitHub Actions自动构建项目的docker镜像并发布到DockerHub&lt;/li>
&lt;/ul>
&lt;h2 id="修改个人联系方式">修改个人联系方式&lt;/h2>
&lt;p>使用 ichensoul 注册了新的 Gmail、163 邮箱，并将各种网站绑定的邮箱修改到新的 gmail 邮箱。自此，gmail、github、推特、微信、163 的账号都保持为一致，都是 ichensoul。&lt;/p></description></item><item><title>2024-01-03｜今天做了什么</title><link>https://blog.chensoul.cc/posts/2024/01/03/til/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/03/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/bingoohuang/idworker-client" target="_blank">idworker-client&lt;/a> ，一个开源的 ID 生成器，适合在单机使用&lt;/li>
&lt;li>github 上创建了一个使用 spring cloud netflix 相关组件的微服务项目&lt;/li>
&lt;li>重构了狂野架构师课程中的微服务版本的源码&lt;/li>
&lt;/ul>
&lt;h1 id="foodie-cloud">foodie-cloud&lt;/h1>
&lt;p>重构慕课网 &lt;a href="https://class.imooc.com/sale/javaarchitect" target="_blank">Java架构师-技术专家&lt;/a> 课程中的 &lt;a href="https://github.com/liuhouer/np-architect/" target="_blank">源码&lt;/a>，我做了一些改动：&lt;/p></description></item><item><title>2024-01-02｜雪崩问题、Spring Cloud微服务集成 Sentinel</title><link>https://blog.chensoul.cc/posts/2024/01/02/til/</link><pubDate>Tue, 02 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/02/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ul>
&lt;li>雪崩问题&lt;/li>
&lt;li>Spring Cloud微服务集成 Sentinel&lt;/li>
&lt;li>扩展 Sentinel 集成 OpenFeign，实现自动降级&lt;/li>
&lt;/ul>
&lt;h2 id="雪崩问题">雪崩问题&lt;/h2>
&lt;p>1、什么是雪崩问题？
雪崩问题（Avalanche Effect）是指在分布式系统中，当一个节点或服务出现故障或不可用时，其影响会扩散到其他节点或服务，导致级联故障的现象。这种现象类似于雪崩，一旦开始，会不断放大和蔓延，最终导致整个系统崩溃。
雪崩问题的主要原因是系统中的节点或服务之间存在过度依赖、高度耦合，以及缺乏容错机制。当一个节点或服务出现故障时，由于其他节点或服务无法及时处理或适应，故障会不断传播，最终导致整个系统的崩溃。&lt;/p></description></item><item><title>2023-12-28｜今天做了什么</title><link>https://blog.chensoul.cc/posts/2023/12/28/til/</link><pubDate>Thu, 28 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/28/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ul>
&lt;li>重构微服务项目中使用 spring-security-oauth2 搭建 OAuth2 认证服务和资源服务的代码，减少其他模块对此的耦合度。计划将
spring-security-oauth2 迁移到 spring-security-oauth2-authorization-server 上，即使用 OAuth2.1 授权和认证。&lt;strong>Spring
Authorization Server&lt;/strong>
相关文档，可以参考 &lt;a href="https://blog.51cto.com/u_15268610/category2" target="_blank">https://blog.51cto.com/u_15268610/category2&lt;/a>。&lt;/li>
&lt;li>看 &lt;a href="https://github.com/xuxiaowei-cloud/xuxiaowei-cloud" target="_blank">xuxiaowei-cloud&lt;/a> master 分支源代码，整理 /login
登陆逻辑，参数：username、password、tenantId、clientId&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>登陆成功&lt;/p></description></item><item><title>2023-12-27｜今天做了什么</title><link>https://blog.chensoul.cc/posts/2023/12/27/til/</link><pubDate>Wed, 27 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/27/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ul>
&lt;li>微服务项目中认证服务器配置授权码模式，并测试通过
&lt;ul>
&lt;li>扩展 RedisAuthorizationCodeServices ，支持设置过期时间。
&lt;ul>
&lt;li>注意：OAuth2Authentication 无法从 json 反序列化，故无法使用 JSON 反序列化类，只能使用 JDK 反序列化类。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>扩展 BearerTokenExtractor，支持从 request 请求的 header 中读取 access_token&lt;/li>
&lt;li>配置 JWK token 使用时
&lt;ul>
&lt;li>扩展 JwtAccessTokenConverter ，用于解析 jwks 接口返回的
json，相关说明参考 &lt;a href="https://www.baeldung.com/spring-security-oauth2-jws-jwk#9-creating-the-jwk-set-endpoint" target="_blank">creating-the-jwk-set-endpoint&lt;/a>&lt;/li>
&lt;li>JwkDefinitionSource 类中获取 jwkSetUrls 时，不支持 url 中配置服务名称，即不支持负载均衡。故，重写该类以支持通过
RestTemplate （可以注入一个支持负载均衡的 RestTemplate） 解析 jwkSetUrls 返回的 json 类型的字符串；创建了一个支持负载均衡的
TokenStore。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>运行 &lt;a href="https://gitee.com/xuxiaowei-cloud/xuxiaowei-cloud/tree/archive/OAuth2.0" target="_blank">xuxiaowei-cloud&lt;/a> 项目时
&lt;ul>
&lt;li>提示 &lt;code>Rollup failed to resolve import &amp;quot;@vue/shared&amp;quot;&lt;/code>，原因：这个错误是由于无法解析到 &lt;code>@vue/shared&lt;/code>
这个包导致的。@vue/shared 是 Vue 内部使用的一个共享工具库。解决方案：将 @vue/shared 添加到项目的依赖中。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install --save @vue/shared
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Controller 的方法上添加注解判断是否有权限，例子：
&lt;code>@PreAuthorize(&amp;quot;hasAuthority('manage_user_authority') or #oauth2.hasScope('manage_user_authority')&amp;quot;)&lt;/code>&lt;/li>
&lt;li>Principal 中的用户对象，即 UserDetails 对象不添加额外字段，只有 username，如果想获取用户信息，需要通过用户服务去查询。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>关于 OAuth2 的参考资料：&lt;/p></description></item><item><title>2023-12-22｜今天做了什么</title><link>https://blog.chensoul.cc/posts/2023/12/22/til/</link><pubDate>Fri, 22 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/22/til/</guid><description>&lt;p>今天做了什么：&lt;/p>
&lt;ul>
&lt;li>我使用的 Idea 插件。&lt;/li>
&lt;li>springdoc-openapi v1.7.0 示例&lt;/li>
&lt;li>Spring Security OAuth Boot 2 Autoconfig 转换成 maven 项目，并添加示例&lt;/li>
&lt;/ul>
&lt;h2 id="idea">Idea&lt;/h2>
&lt;p>1、插件&lt;/p></description></item><item><title>2023-12-21｜Spring Security对OAuth2的支持及实现方式</title><link>https://blog.chensoul.cc/posts/2023/12/21/til/</link><pubDate>Thu, 21 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/21/til/</guid><description>&lt;p>Today I Learned. 今天分享内容：Spring Security 对 OAuth2 的支持&lt;/p></description></item><item><title>2023-12-20｜Maven配置继承和生命周期、源码运行Nacos 2.3.0控制台</title><link>https://blog.chensoul.cc/posts/2023/12/20/til/</link><pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/20/til/</guid><description>&lt;p>Today I Learned. 今天分享内容：Maven配置继承和生命周期、源码运行Nacos 2.3.0控制台&lt;/p></description></item><item><title>2023-12-19｜Spring Security OAuth2配置JWT、Github Actions配置代码扫描</title><link>https://blog.chensoul.cc/posts/2023/12/19/til/</link><pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/19/til/</guid><description>&lt;p>Today I Learned. 今天分享内容：Spring Security OAuth2 配置JWT、Github Actions配置代码扫描，另外，修改了 &lt;a href="https://github.com/chensoul/spring-security-oauth2-legacy" target="_blank">spring-security-oauth2-legacy&lt;/a> 仓库，支持授权认证中心的多种配置方式（jdbc、内存、redis、jwt）、资源中心的多种配置方式（jwt、jdbc、redis、remote、jwk-set-uri）。&lt;/p></description></item><item><title>2023-12-18｜使用Spring Security实现OAuth2授权和认证</title><link>https://blog.chensoul.cc/posts/2023/12/18/til/</link><pubDate>Mon, 18 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/18/til/</guid><description>&lt;p>Today I Learned. 今天分享内容：使用Spring Security实现OAuth2授权和认证。&lt;/p></description></item><item><title>2023-12-15｜JNDI InitialContext源码分析、ClassLoader加载机制</title><link>https://blog.chensoul.cc/posts/2023/12/15/til/</link><pubDate>Fri, 15 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/15/til/</guid><description>&lt;p>Today I Learned. 今天分享内容：JNDI InitialContext源码分析、ClassLoader加载机制。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》设计Twitter</title><link>https://blog.chensoul.cc/posts/2023/12/14/designing-twitter/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/14/designing-twitter/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《Designing Twitter》设计 Twitter。&lt;/p></description></item><item><title>2023-12-14｜购买新的VPS服务器、最近在做什么</title><link>https://blog.chensoul.cc/posts/2023/12/14/til/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/14/til/</guid><description>&lt;p>Today I Learned. 今天分享内容：购买新的 VPS 服务器、最近在做什么。&lt;/p></description></item><item><title>All things about MicroProfile</title><link>https://blog.chensoul.cc/posts/2023/12/14/all-things-about-microprofile/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/14/all-things-about-microprofile/</guid><description>&lt;p>最近在一些开源项目中看到了 MicroProfile ，于是在网上查阅了相关资料加深对 MicroProfile 的理解，并做了笔记形成此文。&lt;/p></description></item><item><title>2023-12-13｜发布到Maven中央仓库的第一个项目</title><link>https://blog.chensoul.cc/posts/2023/12/13/til/</link><pubDate>Wed, 13 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/13/til/</guid><description>&lt;p>Today I Learned. 今天分享内容：发布到 Maven 中央仓库的第一个项目。&lt;/p></description></item><item><title>2023-12-12｜RMI、Java漏洞安全、Semgrep漏洞检测</title><link>https://blog.chensoul.cc/posts/2023/12/12/til/</link><pubDate>Tue, 12 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/12/til/</guid><description>&lt;p>Today I Learned. 今天我学了：RMI、Java漏洞安全、Semgrep漏洞检测。&lt;/p></description></item><item><title>如何设计一个分布式ID生成器保证ID按时间有序？</title><link>https://blog.chensoul.cc/posts/2023/12/05/distributed-id-generator/</link><pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/05/distributed-id-generator/</guid><description>&lt;p>很多业务有生成唯一 ID 并作为数据库主键的需求。数据库会在这个字段上建立聚集索引（参考 MySQL InnoDB），即该字段会影响各条数据再物理存储上的顺序。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》设计Dropbox</title><link>https://blog.chensoul.cc/posts/2023/11/24/designing-dropbox/</link><pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/24/designing-dropbox/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《Designing Dropbox》设计 Dropbox。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》设计Facebook Messenger</title><link>https://blog.chensoul.cc/posts/2023/11/24/designing-facebook-messenger/</link><pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/24/designing-facebook-messenger/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《Designing Facebook Messenger》设计 Facebook Messenger。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》设计Instagram</title><link>https://blog.chensoul.cc/posts/2023/11/24/designing-instagram/</link><pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/24/designing-instagram/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《Designing Instagram》设计 Instagram。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》设计Pastebin</title><link>https://blog.chensoul.cc/posts/2023/11/24/designing-pastebin/</link><pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/24/designing-pastebin/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《Designing Pastebin》设计 Pastebin。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》域名系统</title><link>https://blog.chensoul.cc/posts/2023/11/17/dns/</link><pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/17/dns/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自《Grokking the System Design Interview》教程的 &lt;a href="https://www.educative.io/courses/grokking-modern-system-design-interview-for-engineers-managers/introduction-to-domain-name-system-dns" target="_blank">Domain Name System&lt;/a> 这篇章节。&lt;/p></description></item><item><title>如何设计一个短网址服务</title><link>https://blog.chensoul.cc/posts/2023/11/17/designing-a-url-shortening-service/</link><pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/17/designing-a-url-shortening-service/</guid><description>&lt;p>如何生成一个短网址服务，参考 &lt;a href="https://www.educative.io/courses/grokking-modern-system-design-interview-for-engineers-managers/system-design-tinyurl" target="_blank">Design a URL Shortening Service / TinyURL&lt;/a> 和 &lt;a href="https://www.designgurus.io/course-play/grokking-the-system-design-interview/doc/638c0b5dac93e7ae59a1af6b" target="_blank">Designing a URL Shortening service like TinyURL&lt;/a> 两篇文章，整理如下笔记。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》设计类似 TinyURL 的 URL 缩短服务</title><link>https://blog.chensoul.cc/posts/2023/11/16/designing-a-url-shortening-service/</link><pubDate>Thu, 16 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/16/designing-a-url-shortening-service/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《Designing a URL Shortening service like TinyURL》设计类似 TinyURL 的 URL 缩短服务。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》系统设计访谈：分步指南</title><link>https://blog.chensoul.cc/posts/2023/11/16/sdi-a-step-by-step-guide/</link><pubDate>Thu, 16 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/16/sdi-a-step-by-step-guide/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《System Design Interviews: A step by step guide》系统设计访谈：分步指南。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》系统设计主模板</title><link>https://blog.chensoul.cc/posts/2023/11/16/system-design-master-template/</link><pubDate>Thu, 16 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/16/system-design-master-template/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自《Grokking the System Design Interview》教程的 &lt;a href="https://www.designgurus.io/course-play/grokking-the-system-design-interview/doc/645d5161fff33a24ccce4bb1" target="_blank">System Design Master Template&lt;/a> 这篇章节。&lt;/p></description></item><item><title>分布式基础知识</title><link>https://blog.chensoul.cc/posts/2023/11/14/distributed-system-basic/</link><pubDate>Tue, 14 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/14/distributed-system-basic/</guid><description>&lt;h2 id="什么是分布式系统">什么是分布式系统？&lt;/h2>
&lt;p>分布式系统是指由多个独立的计算机节点（或服务器）通过网络相互连接和协作，共同完成某个任务或提供某个服务的系统。在分布式系统中，各个节点可以同时进行计算、存储和通信，并通过消息传递等方式进行协调和同步。&lt;/p>
&lt;p>&lt;strong>分布式系统的设计目标是提高系统的性能、可靠性和可扩展性，同时减少单点故障和提高系统的容错性&lt;/strong>。通过将任务和数据分布到多个节点上，分布式系统可以实现更高的并行性和处理能力。此外，分布式系统还可以提供更好的负载均衡，以应对不断增长的工作负载。&lt;/p></description></item><item><title>[译]《分布式系统：为了乐趣和利益》1.高层分布式系统</title><link>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-01/</link><pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-01/</guid><description>&lt;blockquote>
&lt;p>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p></description></item><item><title>[译]《分布式系统：为了乐趣和利益》2.抽象层次的上下</title><link>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-02/</link><pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-02/</guid><description>&lt;blockquote>
&lt;p>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p></description></item><item><title>[译]《分布式系统：为了乐趣和利益》3.时间及顺序</title><link>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-03/</link><pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-03/</guid><description>&lt;blockquote>
&lt;p>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p></description></item><item><title>[译]《分布式系统：为了乐趣和利益》4.复制</title><link>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-04/</link><pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-04/</guid><description>&lt;blockquote>
&lt;p>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p></description></item><item><title>[译]《分布式系统：为了乐趣和利益》5.复制：弱一致性模型协议</title><link>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-05/</link><pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-05/</guid><description>&lt;blockquote>
&lt;p>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者 Mikito Takada 撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p></description></item><item><title>[译]《分布式系统：为了乐趣和利益》6.进一步阅读和附录</title><link>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-06/</link><pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/10/distributed-systems-06/</guid><description>&lt;blockquote>
&lt;p>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者Mikito Takada撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p>
&lt;p>这本书涵盖了与分布式系统相关的广泛主题，包括网络、容错性、一致性模型、分布式算法、可扩展性等等。它旨在以清晰易懂的方式解释复杂的概念，适合初学者和有经验的分布式系统从业者阅读。&lt;/p></description></item><item><title>[译]给年轻的工程师们的关于分布式系统的一些笔记</title><link>https://blog.chensoul.cc/posts/2023/11/10/notes-on-distributed-systems-for-young-bloods/</link><pubDate>Fri, 10 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/10/notes-on-distributed-systems-for-young-bloods/</guid><description>&lt;p>我一直在思考分布式系统工程师在工作中学到的教训。我们大部分的教导都来自于在生产环境中犯过的错误留下的伤痕。这些伤痕固然是有用的提醒，但让更多的工程师能够完整地保留手指会更好。&lt;/p>
&lt;p>新的系统工程师在自我学习中会遇到分布式计算的谬论和CAP定理。但这些都是抽象的概念，缺乏针对经验不足的工程师直接可行的建议。让人惊讶的是，新工程师在开始工作时所了解到的背景信息是如此之少。&lt;/p>
&lt;p>下面是我作为一名分布式系统工程师学到的一些经验教训，值得告诉新工程师。其中一些经验是微妙的，一些是令人惊讶的，但没有一条是有争议的。这个列表是为了引导新的分布式系统工程师思考他们所从事领域的问题，虽然不是全面的，但是是一个很好的开始。&lt;/p></description></item><item><title>[译]《分布式系统：为了乐趣和利益》介绍</title><link>https://blog.chensoul.cc/posts/2023/11/09/distributed-systems-intro/</link><pubDate>Thu, 09 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/09/distributed-systems-intro/</guid><description>&lt;blockquote>
&lt;p>《分布式系统：为了乐趣和利益》是一本广受欢迎的资源，用于理解和学习分布式系统。该书由作者Mikito Takada撰写，介绍了构建分布式系统的基本概念、原则和挑战。&lt;/p>
&lt;p>这本书涵盖了与分布式系统相关的广泛主题，包括网络、容错性、一致性模型、分布式算法、可扩展性等等。它旨在以清晰易懂的方式解释复杂的概念，适合初学者和有经验的分布式系统从业者阅读。&lt;/p></description></item><item><title>JHipster安装和介绍</title><link>https://blog.chensoul.cc/posts/2023/11/02/jhipster-intro/</link><pubDate>Thu, 02 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/02/jhipster-intro/</guid><description>&lt;p>JHipster 是一个开发平台，可以快速生成，开发和部署现代 Web 应用程序+微服务架构。&lt;/p></description></item><item><title>[译]Spring Boot3和Spring6中的新特性</title><link>https://blog.chensoul.cc/posts/2023/10/13/new-features-in-spring-boot-3-and-spring-6/</link><pubDate>Fri, 13 Oct 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/10/13/new-features-in-spring-boot-3-and-spring-6/</guid><description>&lt;p>Spring Boot 3.0 于 2022 年 11 月正式发布，包含一些新功能和改进。这是继大约 4.5 年前发布 Spring Boot 2.0 后 Spring Boot 的第一个主要版本。它也是第一个支持 Spring Framework 6.0 的 Spring Boot GA 版本。作为开发人员，我们需要了解这些更新，才能顺利使用 Spring Boot。毫无疑问，新版本中最大的转变之一是放弃了对旧版本 Java 的支持。&lt;/p></description></item><item><title>[译]DevOps 和测试人员的 Git 面试问题</title><link>https://blog.chensoul.cc/posts/2023/10/12/git-interview-questions/</link><pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/10/12/git-interview-questions/</guid><description>&lt;p>欢迎来到 Git 面试准备指南，我们将在这里向初学者和经验丰富的专业人士讨论最常见的 Git 面试问题。无论您是准备参加 DevOps 或测试面试，还是希望提高 Git 技能，此资源都可以通过深入研究一些与 Git 基本概念和实践相关的最常见面试问题来帮助您。&lt;/p></description></item><item><title>[译]Spring Security 面试问题</title><link>https://blog.chensoul.cc/posts/2023/10/12/spring-security-interview-questions/</link><pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/10/12/spring-security-interview-questions/</guid><description>&lt;p>本面试准备指南将讨论一些常见的 Spring Security 面试问题。无论您是准备面试还是只是想增强对 Spring Security 的了解，这些问题都将帮助您理解关键概念并指导您设计常见安全问题的解决方案。&lt;/p></description></item><item><title>[译]关于 HTTP 您需要了解的一切</title><link>https://blog.chensoul.cc/posts/2023/10/12/http-in-depth/</link><pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/10/12/http-in-depth/</guid><description>&lt;p>HTTP 是每个 Web 开发人员都应该了解的协议，因为它为整个 Web 提供动力。了解 HTTP 当然可以帮助您开发更好的应用程序。&lt;/p></description></item><item><title>前端学习路线图</title><link>https://blog.chensoul.cc/posts/2023/10/12/frontend-roadmap/</link><pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/10/12/frontend-roadmap/</guid><description>&lt;p>前端学习路线图:&lt;/p>
&lt;ul>
&lt;li>Internet：
&lt;ul>
&lt;li>HTTP&lt;/li>
&lt;li>DNS&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>HTML
&lt;ul>
&lt;li>Basic&lt;/li>
&lt;li>Semantic HTML&lt;/li>
&lt;li>Forms and Validations&lt;/li>
&lt;li>Accessibility&lt;/li>
&lt;li>SEO&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CSS
&lt;ul>
&lt;li>Basic&lt;/li>
&lt;li>Layout&lt;/li>
&lt;li>Responsive Design&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>JavaScript
&lt;ul>
&lt;li>Baisc&lt;/li>
&lt;li>DOM&lt;/li>
&lt;li>Fetch API / Ajax&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Package Manager
&lt;ul>
&lt;li>npm&lt;/li>
&lt;li>pnpm&lt;/li>
&lt;li>yarn&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Framework
&lt;ul>
&lt;li>Angular&lt;/li>
&lt;li>Vue.js&lt;/li>
&lt;li>React&lt;/li>
&lt;li>Svelte&lt;/li>
&lt;li>Solid JS&lt;/li>
&lt;li>Qwik&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Writing CSS
&lt;ul>
&lt;li>Tailwind&lt;/li>
&lt;li>Radix UI&lt;/li>
&lt;li>Shadcn UI&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CSS Architecture
&lt;ul>
&lt;li>BEM&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CSS Preprocessors
&lt;ul>
&lt;li>SASS&lt;/li>
&lt;li>PostCSS&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Build
&lt;ul>
&lt;li>Module Bundlers
&lt;ul>
&lt;li>parcel&lt;/li>
&lt;li>Rollup&lt;/li>
&lt;li>Webpack&lt;/li>
&lt;li>esbuild&lt;/li>
&lt;li>Vite&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Task Runners
&lt;ul>
&lt;li>npm scripts&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Linters and Formatters
&lt;ul>
&lt;li>Prettier&lt;/li>
&lt;li>ESLint&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Test
&lt;ul>
&lt;li>Vitest&lt;/li>
&lt;li>Jest&lt;/li>
&lt;li>Playwirte&lt;/li>
&lt;li>Cypress&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Authentication Strategies
&lt;ul>
&lt;li>JWT&lt;/li>
&lt;li>OAuth&lt;/li>
&lt;li>SSO&lt;/li>
&lt;li>Basic Auth&lt;/li>
&lt;li>Session Auth&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Web Security Basics
&lt;ul>
&lt;li>CORS&lt;/li>
&lt;li>HTTPS&lt;/li>
&lt;li>CSP&lt;/li>
&lt;li>OWASP Security Risks&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Web Components
&lt;ul>
&lt;li>HTML Templates&lt;/li>
&lt;li>Custom Elements&lt;/li>
&lt;li>Shadow DOM&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Type Checkers
&lt;ul>
&lt;li>TypeScript&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Server Side Rendering(SSR)
&lt;ul>
&lt;li>Svelte
&lt;ul>
&lt;li>Svelte Kit&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Vue.js
&lt;ul>
&lt;li>Nuxt.js&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Angular
&lt;ul>
&lt;li>Universal&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>React
&lt;ul>
&lt;li>Next.js&lt;/li>
&lt;li>Remix&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>GraphQL
&lt;ul>
&lt;li>Apollo&lt;/li>
&lt;li>Relay Modern&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Static Site Generators
&lt;ul>
&lt;li>Vuepress&lt;/li>
&lt;li>Jekyll&lt;/li>
&lt;li>Hugo&lt;/li>
&lt;li>Nuxt.js&lt;/li>
&lt;li>Astro&lt;/li>
&lt;li>Eleventy&lt;/li>
&lt;li>Next.js&lt;/li>
&lt;li>Remix&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Progressive Web App&lt;/li>
&lt;li>Mobel Applications
&lt;ul>
&lt;li>React Native&lt;/li>
&lt;li>Flutter&lt;/li>
&lt;li>Ionic&lt;/li>
&lt;li>NativeScript&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Desktop Applications&lt;/li>
&lt;li>Bonus Content&lt;/li>
&lt;/ul></description></item><item><title>React入门：初始化应用的两种方法</title><link>https://blog.chensoul.cc/posts/2023/09/22/react-create-project/</link><pubDate>Fri, 22 Sep 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/09/22/react-create-project/</guid><description>&lt;p>在 React 中，您可以使用多种方法来初始化一个应用程序。以下是几种常见的方法：&lt;/p></description></item><item><title>[译]Spring Security 与 JWT for REST API</title><link>https://blog.chensoul.cc/posts/2023/09/19/spring-security-tutorial/</link><pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/09/19/spring-security-tutorial/</guid><description>&lt;p>&lt;strong>免责声明：Spring Security 5+ 已发布 OAuth JWT 支持。建议使用最新版本的 OAuth 来支持 JWT，而不是使用自定义安全性或过滤器。&lt;/strong>&lt;/p></description></item><item><title>[译]如何使用Spring Security和JWT保护您的REST API</title><link>https://blog.chensoul.cc/posts/2023/09/19/spring-security-jwt/</link><pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/09/19/spring-security-jwt/</guid><description>&lt;p>原文链接：&lt;a href="https://www.danvega.dev/blog/spring-security-jwt" target="_blank">How to Secure your REST APIs with Spring Security &amp;amp; JSON Web Tokens (JWTs)&lt;/a>&lt;/p></description></item><item><title>[译]REST API 的自定义错误消息处理</title><link>https://blog.chensoul.cc/posts/2023/08/25/global-error-handler-in-a-spring-rest-api/</link><pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/25/global-error-handler-in-a-spring-rest-api/</guid><description>&lt;h2 id="1-概述">1. 概述&lt;/h2>
&lt;p>在本教程中，我们将讨论如何为 Spring REST API 实现全局错误处理程序。&lt;/p></description></item><item><title>[译]Spring Events</title><link>https://blog.chensoul.cc/posts/2023/08/25/spring-events/</link><pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/25/spring-events/</guid><description>&lt;h2 id="1-概述">1. 概述&lt;/h2>
&lt;p>在本教程中，我们将讨论如何在 Spring 中使用事件。&lt;/p></description></item><item><title>[译]如何在Spring中执行@Async</title><link>https://blog.chensoul.cc/posts/2023/08/25/spring-async/</link><pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/25/spring-async/</guid><description>&lt;h2 id="1-概述">1. 概述&lt;/h2>
&lt;p>在本教程中，我们将探讨 Spring 中的异步执行支持和 &lt;code>@Async&lt;/code> 注解。&lt;/p></description></item><item><title>[译]使用@Async进行Spring Security上下文传播</title><link>https://blog.chensoul.cc/posts/2023/08/25/spring-security-async-principal-propagation/</link><pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/25/spring-security-async-principal-propagation/</guid><description>&lt;h2 id="1-简介">1. 简介&lt;/h2>
&lt;p>在本教程中，我们将重点关注使用 &lt;code>@Async&lt;/code> 传播 Spring Security 主体
默认情况下，Spring Security 身份验证绑定到 &lt;code>ThreadLocal&lt;/code> - 因此，当执行流在带有 &lt;code>@Async&lt;/code> 的新线程中运行时，它不会是经过身份验证的上下文。&lt;/p></description></item><item><title>[译]使用Spring进行REST的错误处理</title><link>https://blog.chensoul.cc/posts/2023/08/25/exception-handling-for-rest-with-spring/</link><pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/25/exception-handling-for-rest-with-spring/</guid><description>&lt;h2 id="1-概述">1. 概述&lt;/h2>
&lt;p>本教程将说明如何使用 Spring 为 REST API 实现异常处理。我们还将获得一些历史概述，并了解不同版本引入了哪些新选项。&lt;/p></description></item><item><title>如何成为一名合格的架构师</title><link>https://blog.chensoul.cc/posts/2023/08/21/architecture/</link><pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/21/architecture/</guid><description>&lt;h2 id="如何成为一名合格的架构师">如何成为一名合格的架构师&lt;/h2>
&lt;p>成为一名合格的架构师需要不断学习和积累经验。以下是一些步骤和建议，可以帮助你成为一名合格的架构师：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>学习基础知识：建立坚实的计算机科学和软件工程基础，包括数据结构、算法、操作系统、数据库等。深入学习编程语言和开发技术，了解不同技术栈的优缺点。&lt;/p></description></item><item><title>软件开发流程和常用开发方法</title><link>https://blog.chensoul.cc/posts/2023/08/21/the-software-development-process/</link><pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/21/the-software-development-process/</guid><description>&lt;p>软件开发流程和常用开发方法，如敏捷开发和 DevOps，对于架构师来说非常重要。下面我将简要介绍这些概念：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>软件开发流程：&lt;/p></description></item><item><title>[译]Spring Boot项目如何实现JWT认证？</title><link>https://blog.chensoul.cc/posts/2023/08/18/how-to-implement-jwt-authentication-in-spring-boot-project/</link><pubDate>Fri, 18 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/18/how-to-implement-jwt-authentication-in-spring-boot-project/</guid><description>&lt;p>&lt;img src="../../../static/images/JWT_With_SpringBoot-1.webp" alt="How to implement JWT Authentication in Spring Boot Project?">&lt;/p></description></item><item><title>[译]Spring Boot项目如何实现Security？</title><link>https://blog.chensoul.cc/posts/2023/08/18/how-to-implement-security-in-spring-boot-project/</link><pubDate>Fri, 18 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/18/how-to-implement-security-in-spring-boot-project/</guid><description>&lt;p>&lt;img src="../../../static/images/SpringSecurityBasics-2.webp" alt="How to implement Security in Spring Boot Project?">&lt;/p></description></item><item><title>[译]没有WebSecurityConfigurerAdapter的Spring Security.md</title><link>https://blog.chensoul.cc/posts/2023/08/18/spring-security-without-websecurityconfigureradapter/</link><pubDate>Fri, 18 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/18/spring-security-without-websecurityconfigureradapter/</guid><description>&lt;p>&lt;img src="../../../static/images/WebSecurityConfigurerAdapter-Deprecated-1.webp" alt="WebSecurityConfigurerAdapter Deprecated">&lt;/p>
&lt;p>在 Spring Security 模块的上下文中，WebSecurityConfigurerAdapter 是一个抽象类，根据 &lt;a href="https://spring.io/blog/2022/02/21/spring-security-without-the-websecurityconfigureradapter" target="_blank">Spring 官方网站&lt;/a> 2022 年 2 月 21 日发布的公告，该类已从 Spring Security 5.7.0-M2 中弃用。它通常用于扩展 configure() 方法由自定义配置子类实现。因此，它鼓励用户转向基于组件的安全配置。为了支持对这种新配置设计的更改，我们将讨论常见用例列表和未来建议的替代方案。因此，我们将讨论没有 WebSecurityConfigurerAdapter 的 Spring Security 用例的实现。&lt;/p></description></item><item><title>[译]如何在Spring Boot2中使用UserDetailsService实现安全性？</title><link>https://blog.chensoul.cc/posts/2023/08/18/how-to-implement-security-in-spring-boot2-using-userdetailsservice/</link><pubDate>Fri, 18 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/18/how-to-implement-security-in-spring-boot2-using-userdetailsservice/</guid><description>&lt;p>&lt;img src="../../../static/images/Thymeleaf_SpringSecurity-1.webp" alt="img">&lt;/p>
&lt;p>继续上一篇&lt;a href="https://javatechonline.com/how-to-implement-security-in-spring-boot-project/" target="_blank">关于实现 Spring Security 的两种不同方法&lt;/a>的文章，在本文中，我们将学习第三种方法“如何使用 UserDetailsS​​ervice 在 Spring Boot 中实现 Security？”。经过上一篇文章后，我希望我们都非常熟悉安全性的基础知识，甚至是 Spring Boot 应用程序中的安全性基础知识。这次我们将创建一个用户注册表并将用户及其角色保存到数据库中。&lt;/p></description></item><item><title>[译]如何在Spring Boot3中使用UserDetailsService实现安全性？</title><link>https://blog.chensoul.cc/posts/2023/08/18/how-to-implement-security-in-spring-boot3-using-userdetailsservice/</link><pubDate>Fri, 18 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/18/how-to-implement-security-in-spring-boot3-using-userdetailsservice/</guid><description>&lt;p>&lt;img src="../../../static/images/UserDetailsServiceSpringBoot3-1.webp" alt="Spring Security UserDetailsService Using Spring Boot 3">&lt;/p></description></item><item><title>[译]Spring Security - JWT</title><link>https://blog.chensoul.cc/posts/2023/08/16/spring-security-with-jwt/</link><pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/16/spring-security-with-jwt/</guid><description>&lt;h3 id="简介和概述">简介和概述&lt;/h3>
&lt;p>JSON Web Token 或 JWT（更常见的名称）是一种开放的互联网标准 (RFC 7519)，用于以紧凑的方式在各方之间安全地传输可信信息。令牌包含编码为 JSON 对象的声明，并使用私有密钥或公钥/私钥对进行数字签名。它们是独立且可验证的，因为它们经过数字签名。 JWT 可以进行签名和/或加密。&lt;/p></description></item><item><title>[译]Spring Security - OAuth2</title><link>https://blog.chensoul.cc/posts/2023/08/16/spring-security-with-oauth2/</link><pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/16/spring-security-with-oauth2/</guid><description>&lt;h2 id="oauth-20-基础知识">OAuth 2.0 基础知识&lt;/h2>
&lt;p>&lt;img src="https://www.tutorialspoint.com/spring_security/images/oauth_2_fundamentals.webp" alt="OAuth 2.0 Fundamentals">&lt;/p></description></item><item><title>[译]Spring Security - 表单登录、记住我和注销</title><link>https://blog.chensoul.cc/posts/2023/08/16/spring-security-form-login-remember-me-and-logout/</link><pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/16/spring-security-form-login-remember-me-and-logout/</guid><description>&lt;h2 id="内容">内容&lt;/h2>
&lt;ul>
&lt;li>简介和概述&lt;/li>
&lt;li>入门（实用指南）&lt;/li>
&lt;/ul>
&lt;h2 id="简介和概述">简介和概述&lt;/h2>
&lt;p>Spring Security 附带了大量内置功能和工具，为我们提供方便。在这个例子中，我们将讨论其中三个有趣且有用的功能 -&lt;/p></description></item><item><title>[译]Spring Security - 使用数据库表单登录</title><link>https://blog.chensoul.cc/posts/2023/08/16/spring-security-form-login-with-database/</link><pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/16/spring-security-form-login-with-database/</guid><description>&lt;h2 id="内容">内容&lt;/h2>
&lt;ul>
&lt;li>简介和概述&lt;/li>
&lt;li>Spring Security 的基本组件
&lt;ul>
&lt;li>AuthenticationFilter 认证过滤器&lt;/li>
&lt;li>AuthenticationManager 认证管理器&lt;/li>
&lt;li>AuthenticationProvider 认证提供者&lt;/li>
&lt;li>UserDetailsService 用户详情服务&lt;/li>
&lt;li>PasswordEncoder 密码编码器&lt;/li>
&lt;li>Spring 安全上下文&lt;/li>
&lt;li>表单登录&lt;/li>
&lt;li>使用数据库登录&lt;/li>
&lt;li>登录尝试限制&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>入门（实用指南）&lt;/li>
&lt;/ul>
&lt;h2 id="简介和概述">简介和概述&lt;/h2>
&lt;p>除了提供各种内置的身份验证和授权选项之外，Spring Security 还允许我们根据需要自定义身份验证过程。从自定义登录页面到我们自己的自定义身份验证提供程序和身份验证过滤器，我们几乎可以自定义身份验证过程的各个方面。&lt;/p></description></item><item><title>[译]Spring Security 和 Spring Boot 入门</title><link>https://blog.chensoul.cc/posts/2023/08/16/spring-security/</link><pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/16/spring-security/</guid><description>&lt;p>&lt;a href="https://docs.spring.io/spring-security/reference/index.html" target="_blank">Spring Security&lt;/a> 是一个有助于保护企业应用程序安全的框架。通过与 Spring MVC、Spring Webflux 或 Spring Boot 集成，我们可以创建一个强大且高度可定制的身份验证和访问控制框架。在本文中，我们将解释核心概念并仔细研究 Spring Security 提供的默认配置及其工作原理。我们将进一步尝试自定义它们并分析它们对示例 Spring Boot 应用程序的影响。&lt;/p></description></item><item><title>[译]Spring Security：深入了解身份验证和授权</title><link>https://blog.chensoul.cc/posts/2023/08/16/spring-security-authentication-and-authorization/</link><pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/16/spring-security-authentication-and-authorization/</guid><description>&lt;p>您可以使用本指南来了解 Spring Security 是什么以及其核心功能（如身份验证、授权或常见漏洞保护）如何工作。此外，还有全面的常见问题解答。&lt;/p></description></item><item><title>[译]深入了解Spring事务管理：@Transactional</title><link>https://blog.chensoul.cc/posts/2023/08/16/spring-transaction-management-transactional-in-depth/</link><pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/16/spring-transaction-management-transactional-in-depth/</guid><description>&lt;p>您可以使用本指南来简单实用地了解 Spring 使用 @Transactional 注释进行事务管理的工作原理。&lt;/p></description></item><item><title>[译]为 Spring Boot 应用程序创建优化的 Docker 映像</title><link>https://blog.chensoul.cc/posts/2023/08/16/spring-boot-docker/</link><pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/16/spring-boot-docker/</guid><description>&lt;p>容器已成为打包具有所有软件和操作系统依赖项的应用程序，然后将其传送到不同环境的首选方式。&lt;/p>
&lt;p>本文着眼于容器化 Spring Boot 应用程序的不同方法：&lt;/p></description></item><item><title>Spring Security和OAuth2发展过程</title><link>https://blog.chensoul.cc/posts/2023/08/15/spring-security-oauth2-history/</link><pubDate>Tue, 15 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/15/spring-security-oauth2-history/</guid><description>&lt;h2 id="spring-security-的发展过程">Spring Security 的发展过程&lt;/h2>
&lt;p>Spring Security 是一个功能强大且广泛使用的安全框架，为企业级应用程序提供了全面的安全性。Spring Security 最初是 Acegi Security 项目的一部分，于 2004 年发布，现在已经成为 Spring 生态系统的核心组件。 Spring Security 的发展过程可以分为三个阶段：&lt;/p></description></item><item><title>数据库如何设计树形结构</title><link>https://blog.chensoul.cc/posts/2023/08/15/tree-structure-in-database/</link><pubDate>Tue, 15 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/15/tree-structure-in-database/</guid><description>&lt;p>在 MySQL 中，设计树形结构的区域表有多种方式。以下是一些常见的方案：&lt;/p></description></item><item><title>周报-28｜技术文档范例</title><link>https://blog.chensoul.cc/posts/2023/07/27/weekly_review_28/</link><pubDate>Thu, 27 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/27/weekly_review_28/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-07-10&lt;/code> 到 &lt;code>2023-07-16&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>[译]Spring Boot授权服务器 - 使用 Java 的资源服务器和客户端凭证示例</title><link>https://blog.chensoul.cc/posts/2023/07/26/spring-boot-authorization-server/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/26/spring-boot-authorization-server/</guid><description>&lt;h1 id="概述">概述&lt;/h1>
&lt;p>在本文中，我们将创建一个授权服务器，为任何客户端生成 access_token。这称为 OAuth2 的 &lt;code>client_credentials&lt;/code> 流程。它主要用于服务间通信。&lt;/p></description></item><item><title>[译]Spring Boot异常处理完整指南</title><link>https://blog.chensoul.cc/posts/2023/07/26/spring-boot-exception-handling/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/26/spring-boot-exception-handling/</guid><description>&lt;p>处理异常是构建健壮应用程序的重要部分。 Spring Boot 提供了不止一种方法。&lt;/p></description></item><item><title>[译]使用 Spring Boot 和 Spring Security 配置 CORS</title><link>https://blog.chensoul.cc/posts/2023/07/26/spring-cors/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/26/spring-cors/</guid><description>&lt;p>跨源资源共享 (CORS) 是一种基于 HTTP 标头的机制，允许服务器显式将某些源列入白名单，并帮助绕过同源策略。&lt;/p></description></item><item><title>[译]使用 Spring 的 Null-Safety 注解保护您的代码免受 NullPointerExceptions 的影响</title><link>https://blog.chensoul.cc/posts/2023/07/26/spring-boot-null-safety-annotations/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/26/spring-boot-null-safety-annotations/</guid><description>&lt;p>&lt;code>NullPointerExceptions&lt;/code> （通常缩写为“NPE”）对于每个 Java 程序员来说都是一场噩梦。&lt;/p></description></item><item><title>[译]使用Spring Boot Actuator公开有用的信息端点</title><link>https://blog.chensoul.cc/posts/2023/07/26/spring-boot-info-endpoint/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/26/spring-boot-info-endpoint/</guid><description>&lt;p>在分布式、快节奏的环境中，开发团队通常希望了解他们部署应用程序的时间、部署的应用程序版本、部署的 Git 提交等等。&lt;/p></description></item><item><title>[译]在 Spring 中实现 OAuth2：第 1 部分</title><link>https://blog.chensoul.cc/posts/2023/07/26/using-oauth2-in-spring/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/26/using-oauth2-in-spring/</guid><description>&lt;p>OAuth2 是一组规范，主要提供对 Rest API 的安全访问的方法。 OAuth 的主要目的是允许通过使用令牌来执行身份验证和授权，而不必为每个操作提供凭据。由于本文的重点是实现，并且为了不重新发明轮子，可以查看 &lt;a href="https://tools.ietf.org/html/rfc6749" target="_blank">OAuth RFC&lt;/a> 或&lt;a href="https://en.wikipedia.org/wiki/OAuth" target="_blank">维基百科&lt;/a>以获取更多理论背景。在这篇文章中，我们将深入探讨 Spring 中的 OAuth2 实现以及如何使用不同的授权类型，但在此之前值得提供一些重要概念的简要定义。&lt;/p></description></item><item><title>[译]在 Spring 中实现 OAuth2：使用范围（第 2 部分）</title><link>https://blog.chensoul.cc/posts/2023/07/26/using-oauth2-in-spring-scopes/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/26/using-oauth2-in-spring-scopes/</guid><description>&lt;p>我们在&lt;a href="https://blog.chensoul.cc/posts/2023/07/26/using-oauth2-in-spring/">上一篇文章&lt;/a>中了解了基本的 OAuth2 概念以及如何在 Spring 中实现和执行不同的授权。在这篇文章中，我们将介绍 OAuth2 的另一个重要概念：范围。&lt;/p></description></item><item><title>[译]使用Spring Boot2和Spring Security 5以及JDBC令牌存储进行Oauth2集中授权</title><link>https://blog.chensoul.cc/posts/2023/07/14/oauth-2-centralized-authorization-with-spring-boot-2-and-spring-security-5-and-jdbc-token-store/</link><pubDate>Fri, 14 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/14/oauth-2-centralized-authorization-with-spring-boot-2-and-spring-security-5-and-jdbc-token-store/</guid><description>&lt;p>在这篇文章中，我们将了解如何使用 Spring Boot 2 和 Spring Security 5 OAuth2 来实现集中授权的授权服务器以及如何通过 GUI 对其进行管理，还将提供资源服务器演示以及 github 下的整个项目。&lt;/p></description></item><item><title>周报-26｜上半年的绩效总结</title><link>https://blog.chensoul.cc/posts/2023/07/11/weekly_review_26/</link><pubDate>Tue, 11 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/11/weekly_review_26/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-06-26&lt;/code> 到 &lt;code>2023-07-09&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>Python学习7：输入和输出</title><link>https://blog.chensoul.cc/posts/2023/07/08/python-input-and-output/</link><pubDate>Sat, 08 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/08/python-input-and-output/</guid><description>&lt;p>在 Python 中，可以使用 input() 函数从标准输入读取用户输入的数据，并使用 print() 函数将数据输出到标准输出。下面是一些常用的输入输出方法：&lt;/p></description></item><item><title>Python学习6：模块和包</title><link>https://blog.chensoul.cc/posts/2023/07/06/python-module-package/</link><pubDate>Thu, 06 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/06/python-module-package/</guid><description>&lt;p>在 Python 中，模块（module）是指一个包含 Python 代码的文件，而包（package）则是指一个包含多个模块的文件夹。模块和包可以用来组织和管理 Python 代码，使得代码更加易于维护和扩展。&lt;/p></description></item><item><title>周报-25｜端午安康</title><link>https://blog.chensoul.cc/posts/2023/06/28/weekly_review_25/</link><pubDate>Wed, 28 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/28/weekly_review_25/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-06-19&lt;/code> 到 &lt;code>2023-06-25&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>[译]微服务设计模式</title><link>https://blog.chensoul.cc/posts/2023/06/26/microservice-design-patterns/</link><pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/26/microservice-design-patterns/</guid><description>&lt;p>基于微服务的应用程序的主要特征在 &lt;a href="http://web.archive.org/web/20190705163602/http://blog.arungupta.me/microservices-monoliths-noops/" target="_blank">微服务、单体和 NoOps&lt;/a> 中定义。它们是功能分解或领域驱动设计、定义良好的接口、明确发布的接口、单一责任原则和潜在的多语言。每项服务都是完全自主和全栈的。&lt;/p></description></item><item><title>[译]Python模块和包-简介</title><link>https://blog.chensoul.cc/posts/2023/06/25/python-modules-packages/</link><pubDate>Sun, 25 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/25/python-modules-packages/</guid><description>&lt;p>&lt;img src="../../../static/images/Python-Modules-and-Packages-An-Introduction_Watermarked.webp" alt="Python Modules &amp;amp; Packages">&lt;/p></description></item><item><title>[译]用 Bottle 开发</title><link>https://blog.chensoul.cc/posts/2023/06/25/developing-with-bottle/</link><pubDate>Sun, 25 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/25/developing-with-bottle/</guid><description>&lt;p>&lt;img src="../../../static/images/bottle-logo.webp" alt="Bottle logo">&lt;/p>
&lt;p>我喜欢 &lt;a href="http://bottlepy.org/docs/stable/" target="_blank">bottle&lt;/a>。它是一个简单、快速且功能强大的 Python 微框架，非常适合小型 Web 应用程序和快速原型设计。对于那些刚刚开始 Web 开发的人来说，它也是一个出色的学习工具。&lt;/p></description></item><item><title>Python学习5：函数</title><link>https://blog.chensoul.cc/posts/2023/06/25/python-function/</link><pubDate>Sun, 25 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/25/python-function/</guid><description>&lt;h2 id="函数的定义">函数的定义&lt;/h2>
&lt;p>在 Python 中，函数是一段可重复使用的代码块，它接受一些输入（也称为参数）并产生一些输出。函数可以通过 &lt;code>def&lt;/code> 关键字来定义，语法如下：&lt;/p></description></item><item><title>[译]为恐龙解释现代CSS</title><link>https://blog.chensoul.cc/posts/2023/06/21/modern-css-explained-for-dinosaurs/</link><pubDate>Wed, 21 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/21/modern-css-explained-for-dinosaurs/</guid><description>&lt;p>&lt;img src="../../../static/images/modern-css-explained-for-dinosaurs-01.webp" alt="Dinosaur comic panel 1">&lt;/p></description></item><item><title>周报-24｜如果没有疼痛</title><link>https://blog.chensoul.cc/posts/2023/06/21/weekly_review_24/</link><pubDate>Wed, 21 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/21/weekly_review_24/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-06-12&lt;/code> 到 &lt;code>2023-06-18&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>[译]为恐龙解释现代HTML</title><link>https://blog.chensoul.cc/posts/2023/06/20/modern-html-explained-for-dinosaurs/</link><pubDate>Tue, 20 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/20/modern-html-explained-for-dinosaurs/</guid><description>&lt;p>&lt;img src="../../../static/images/raw-images/modern-html-explained-for-dinosaurs-01.webp" alt="Dinosaur comic panel 1">&lt;/p></description></item><item><title>[译]为恐龙解释现代JavaScript</title><link>https://blog.chensoul.cc/posts/2023/06/19/modern-javascript-explained-for-dinosaurs/</link><pubDate>Mon, 19 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/19/modern-javascript-explained-for-dinosaurs/</guid><description>&lt;p>&lt;img src="../../../static/images/modern-javascript-explained-for-dinosaurs-01.webp" alt="Images from Dinosaur Comics by Ryan North">&lt;/p></description></item><item><title>Python学习4：流程控制</title><link>https://blog.chensoul.cc/posts/2023/06/14/python-flow-control/</link><pubDate>Wed, 14 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/14/python-flow-control/</guid><description>&lt;p>在 Python 中，流程控制语句包括条件语句（if-elif-else）、循环语句（for 和 while）、跳转语句（break、continue 和 return）和异常处理语句。&lt;/p></description></item><item><title>周报-23｜读书、健身、定投、帮朋友、陪家人</title><link>https://blog.chensoul.cc/posts/2023/06/14/weekly_review_23/</link><pubDate>Wed, 14 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/14/weekly_review_23/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-06-05&lt;/code> 到 &lt;code>2023-06-11&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>Python学习3：运算符和表达式</title><link>https://blog.chensoul.cc/posts/2023/06/11/python-operator-and-expression/</link><pubDate>Sun, 11 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/11/python-operator-and-expression/</guid><description>&lt;p>在 Python 中，运算符是用于执行各种操作的符号或关键字；表达式是由操作符、变量、常量和函数调用等组成的，它们可以被计算求值并返回一个结果。&lt;/p></description></item><item><title>Python学习2：数据类型</title><link>https://blog.chensoul.cc/posts/2023/06/10/python-data-type/</link><pubDate>Sat, 10 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/10/python-data-type/</guid><description>&lt;p>Python 中的数据类型包括：&lt;/p>
&lt;ol>
&lt;li>数字类型：包括整型、浮点型、复数型和布尔类型：只有两个取值，True 和 False，用于表示逻辑值。&lt;/li>
&lt;li>字符串类型：由一系列字符组成，可以是单引号、双引号或三引号括起来的文本。&lt;/li>
&lt;li>列表类型：由一系列有序的元素组成，可以包含任何类型的数据。&lt;/li>
&lt;li>元组类型：与列表类似，但是&lt;code>元素不能被修改&lt;/code>。&lt;/li>
&lt;li>集合类型：由一组唯一的元素组成，支持集合的基本操作，如并集、交集和差集等。&lt;/li>
&lt;li>字典类型：由一组键值对组成，其中键是唯一的，用于查找和存储值。&lt;/li>
&lt;li>None 类型：表示空值或缺失值。&lt;/li>
&lt;/ol>
&lt;h2 id="数字">数字&lt;/h2>
&lt;p>在 Python 中，数字类型包括整数（int）、浮点数（float）、复数（complex）和布尔值（bool）。&lt;/p></description></item><item><title>周报-22｜微信读书笔记助手</title><link>https://blog.chensoul.cc/posts/2023/06/09/weekly_review_22/</link><pubDate>Fri, 09 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/09/weekly_review_22/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-05-29&lt;/code> 到 &lt;code>2023-06-04&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>[译]什么是 Python Wheels，你为什么要关心它？</title><link>https://blog.chensoul.cc/posts/2023/06/01/python-wheels/</link><pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/01/python-wheels/</guid><description>&lt;p>&lt;img src="../../../static/images/What-are-Python-Wheels-and-Why-Should-You-Care_Watermarked.22246cad13be.webp" alt="What Are Python Wheels and Why Should You Care?">&lt;/p></description></item><item><title>[译]使用 Python 的 pip 管理项目的依赖关系</title><link>https://blog.chensoul.cc/posts/2023/06/01/what-is-pip/</link><pubDate>Thu, 01 Jun 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/06/01/what-is-pip/</guid><description>&lt;p>&lt;img src="https://files.realpython.com/media/What-is-PIP_Watermarked.4944e95d83ad.jpg" alt="Using Python&amp;rsquo;s pip to Manage Your Projects&amp;rsquo; Dependencies">&lt;/p></description></item><item><title>周报-21｜Python之禅、产品经理被优化、端午节送节</title><link>https://blog.chensoul.cc/posts/2023/05/31/weekly_review_21/</link><pubDate>Wed, 31 May 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/05/31/weekly_review_21/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="../../../static/images/weekly-review-21-00.webp" alt="weekly-review-21-00">&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>本篇是对 &lt;code>2023-05-22&lt;/code> 到 &lt;code>2023-05-28&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-20｜自动生成每日早报、周末团建</title><link>https://blog.chensoul.cc/posts/2023/05/25/weekly_review_20/</link><pubDate>Thu, 25 May 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/05/25/weekly_review_20/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="../../../static/images/weekly-review-20-00.webp" alt="weekly-review-20-00">&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;!-- raw HTML omitted -->
&lt;p>本篇是对 &lt;code>2023-05-15&lt;/code> 到 &lt;code>2023-05-21&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>Python学习1：注释、变量和常量</title><link>https://blog.chensoul.cc/posts/2023/05/23/python-comment-and-variable/</link><pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/05/23/python-comment-and-variable/</guid><description>&lt;p>Python 注释、变量和常量是编写 Python 代码时非常重要的概念，下面分别介绍它们的基本用法和语法。&lt;/p></description></item><item><title>[译]Build Robust Continuous Integration With Docker and Friends</title><link>https://blog.chensoul.cc/posts/2023/05/22/docker-continuous-integration/</link><pubDate>Mon, 22 May 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/05/22/docker-continuous-integration/</guid><description>&lt;p>&lt;img src="../../../static/images/UPDATE-Docker-in-Action-Fitter-Happier-More-Productive_Watermarked-0765910.webp" alt="Build Robust Continuous Integration With Docker and Friends">&lt;/p></description></item><item><title>JSR 166规范</title><link>https://blog.chensoul.cc/posts/2023/05/18/jsr-166/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/05/18/jsr-166/</guid><description>&lt;h2 id="jsr-介绍">JSR 介绍&lt;/h2>
&lt;p>JSR，全称 Java Specification Requests， 即 Java 规范提案， 主要是用于向 JCP(Java Community Process) 提出新增标准化技术规范的正式请求。每次 JAVA 版本更新都会有对应的 JSR 更新，比如在 Java 8 版本中，其新特性 Lambda 表达式对应的是 &lt;a href="http://jcp.org/en/jsr/detail?id=335" target="_blank">JSR 335&lt;/a>，新的日期和时间 API 对应的是 &lt;a href="http://jcp.org/en/jsr/detail?id=310" target="_blank">JSR 310&lt;/a>。&lt;/p></description></item><item><title>周报-19｜武功山看日出、Python初学建议</title><link>https://blog.chensoul.cc/posts/2023/05/18/weekly_review_19/</link><pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/05/18/weekly_review_19/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="../../../static/images/weekly-review-19-00.webp" alt="weekly-review-19-00">&lt;/p>
&lt;p>本篇是对 &lt;code>2023-05-08&lt;/code> 到 &lt;code>2023-05-14&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>Git Flow分支模型和使用</title><link>https://blog.chensoul.cc/posts/2023/05/11/git-flow-model-and-usage/</link><pubDate>Thu, 11 May 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/05/11/git-flow-model-and-usage/</guid><description>&lt;h2 id="介绍">介绍&lt;/h2>
&lt;p>&lt;a href="https://nvie.com/posts/a-successful-git-branching-model/" target="_blank">Git Flow&lt;/a> 是由 Vincent Driessen 在 2010 年提出的一种 Git 工作流。在这之前，Git 没有一个明确的标准工作流，导致团队在使用 Git 时往往会遇到一些问题，如分支管理、版本控制等。为了解决这些问题，Vincent Driessen 提出了 Git Flow 分支模型，成为了 Git 在实际应用中的一种标准工作流。&lt;/p></description></item><item><title>周报-18｜导出豆瓣数据、Effective Java 3第二章总结</title><link>https://blog.chensoul.cc/posts/2023/05/10/weekly_review_18/</link><pubDate>Wed, 10 May 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/05/10/weekly_review_18/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-05-01&lt;/code> 到 &lt;code>2023-05-07&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>Python安装、构建、发布、下载和运行</title><link>https://blog.chensoul.cc/posts/2023/05/09/python-install-build-publish-run/</link><pubDate>Tue, 09 May 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/05/09/python-install-build-publish-run/</guid><description>&lt;p>最近开始学习 python，这篇文章记录如何安装 python、搭建 python 开发环境，以及如何构建、发布 python 包。我使用的是 macos 系统，所以本篇文章中的一些命令是基于 macos ，特此说明。&lt;/p></description></item><item><title>Python包和环境管理</title><link>https://blog.chensoul.cc/posts/2023/05/09/python-package-and-env-management/</link><pubDate>Tue, 09 May 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/05/09/python-package-and-env-management/</guid><description>&lt;h2 id="发展历史">发展历史&lt;/h2>
&lt;p>Python 包管理工具是 Python 生态系统中的一个重要组成部分，它们为 Python 开发者提供了方便、快捷的包管理方式。以下是 Python 包管理工具的发展历史概述：&lt;/p></description></item><item><title>周报-17｜导出苹果健康数据、自动化收集个人数据、FlexyPool动态连接池</title><link>https://blog.chensoul.cc/posts/2023/05/06/weekly_review_17/</link><pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/05/06/weekly_review_17/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-04-24&lt;/code> 到 &lt;code>2023-04-30&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-16｜《灌篮高手》电影、《春山如笑》话剧</title><link>https://blog.chensoul.cc/posts/2023/04/25/weekly_review_16/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/04/25/weekly_review_16/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="../../../static/images/weekly-review-16-01.webp" alt="weekly-review-16-01">&lt;/p>
&lt;p>本篇是对 &lt;code>2023-04-17&lt;/code> 到 &lt;code>2023-04-23&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-15｜Umami升级到2.0、汉街蜡像馆、使用Strava跑步</title><link>https://blog.chensoul.cc/posts/2023/04/18/weekly_review_15/</link><pubDate>Tue, 18 Apr 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/04/18/weekly_review_15/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="../../../static/images/weekly-review-15-01.webp" alt="weekly-review-15-01">&lt;/p>
&lt;p>&lt;em>题图：楚河汉街蜡像馆&lt;/em>&lt;/p></description></item><item><title>周报-14｜如何学习一门编程语言</title><link>https://blog.chensoul.cc/posts/2023/04/13/weekly_review_14/</link><pubDate>Thu, 13 Apr 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/04/13/weekly_review_14/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="../../../static/images/weekl-review-14-01.webp" alt="weekl-review-14-01">&lt;/p>
&lt;p>本篇是对 &lt;code>2023-04-03&lt;/code> 到 &lt;code>2023-04-09&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-13｜健身、记账、更新SSL证书、代码提交百度站点收录</title><link>https://blog.chensoul.cc/posts/2023/04/04/weekly_review_13/</link><pubDate>Tue, 04 Apr 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/04/04/weekly_review_13/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="../../../static/images/weekly-review-13-01.webp" alt="weekly-review-13-01">&lt;/p>
&lt;p>本篇是对 &lt;code>2023-03-27&lt;/code> 到 &lt;code>2023-04-02&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-12｜车辆被堵、开车总结、Effective Java3笔记</title><link>https://blog.chensoul.cc/posts/2023/03/28/weekly_review_12/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/03/28/weekly_review_12/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="../../../static/images/weekly-review-12-01.webp" alt="weekly-review-12-01">&lt;/p>
&lt;p>本篇是对 &lt;code>2023-03-20&lt;/code> 到 &lt;code>2023-03-26&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-11｜从语雀迁移到Obsidian</title><link>https://blog.chensoul.cc/posts/2023/03/20/weekly_review_11/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/03/20/weekly_review_11/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="../../../static/images/weekly-review-11-04.webp" alt="weekly-review-11-04">&lt;/p>
&lt;p>图片：&lt;em>涨渡湖湿地水上森林公园&lt;/em>&lt;/p></description></item><item><title>周报-10｜通过Cloudflare Tunnel访问服务、Vercel部署Cusdis和Umami</title><link>https://blog.chensoul.cc/posts/2023/03/13/weekly_review_10/</link><pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/03/13/weekly_review_10/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="../../../static/images/weekly-review-10-00.webp" alt="weekly-review-10-00">&lt;/p>
&lt;p>本篇是对 &lt;code>2023-03-06&lt;/code> 到 &lt;code>2023-03-12&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-9｜开车总结、博客该写什么、Web3批量空投</title><link>https://blog.chensoul.cc/posts/2023/03/07/weekly_review_9/</link><pubDate>Tue, 07 Mar 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/03/07/weekly_review_9/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="../../../static/images/weekly-review-09-07.webp" alt="将军山">&lt;/p>
&lt;p>本篇是对 &lt;code>2023-02-27&lt;/code> 到 &lt;code>2023-03-05&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-8｜内存泄漏、公司裁员、练车</title><link>https://blog.chensoul.cc/posts/2023/02/27/weekly_review_8/</link><pubDate>Mon, 27 Feb 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/02/27/weekly_review_8/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-02-20&lt;/code> 到 &lt;code>2023-02-26&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-7｜练车、博客优化、注册ChatGPT账号</title><link>https://blog.chensoul.cc/posts/2023/02/21/weekly_review_7/</link><pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/02/21/weekly_review_7/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-02-13&lt;/code> 到 &lt;code>2023-02-19&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-6｜买车和选号、粉色理论</title><link>https://blog.chensoul.cc/posts/2023/02/13/weekly_review_6/</link><pubDate>Mon, 13 Feb 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/02/13/weekly_review_6/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-02-06&lt;/code> 到 &lt;code>2023-02-12&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-5｜项目事故、牙疼、Damus</title><link>https://blog.chensoul.cc/posts/2023/02/07/weekly_review_5/</link><pubDate>Tue, 07 Feb 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/02/07/weekly_review_5/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-01-30&lt;/code> 到 &lt;code>2023-02-05&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-4｜过年、向上管理、工作周总结</title><link>https://blog.chensoul.cc/posts/2023/01/30/weekly_review_4/</link><pubDate>Mon, 30 Jan 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/01/30/weekly_review_4/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-01-23&lt;/code> 到 &lt;code>2023-01-29&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>我的VPS服务部署记录</title><link>https://blog.chensoul.cc/posts/2023/01/25/notes-about-deploy-services-in-vps/</link><pubDate>Wed, 25 Jan 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/01/25/notes-about-deploy-services-in-vps/</guid><description>&lt;p>我的 VPS 使用的是 centos 服务器，所以以下操作都是基于 centos 系统。&lt;/p></description></item><item><title>周报-3｜博客定制、VPS部署服务</title><link>https://blog.chensoul.cc/posts/2023/01/25/weekly_review_3/</link><pubDate>Wed, 25 Jan 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/01/25/weekly_review_3/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-01-16&lt;/code> 到 &lt;code>2023-01-22&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-2｜博客重构</title><link>https://blog.chensoul.cc/posts/2023/01/15/weekly_review_2/</link><pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/01/15/weekly_review_2/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-01-09&lt;/code> 到 &lt;code>2023-01-15&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>周报-1｜开始写周报、冥想</title><link>https://blog.chensoul.cc/posts/2023/01/08/weekly_review_1/</link><pubDate>Sun, 08 Jan 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/01/08/weekly_review_1/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>本篇是对 &lt;code>2023-01-02&lt;/code> 到 &lt;code>2023-01-08&lt;/code> 这周生活的记录与思考。首发在我的个人 &lt;a href="https://blog.chensoul.cc/" target="_blank">博客&lt;/a>，你可以移步了解更多或者给我留言。&lt;/p></description></item><item><title>博客中如何使用图床服务</title><link>https://blog.chensoul.cc/posts/2022/08/19/using-images-in-blog/</link><pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2022/08/19/using-images-in-blog/</guid><description>&lt;p>最近编写文档或者写博客，喜欢用 Typora 编辑器通过 Markdown 语法完成编写所有内容。为此，还付费购买了许可证。&lt;/p></description></item><item><title>Mac开发环境配置</title><link>https://blog.chensoul.cc/posts/2021/09/09/mac-development-environment-setup/</link><pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2021/09/09/mac-development-environment-setup/</guid><description>&lt;p>这是我的第一篇文章，作为程序员，首先要做得第一件事情，就是配置好开发环境，因为我使用的是 Mac 开发环境，所以，这篇文章主要是基于 Mac 操作系统，记录开发环境搭建过程。&lt;/p></description></item><item><title>从零开始搭建个人博客</title><link>https://blog.chensoul.cc/posts/2021/09/09/build-personal-blog-from-zero/</link><pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2021/09/09/build-personal-blog-from-zero/</guid><description>&lt;p>从零开始搭建博客，包括注册域名、购买服务器、部署程序及网站配置和优化。&lt;/p>
&lt;h2 id="域名">域名&lt;/h2>
&lt;p>搭建一个博客或者网站，需要有一个域名。那什么是域名呢？看看百度百科上的解释：&lt;/p></description></item></channel></rss>