<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Maven on ChenSoul Blog</title><link>https://blog.chensoul.cc/tags/maven/</link><description>Recent content in Maven on ChenSoul Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 07 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.chensoul.cc/tags/maven/index.xml" rel="self" type="application/rss+xml"/><item><title>[译]从JUnit4迁移到JUnit5：权威指南</title><link>https://blog.chensoul.cc/posts/2024/11/07/junit-5-migration/</link><pubDate>Thu, 07 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/11/07/junit-5-migration/</guid><description>&lt;p&gt;在本文中，我们将了解从 JUnit 4 迁移到 JUnit 5 所需的步骤。我们将了解如何运行新版本的现有测试，以及迁移代码需要进行哪些更改。&lt;/p&gt;</description></item><item><title>ThingsBoard源码编译和Idea运行</title><link>https://blog.chensoul.cc/posts/2024/08/27/thingsboard-code-source-compile/</link><pubDate>Tue, 27 Aug 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/08/27/thingsboard-code-source-compile/</guid><description>&lt;p&gt;ThingsBoard 源码地址：&lt;a href="https://github.com/thingsboard/thingsboard" target="_blank"&gt;https://github.com/thingsboard/thingsboard&lt;/a&gt;，从 &lt;a href="https://github.com/thingsboard/thingsboard/releases/tag/v3.7" target="_blank"&gt;3.7&lt;/a&gt; 版本之后，要求 JDK17。官方提供了源码编译的文档：&lt;a href="https://thingsboard.io/docs/user-guide/install/building-from-source/" target="_blank"&gt;Building from sources&lt;/a&gt;&lt;/p&gt;</description></item><item><title>[译]为 JMS 安装和设置 Glassfish</title><link>https://blog.chensoul.cc/posts/2024/07/23/install-and-setup-glassfish-for-jms/</link><pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/23/install-and-setup-glassfish-for-jms/</guid><description>&lt;p&gt;在本文中，我们将为 JMS 2.0 设置 Glassfish，创建一个 Java 项目并添加必要的依赖项。&lt;/p&gt;</description></item><item><title>将 Maven 站点发布到 GitHub Pages</title><link>https://blog.chensoul.cc/posts/2024/07/18/publishing-a-maven-site-to-github-pages/</link><pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/18/publishing-a-maven-site-to-github-pages/</guid><description>&lt;p&gt;本文源代码：&lt;a href="https://github.com/chensoul/maven-site-github-example/" target="_blank"&gt;https://github.com/chensoul/maven-site-github-example/&lt;/a&gt; 。&lt;/p&gt;
&lt;h2 id="创建-java-maven-项目"&gt;创建 Java Maven 项目&lt;/h2&gt;
&lt;p&gt;让我们使用 Maven 创建一个简单的 Java 项目&lt;/p&gt;</description></item><item><title>Spring Boot集成SpringDoc生成Api文档</title><link>https://blog.chensoul.cc/posts/2024/07/10/springdoc-with-spring-boot/</link><pubDate>Wed, 10 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/10/springdoc-with-spring-boot/</guid><description>&lt;p&gt;以下以 Maven 为例介绍 Spring Boot集成SpringDoc生成Api文档。&lt;/p&gt;</description></item><item><title>Jenkins安装和部署-使用Docker</title><link>https://blog.chensoul.cc/posts/2024/06/26/install-jenkins/</link><pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/26/install-jenkins/</guid><description>&lt;h2 id="使用-docker-安装"&gt;使用 Docker 安装&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ docker volume create --name jenkins_data
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;$ docker run -p 8080:8080 -p 50000:50000 -v jenkins_data://var/jenkins_home jenkins/jenkins:jdk21
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第一次启动 Jenkins 时，Docker 日志将包含如下消息：&lt;/p&gt;</description></item><item><title>搭建本地 Maven 仓库 Artifactory 开源版</title><link>https://blog.chensoul.cc/posts/2024/06/25/install-artifactory-oss/</link><pubDate>Tue, 25 Jun 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/06/25/install-artifactory-oss/</guid><description>&lt;h2 id="安装-artifactory"&gt;安装 Artifactory&lt;/h2&gt;
&lt;p&gt;官方下载安装地址：&lt;a href="https://jfrog.com/community/download-artifactory-oss/" target="_blank"&gt;https://jfrog.com/community/download-artifactory-oss/&lt;/a&gt; ，支持三种安装方式：&lt;/p&gt;</description></item><item><title>2024-01-08｜VPS 迁移</title><link>https://blog.chensoul.cc/posts/2024/01/08/til/</link><pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/08/til/</guid><description>&lt;p&gt;今天做了什么：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VPS 迁移&lt;/li&gt;
&lt;li&gt;继续重构 foodie-cloud&lt;/li&gt;
&lt;li&gt;参考 &lt;a href="https://github.com/mybatis/parent/" target="_blank"&gt;https://github.com/mybatis/parent/ &lt;/a&gt;
重构 &lt;a href="https://github.com/chensoul/chensoul-parent" target="_blank"&gt;chensoul-parent&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;修改了 maven 插件&lt;/li&gt;
&lt;li&gt;添加了 Github Actions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="vps-迁移"&gt;VPS 迁移&lt;/h2&gt;
&lt;p&gt;迁移步骤：&lt;/p&gt;</description></item><item><title>2023-12-14｜购买新的VPS服务器、最近在做什么</title><link>https://blog.chensoul.cc/posts/2023/12/14/til/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/14/til/</guid><description>&lt;p&gt;Today I Learned. 今天分享内容：购买新的 VPS 服务器、最近在做什么。&lt;/p&gt;</description></item><item><title>[译]使用 Spring 的 Null-Safety 注解保护您的代码免受 NullPointerExceptions 的影响</title><link>https://blog.chensoul.cc/posts/2023/07/26/spring-boot-null-safety-annotations/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/07/26/spring-boot-null-safety-annotations/</guid><description>&lt;p&gt;&lt;code&gt;NullPointerExceptions&lt;/code&gt; （通常缩写为“NPE”）对于每个 Java 程序员来说都是一场噩梦。&lt;/p&gt;</description></item><item><title>Git Flow分支模型和使用</title><link>https://blog.chensoul.cc/posts/2023/05/11/git-flow-model-and-usage/</link><pubDate>Thu, 11 May 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/05/11/git-flow-model-and-usage/</guid><description>&lt;h2 id="介绍"&gt;介绍&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://nvie.com/posts/a-successful-git-branching-model/" target="_blank"&gt;Git Flow&lt;/a&gt; 是由 Vincent Driessen 在 2010 年提出的一种 Git 工作流。在这之前，Git 没有一个明确的标准工作流，导致团队在使用 Git 时往往会遇到一些问题，如分支管理、版本控制等。为了解决这些问题，Vincent Driessen 提出了 Git Flow 分支模型，成为了 Git 在实际应用中的一种标准工作流。&lt;/p&gt;</description></item></channel></rss>