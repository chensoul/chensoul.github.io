<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spring-Cloud on ChenSoul Blog</title><link>https://blog.chensoul.cc/tags/spring-cloud/</link><description>Recent content in Spring-Cloud on ChenSoul Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 20 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.chensoul.cc/tags/spring-cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>2024-02-20｜RateLimitAspect请求限流、调整spring-cloud-examples项目结构</title><link>https://blog.chensoul.cc/posts/2024/02/20/til/</link><pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/02/20/til/</guid><description>&lt;p&gt;今天做了什么：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ChatGPT 编写一个 RateLimitAspect 类，实现基于用户的 get 查询请求的限流功能&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>2024-02-19｜foodie-cloud集成Sharding Sphere实现读写分离</title><link>https://blog.chensoul.cc/posts/2024/02/19/til/</link><pubDate>Mon, 19 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/02/19/til/</guid><description>&lt;p&gt;今天做了什么：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重构 foodie-cloud 项目
&lt;ul&gt;
&lt;li&gt;基于 docker 实现数据库配置主从复制，集成 Sharding Sphere 实现读写分离&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description></item><item><title>2024-02-05｜Spring Cloud Config快速入门</title><link>https://blog.chensoul.cc/posts/2024/02/05/til/</link><pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/02/05/til/</guid><description>&lt;p&gt;今天做了什么：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建项目 &lt;a href="https://github.com/chensoul/spring-cloud-examples" target="_blank"&gt;spring-cloud-examples&lt;/a&gt;，测试 &lt;em&gt;Spring Cloud&lt;/em&gt; Config 使用本地文件和 git 仓库作为配置中心&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Spring Cloud&lt;/em&gt; Config 是一个基于http协议的远程配置实现方式。通过统一的配置管理服务器进行配置管理，客户端通过http协议主动的拉取服务的的配置信息，完成配置获取。
&lt;em&gt;Spring Cloud&lt;/em&gt; Config 支持以下几种存储方式：&lt;/p&gt;</description></item><item><title>2024-02-04｜foodie-cloud集成Resilience4j</title><link>https://blog.chensoul.cc/posts/2024/02/04/til/</link><pubDate>Sun, 04 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/02/04/til/</guid><description>&lt;p&gt;今天做了什么：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;重构 foodie-cloud 项目&lt;/p&gt;</description></item><item><title>2024-02-02｜foodie-cloud集成Spring Cloud Config和SpringDoc</title><link>https://blog.chensoul.cc/posts/2024/02/02/til/</link><pubDate>Fri, 02 Feb 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/02/02/til/</guid><description>&lt;p&gt;今天做了什么：&lt;/p&gt;
&lt;p&gt;参考 《&lt;a href="https://download.packt.com/free-ebook/9781805128694" target="_blank"&gt;Microservices with Spring Boot 3 and Spring Cloud&lt;/a&gt;》，重构
foodie-cloud 项目&lt;/p&gt;</description></item><item><title>2024-01-03｜今天做了什么</title><link>https://blog.chensoul.cc/posts/2024/01/03/til/</link><pubDate>Wed, 03 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/03/til/</guid><description>&lt;p&gt;今天做了什么：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bingoohuang/idworker-client" target="_blank"&gt;idworker-client&lt;/a&gt; ，一个开源的 ID 生成器，适合在单机使用&lt;/li&gt;
&lt;li&gt;github 上创建了一个使用 spring cloud netflix 相关组件的微服务项目&lt;/li&gt;
&lt;li&gt;重构了狂野架构师课程中的微服务版本的源码&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="foodie-cloud"&gt;foodie-cloud&lt;/h1&gt;
&lt;p&gt;重构慕课网 &lt;a href="https://class.imooc.com/sale/javaarchitect" target="_blank"&gt;Java架构师-技术专家&lt;/a&gt; 课程中的 &lt;a href="https://github.com/liuhouer/np-architect/" target="_blank"&gt;源码&lt;/a&gt;，我做了一些改动：&lt;/p&gt;</description></item><item><title>2024-01-02｜雪崩问题、Spring Cloud微服务集成 Sentinel</title><link>https://blog.chensoul.cc/posts/2024/01/02/til/</link><pubDate>Tue, 02 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/02/til/</guid><description>&lt;p&gt;今天做了什么：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;雪崩问题&lt;/li&gt;
&lt;li&gt;Spring Cloud微服务集成 Sentinel&lt;/li&gt;
&lt;li&gt;扩展 Sentinel 集成 OpenFeign，实现自动降级&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="雪崩问题"&gt;雪崩问题&lt;/h2&gt;
&lt;p&gt;1、什么是雪崩问题？
雪崩问题（Avalanche Effect）是指在分布式系统中，当一个节点或服务出现故障或不可用时，其影响会扩散到其他节点或服务，导致级联故障的现象。这种现象类似于雪崩，一旦开始，会不断放大和蔓延，最终导致整个系统崩溃。
雪崩问题的主要原因是系统中的节点或服务之间存在过度依赖、高度耦合，以及缺乏容错机制。当一个节点或服务出现故障时，由于其他节点或服务无法及时处理或适应，故障会不断传播，最终导致整个系统的崩溃。&lt;/p&gt;</description></item></channel></rss>