<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Http on ChenSoul Blog</title><link>https://blog.chensoul.cc/tags/http/</link><description>Recent content in Http on ChenSoul Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 08 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.chensoul.cc/tags/http/index.xml" rel="self" type="application/rss+xml"/><item><title>[译]比较 Socket.IO 和 HTTP：主要区别和用例</title><link>https://blog.chensoul.cc/posts/2024/05/08/socketio-vs-http/</link><pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/08/socketio-vs-http/</guid><description>&lt;p&gt;原文链接：&lt;a href="https://ably.com/topic/socketio-vs-http" target="_blank"&gt;https://ably.com/topic/socketio-vs-http&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在规划实时应用程序时，您应该仔细考虑要使用哪些技术。本文对&lt;a href="https://ably.com/topic/socketio" target="_blank"&gt;Socket.IO&lt;/a&gt;实时库和&lt;a href="https://ably.com/topic/websockets-vs-http#http" target="_blank"&gt;HTTP&lt;/a&gt;协议进行了比较。下面您将了解每种解决方案的功能、每种解决方案的优缺点以及何时使用它们。&lt;/p&gt;
&lt;h2 id="什么是socketio"&gt;什么是Socket.IO？&lt;/h2&gt;
&lt;p&gt;Socket.IO 是一个创建于 2010 年的库，提供客户端和服务器之间的实时双向通信。它允许管理连接、发送和接收消息等等。这使得 Socket.IO 成为构建消息/聊天应用程序的理想选择。&lt;/p&gt;</description></item><item><title>[译]WebSocket与HTTP：2024年为您的项目选择哪一个</title><link>https://blog.chensoul.cc/posts/2024/05/07/websockets-vs-http/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websockets-vs-http/</guid><description>&lt;p&gt;原文链接：&lt;a href="https://ably.com/topic/websockets-vs-http" target="_blank"&gt;https://ably.com/topic/websockets-vs-http&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当谈到 WebSocket 与 HTTP 时，决定使用哪一种并不总是那么明确。哪一个更好？您的应用程序应该使用哪一款？&lt;/p&gt;</description></item><item><title>[译]什么是 HTTP？</title><link>https://blog.chensoul.cc/posts/2024/05/07/http/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/http/</guid><description>&lt;p&gt;原文链接：&lt;a href="https://www.pubnub.com/guides/http/" target="_blank"&gt;https://www.pubnub.com/guides/http/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="http-概述"&gt;HTTP 概述&lt;/h2&gt;
&lt;p&gt;HTTP，即超文本传输协议，是互联网通信的基础。它在客户端-服务器模型上运行，其中前端客户端（例如网络浏览器）通过向服务器发送HTTP请求消息来发起请求，例如请求网页（例如搜索引擎）。然后，服务器使用包含所请求资源的 HTTP 响应消息进行响应，如果资源不可用，则使用错误消息进行响应。&lt;/p&gt;</description></item><item><title>[译]什么是HTTP流式传输？</title><link>https://blog.chensoul.cc/posts/2024/05/07/http-streaming/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/http-streaming/</guid><description>&lt;p&gt;原文链接：&lt;a href="https://www.pubnub.com/guides/http-streaming/" target="_blank"&gt;https://www.pubnub.com/guides/http-streaming/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="什么是-http-流式传输"&gt;什么是 HTTP 流式传输？&lt;/h2&gt;
&lt;p&gt;HTTP 流，也称为基于 HTTP 的流或 HTTP 实时流，是一种用于通过 Internet 传送实时多媒体内容（例如音频或视频）的技术。该协议允许从服务器到客户端设备的连续数据传输，使用户能够消费媒体内容而无需完整的文件下载。&lt;/p&gt;</description></item><item><title>[译]什么是长轮询？</title><link>https://blog.chensoul.cc/posts/2024/05/07/long-polling/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/long-polling/</guid><description>&lt;p&gt;原文链接：&lt;a href="https://www.pubnub.com/guides/long-polling/" target="_blank"&gt;https://www.pubnub.com/guides/long-polling/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="什么是长轮询"&gt;什么是长轮询？&lt;/h2&gt;
&lt;p&gt;长轮询用于实时 Web 应用程序，以实现客户端和 Web 服务器之间近乎即时的通信。它在实时更新至关重要的聊天和消息应用程序中特别有用。&lt;/p&gt;</description></item><item><title>[译]关于 HTTP 您需要了解的一切</title><link>https://blog.chensoul.cc/posts/2023/10/12/http-in-depth/</link><pubDate>Thu, 12 Oct 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/10/12/http-in-depth/</guid><description>&lt;p&gt;HTTP 是每个 Web 开发人员都应该了解的协议，因为它为整个 Web 提供动力。了解 HTTP 当然可以帮助您开发更好的应用程序。&lt;/p&gt;</description></item></channel></rss>