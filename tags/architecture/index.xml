<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on ChenSoul Blog</title><link>https://blog.chensoul.cc/tags/architecture/</link><description>Recent content in Architecture on ChenSoul Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 14 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.chensoul.cc/tags/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>[译]《Grokking the System Design Interview》设计Twitter</title><link>https://blog.chensoul.cc/posts/2023/12/14/designing-twitter/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/14/designing-twitter/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《Designing Twitter》设计 Twitter。&lt;/p>
&lt;hr>
&lt;p>Let’s design a Twitter-like social networking service. Users of the service will be able to post tweets, follow other people, and favorite tweets. Difficulty Level: Medium&lt;/p></description></item><item><title>如何设计一个分布式ID生成器保证ID按时间有序？</title><link>https://blog.chensoul.cc/posts/2023/12/05/distributed-id-generator/</link><pubDate>Tue, 05 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/05/distributed-id-generator/</guid><description>&lt;p>很多业务有生成唯一 ID 并作为数据库主键的需求。数据库会在这个字段上建立聚集索引（参考 MySQL InnoDB），即该字段会影响各条数据再物理存储上的顺序。&lt;/p>
&lt;p>ID还要尽可能&lt;strong>短&lt;/strong>，节省内存，让数据库索引效率更高。基本上64位整数能够满足绝大多数的场景，但是如果能做到比64位更短那就更好了。需要根据具体业务进行分析，预估出ID的最大值，这个最大值通常比64位整数的上限小很多，于是我们可以用更少的bit表示这个ID。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》设计Dropbox</title><link>https://blog.chensoul.cc/posts/2023/11/24/designing-dropbox/</link><pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/24/designing-dropbox/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《Designing Dropbox》设计 Dropbox。&lt;/p>
&lt;hr>
&lt;p>Let’s design a file hosting service like Dropbox or Google Drive. Cloud file storage enables users to store their data on remote servers. Usually, these servers are maintained by cloud storage providers and made available to users over a network (typically through the Internet). Users pay for their cloud data storage on a monthly basis. Similar Services: OneDrive, Google Drive Difficulty Level: Medium&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》设计Facebook Messenger</title><link>https://blog.chensoul.cc/posts/2023/11/24/designing-facebook-messenger/</link><pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/24/designing-facebook-messenger/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《Designing Facebook Messenger》设计 Facebook Messenger。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》设计Instagram</title><link>https://blog.chensoul.cc/posts/2023/11/24/designing-instagram/</link><pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/24/designing-instagram/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《Designing Instagram》设计 Instagram。&lt;/p>
&lt;hr>
&lt;p>Let’s design a photo-sharing service like Instagram, where users can upload photos to share them with other users. Similar Services: Flickr, Picasa Difficulty Level: Medium&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》设计Pastebin</title><link>https://blog.chensoul.cc/posts/2023/11/24/designing-pastebin/</link><pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/24/designing-pastebin/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《Designing Pastebin》设计 Pastebin。&lt;/p>
&lt;hr>
&lt;p>Let’s design a Pastebin like web service, where users can store plain text. Users of the service will enter a piece of text and get a randomly generated URL to access it. Similar Services: pastebin.com, pasted.co, chopapp.com Difficulty Level: Easy&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》域名系统</title><link>https://blog.chensoul.cc/posts/2023/11/17/dns/</link><pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/17/dns/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自《Grokking the System Design Interview》教程的 &lt;a href="https://www.educative.io/courses/grokking-modern-system-design-interview-for-engineers-managers/introduction-to-domain-name-system-dns" target="_blank">Domain Name System&lt;/a> 这篇章节。&lt;/p></description></item><item><title>如何设计一个短网址服务</title><link>https://blog.chensoul.cc/posts/2023/11/17/designing-a-url-shortening-service/</link><pubDate>Fri, 17 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/17/designing-a-url-shortening-service/</guid><description>&lt;p>如何生成一个短网址服务，参考 &lt;a href="https://www.educative.io/courses/grokking-modern-system-design-interview-for-engineers-managers/system-design-tinyurl" target="_blank">Design a URL Shortening Service / TinyURL&lt;/a> 和 &lt;a href="https://www.designgurus.io/course-play/grokking-the-system-design-interview/doc/638c0b5dac93e7ae59a1af6b" target="_blank">Designing a URL Shortening service like TinyURL&lt;/a> 两篇文章，整理如下笔记。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》设计类似 TinyURL 的 URL 缩短服务</title><link>https://blog.chensoul.cc/posts/2023/11/16/designing-a-url-shortening-service/</link><pubDate>Thu, 16 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/16/designing-a-url-shortening-service/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《Designing a URL Shortening service like TinyURL》设计类似 TinyURL 的 URL 缩短服务。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》系统设计访谈：分步指南</title><link>https://blog.chensoul.cc/posts/2023/11/16/sdi-a-step-by-step-guide/</link><pubDate>Thu, 16 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/16/sdi-a-step-by-step-guide/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自 &lt;a href="https://github.com/sharanyaa/grok_sdi_educative/blob/master/grok_system_design_interview.pdf" target="_blank">grok_system_design_interview.pdf&lt;/a> 的一篇文章《System Design Interviews: A step by step guide》系统设计访谈：分步指南。&lt;/p></description></item><item><title>[译]《Grokking the System Design Interview》系统设计主模板</title><link>https://blog.chensoul.cc/posts/2023/11/16/system-design-master-template/</link><pubDate>Thu, 16 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/11/16/system-design-master-template/</guid><description>&lt;p>这是一篇双语翻译的文章，原文出自《Grokking the System Design Interview》教程的 &lt;a href="https://www.designgurus.io/course-play/grokking-the-system-design-interview/doc/645d5161fff33a24ccce4bb1" target="_blank">System Design Master Template&lt;/a> 这篇章节。&lt;/p></description></item><item><title>如何成为一名合格的架构师</title><link>https://blog.chensoul.cc/posts/2023/08/21/architecture/</link><pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/21/architecture/</guid><description>&lt;h2 id="如何成为一名合格的架构师">如何成为一名合格的架构师&lt;/h2>
&lt;p>成为一名合格的架构师需要不断学习和积累经验。以下是一些步骤和建议，可以帮助你成为一名合格的架构师：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>学习基础知识：建立坚实的计算机科学和软件工程基础，包括数据结构、算法、操作系统、数据库等。深入学习编程语言和开发技术，了解不同技术栈的优缺点。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>实践项目开发：通过参与实际的软件开发项目，积累项目管理和开发经验。亲身经历软件开发的各个阶段，从需求分析到设计、开发、测试和部署，深入了解软件开发的流程和挑战。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>学习系统设计和架构：深入学习系统设计和架构的相关知识，包括架构模式、设计原则。阅读相关的书籍、文章和技术博客，参与架构设计讨论和社区活动。&lt;/p>
&lt;p>以下是关于架构模式、设计原则和一些常见架构的简要介绍：&lt;/p></description></item><item><title>软件开发流程和常用开发方法</title><link>https://blog.chensoul.cc/posts/2023/08/21/the-software-development-process/</link><pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/08/21/the-software-development-process/</guid><description>&lt;p>软件开发流程和常用开发方法，如敏捷开发和 DevOps，对于架构师来说非常重要。下面我将简要介绍这些概念：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>软件开发流程：&lt;/p>
&lt;p>软件开发流程是指在开发软件时，按照一定的步骤和阶段进行工作的过程。常见的软件开发流程包括瀑布模型、迭代模型和增量模型等。这些流程以不同的方式组织和管理开发过程，包括需求分析、设计、编码、测试和部署等阶段。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>敏捷开发：&lt;/p>
&lt;p>敏捷开发是一种迭代和增量的软件开发方法，强调团队协作、快速响应变化和持续交付。敏捷开发强调通过迭代周期（如 Scrum 中的 Sprint）来开发软件，每个迭代都会产生可部署的软件功能。常见的敏捷方法包括 Scrum、XP（极限编程）和 Kanban 等。&lt;/p></description></item></channel></rss>