<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Socketio on ChenSoul</title><link>https://blog.chensoul.cc/tags/socketio/</link><description>Recent content in Socketio on ChenSoul</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 08 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.chensoul.cc/tags/socketio/index.xml" rel="self" type="application/rss+xml"/><item><title>[译]比较 Socket.IO 和 HTTP：主要区别和用例</title><link>https://blog.chensoul.cc/posts/2024/05/08/socketio-vs-http/</link><pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/08/socketio-vs-http/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/socketio-vs-http" target="_blank">https://ably.com/topic/socketio-vs-http&lt;/a>&lt;/p>
&lt;p>在规划实时应用程序时，您应该仔细考虑要使用哪些技术。本文对&lt;a href="https://ably.com/topic/socketio" target="_blank">Socket.IO&lt;/a>实时库和&lt;a href="https://ably.com/topic/websockets-vs-http#http" target="_blank">HTTP&lt;/a>协议进行了比较。下面您将了解每种解决方案的功能、每种解决方案的优缺点以及何时使用它们。&lt;/p>
&lt;h2 id="什么是socketio">什么是Socket.IO？&lt;/h2>
&lt;p>Socket.IO 是一个创建于 2010 年的库，提供客户端和服务器之间的实时双向通信。它允许管理连接、发送和接收消息等等。这使得 Socket.IO 成为构建消息/聊天应用程序的理想选择。&lt;/p></description></item><item><title>[译]什么是Socket.IO？</title><link>https://blog.chensoul.cc/posts/2024/05/07/socket-io/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/socket-io/</guid><description>&lt;p>原文链接：&lt;a href="https://www.pubnub.com/guides/socket-io/" target="_blank">https://www.pubnub.com/guides/socket-io/&lt;/a>&lt;/p>
&lt;h1 id="什么是socketio">什么是Socket.IO？&lt;/h1>
&lt;p>&lt;a href="https://socket.io/" target="_blank">Socket.IO&lt;/a>是一个开源的跨平台库，它提供客户端和服务器之间基于事件的&lt;a href="https://www.geeksforgeeks.org/transmission-modes-computer-networks/" target="_blank">全双工双向通信&lt;/a>。它基于 WebSocket 协议构建，提供附加功能，例如自动重新连接以及在无法使用 &lt;a href="https://www.pubnub.com/guides/what-are-websockets-and-when-should-you-use-them/" target="_blank">WebSocket时回退到&lt;/a>&lt;a href="https://www.pubnub.com/blog/http-long-polling/" target="_blank">HTTP 长轮询。&lt;/a>&lt;/p>
&lt;p>&lt;img src="../../../static/images/Client_Server.webp" alt="img">&lt;/p>
&lt;p>Socket.IO 客户端由客户端和服务器端库组成。虽然最初在服务器上支持&lt;a href="https://www.pubnub.com/blog/nodejs-websocket-programming-examples/" target="_blank">NodeJS ，在客户端支持&lt;/a>&lt;a href="https://www.pubnub.com/guides/javascript/" target="_blank">JavaScript&lt;/a>，但现在它支持各种服务器和客户端技术，包括&lt;a href="https://www.pubnub.com/docs/sdks/java" target="_blank">Java&lt;/a>、&lt;a href="https://www.pubnub.com/docs/sdks/python" target="_blank">Python&lt;/a>、&lt;a href="https://www.pubnub.com/docs/sdks/swift" target="_blank">Swift&lt;/a>和&lt;a href="https://www.pubnub.com/docs/sdks/kotlin" target="_blank">Kotlin&lt;/a>，它们都是官方代码库的一部分，由活跃社区贡献。&lt;/p></description></item></channel></rss>