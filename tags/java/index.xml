<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on ChenSoul Blog</title><link>https://blog.chensoul.cc/tags/java/</link><description>Recent content in Java on ChenSoul Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 04 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.chensoul.cc/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>2024-11-04｜SivaLabs博客文章</title><link>https://blog.chensoul.cc/posts/2024/11/04/sivalabs-blog-posts/</link><pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/11/04/sivalabs-blog-posts/</guid><description>&lt;p&gt;以下是 &lt;a href="https://www.sivalabs.in/" target="_blank"&gt;SivaLabs 博客&lt;/a&gt; 中的一些文章，记录在此，方便后面阅读。&lt;/p&gt;</description></item><item><title>[译]Minikube 中的 Minions - 面向 Java 开发人员的 Kubernetes 简介</title><link>https://blog.chensoul.cc/posts/2024/07/08/minions-in-minikube-a-kubernetes-intro-for-java-de/</link><pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/08/minions-in-minikube-a-kubernetes-intro-for-java-de/</guid><description>&lt;p&gt;我们希望我们的微服务是可复制、可替换的工作程序，我们可以轻松升级或降级，无需停机，管理也只需最少。我们可能会说我们希望他们是我们的奴才。在本文中，我们将通过一个简单的示例来了解 Kubernetes 通过创建和编排奴才大军可以为我们做些什么。您可以按照本文进行编码，也可以从&lt;a href="https://github.com/ryandawsonuk/minions/blob/master/minion-army.yml" target="_blank"&gt;此处&lt;/a&gt;克隆项目。&lt;/p&gt;</description></item><item><title>[译]面向 Java 开发人员的 Kubernetes</title><link>https://blog.chensoul.cc/posts/2024/07/08/kubernetes-for-java-developers/</link><pubDate>Mon, 08 Jul 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/07/08/kubernetes-for-java-developers/</guid><description>&lt;blockquote&gt;
&lt;p&gt;有一类新工具可用于将应用程序 docker 化并部署到 Kubernetes，这些工具专门面向开发人员。该类别中的最新工具是 RedHat 的 JKube。&lt;/p&gt;</description></item><item><title>2024-01-11｜Session和Cookie的区别、单点登录和三方登录的区别</title><link>https://blog.chensoul.cc/posts/2024/01/11/til/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/11/til/</guid><description>&lt;p&gt;今天做了什么：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input checked="" disabled="" type="checkbox"&gt; 1、观看 B 站 《&lt;a href="https://www.bilibili.com/video/BV1ht4y1E7EL?p=1" target="_blank"&gt;SSO单点登录&lt;/a&gt;》视频&lt;/p&gt;</description></item><item><title>2024-01-10｜ Java审计框架inspektr</title><link>https://blog.chensoul.cc/posts/2024/01/10/til/</link><pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/10/til/</guid><description>&lt;p&gt;今天做了什么：&lt;/p&gt;
&lt;p&gt;1、Java Lambda 增强 &lt;a href="https://github.com/jOOQ/jOOL" target="_blank"&gt;https://github.com/jOOQ/jOOL&lt;/a&gt; 和 &lt;a href="https://github.com/vavr-io/vavr" target="_blank"&gt;https://github.com/vavr-io/vavr&lt;/a&gt; ，jOOL 在 jdk8 下存在编译错误，计划，整合这两个项目，创建一个新的项目，只引入自己需要的一些类。
2、&lt;a href="https://www.pac4j.org/" target="_blank"&gt;https://www.pac4j.org/&lt;/a&gt; 一个安全框架
3、&lt;a href="https://github.com/apereo/inspektr" target="_blank"&gt;https://github.com/apereo/inspektr&lt;/a&gt; 一个轻量级的 Java 审计框架。这个是在看 CAS 源码的过程中，发现的。
在 CAS 的源码中，有一些比较不错的代码，引入到自己的项目中，另外，打算仿照这个 inspektr 框架，重写公司微服务项目中的日志记录模块。
4、分享一个安全相关的 wiki 网站：&lt;a href="https://wukong-doc.redhtc.com/security" target="_blank"&gt;https://wukong-doc.redhtc.com/security&lt;/a&gt;&lt;/p&gt;</description></item><item><title>2024-01-09｜单点登录</title><link>https://blog.chensoul.cc/posts/2024/01/09/til/</link><pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/01/09/til/</guid><description>&lt;p&gt;今天做了什么：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zexo.dev/posts/2020/03/01/keep-your-repo-dependencies-up-to-date-with-renovate/" target="_blank"&gt;使用 renovate 监控第三方依赖更新&lt;/a&gt; ，renovate 貌似需要付费，放弃。&lt;/li&gt;
&lt;li&gt;spring-security-oauth2-samples 示例工程重命名模块和包名，代码见 &lt;a href="https://github.com/chensoul/spring-security-oauth2-boot" target="_blank"&gt;spring-security-oauth2-boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;实现单点登录并测试&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="实现单点登录并测试"&gt;实现单点登录并测试&lt;/h2&gt;
&lt;p&gt;实现单点登录（Single Sign-On，SSO）可以采用多种思路和技术。下面是几种常见的实现思路：&lt;/p&gt;</description></item><item><title>2023-12-12｜RMI、Java漏洞安全、Semgrep漏洞检测</title><link>https://blog.chensoul.cc/posts/2023/12/12/til/</link><pubDate>Tue, 12 Dec 2023 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2023/12/12/til/</guid><description>&lt;p&gt;Today I Learned. 今天我学了：RMI、Java漏洞安全、Semgrep漏洞检测。&lt;/p&gt;</description></item></channel></rss>