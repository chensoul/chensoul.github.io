<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kafka on ChenSoul Blog</title><link>https://blog.chensoul.cc/tags/kafka/</link><description>Recent content in Kafka on ChenSoul Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 17 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.chensoul.cc/tags/kafka/index.xml" rel="self" type="application/rss+xml"/><item><title>Kafka 安装和快速上手</title><link>https://blog.chensoul.cc/posts/2024/10/17/kafka-install-and-quickstart/</link><pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/10/17/kafka-install-and-quickstart/</guid><description>&lt;h2 id="下载-kafka">下载 Kafka&lt;/h2>
&lt;p>&lt;a href="https://kafka.apache.org/downloads" target="_blank">下载&lt;/a> 最新的版本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:2;-o-tab-size:2;tab-size:2;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ wget https://downloads.apache.org/kafka/3.8.0/kafka_2.12-3.8.0.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -xzf kafka_2.12-3.8.0.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd kafka_2.12-3.8.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="启动-kafka">启动 Kafka&lt;/h2>
&lt;p>Apache Kafka 需要 Java 8+，可以使用 KRaft 或 ZooKeeper 启动。&lt;/p></description></item><item><title>Kafka 基础知识</title><link>https://blog.chensoul.cc/posts/2024/10/17/kafka-fundamental/</link><pubDate>Thu, 17 Oct 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/10/17/kafka-fundamental/</guid><description>&lt;p>Kafka 是一个分布式流式处理平台。&lt;/p>
&lt;p>流平台具有三个关键功能：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>消息队列&lt;/strong>：发布和订阅消息流，这个功能类似于消息队列，这也是 Kafka 也被归类为消息队列的原因。&lt;/li>
&lt;li>&lt;strong>容错的持久方式存储记录消息流&lt;/strong>： Kafka 会把消息持久化到磁盘，有效避免了消息丢失的风险·。&lt;/li>
&lt;li>&lt;strong>流式处理平台：&lt;/strong> 在消息发布的时候进行处理，Kafka 提供了一个完整的流式处理类库。&lt;/li>
&lt;/ol>
&lt;p>Kafka 主要有两大应用场景：&lt;/p></description></item><item><title>[译]Apache Kafka、RabbitMQ 与 AWS SNSSQS：哪个消息代理最好？</title><link>https://blog.chensoul.cc/posts/2024/05/07/apache-kafka-vs-rabbitmq-vs-aws-sns-sqs/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/apache-kafka-vs-rabbitmq-vs-aws-sns-sqs/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/apache-kafka-vs-rabbitmq-vs-aws-sns-sqs" target="_blank">https://ably.com/topic/apache-kafka-vs-rabbitmq-vs-aws-sns-sqs&lt;/a>&lt;/p>
&lt;p>将消息从一个组件获取到另一个组件是微服务架构中最重要的部分之一。每个服务必须能够与任何其他服务异步、可靠且大规模地通信。&lt;/p>
&lt;p>这就是消息代理的用武之地。消息代理（例如 Apache Kafka、RabbitMQ 和&lt;a href="https://ably.com/topic/aws-sns-vs-sqs" target="_blank">AWS SNS/SQS&lt;/a>）为您提供一个通用接口和一组保证，而不是手动协调可能数千个微服务之间的通信。这简化了集成并更容易推理您的系统。&lt;/p></description></item><item><title>[译]如何通过 WebSocket 将 Kafka 消息流式传输到面向互联网的客户端</title><link>https://blog.chensoul.cc/posts/2024/05/07/websockets-kafka/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websockets-kafka/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/websockets-kafka" target="_blank">https://ably.com/topic/websockets-kafka&lt;/a>&lt;/p>
&lt;p>Apache Kafka 是目前最强大的异步消息传递技术之一。 Kafka 由 Jay Kreps、Jun Rao 和 Neha Narkhede 等团队于 2010 年在 LinkedIn 设计，并于 2011 年初开源。如今，该工具被众多公司（包括科技巨头，例如 Slack、Airbnb 或 Netflix 使用）为其实时数据流管道提供支持。&lt;/p></description></item></channel></rss>