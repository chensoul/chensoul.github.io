<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Websocket on ChenSoul</title><link>https://blog.chensoul.cc/tags/websocket/</link><description>Recent content in Websocket on ChenSoul</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 10 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.chensoul.cc/tags/websocket/index.xml" rel="self" type="application/rss+xml"/><item><title>All things about WebSocket</title><link>https://blog.chensoul.cc/posts/2024/05/10/all-things-about-websocket/</link><pubDate>Fri, 10 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/10/all-things-about-websocket/</guid><description>&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/WebSocket" target="_blank">Wikipedia：WebSocket&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket" target="_blank">WebSocket - Web APIs | MDN&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.pubnub.com/guides/websockets/" target="_blank">PubNub：什么是 WebSocket？&lt;/a>&lt;/p></description></item><item><title>[译]2024年最好的WebSocket替代品</title><link>https://blog.chensoul.cc/posts/2024/05/07/websocket-alternatives/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websocket-alternatives/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/websocket-alternatives" target="_blank">https://ably.com/topic/websocket-alternatives&lt;/a>&lt;/p>
&lt;h2 id="什么是-websocket">什么是 WebSocket？&lt;/h2>
&lt;p>简而言之，WebSocket 是一种实时 Web 技术，可通过持久连接在客户端和服务器之间实现双向、全双工通信。 WebSocket 连接会根据需要保持活动状态（理论上，它可以永远持续），从而允许服务器和客户端以最小的开销随意发送数据。&lt;/p></description></item><item><title>[译]Java和WebSockets：构建可靠的实时应用程序</title><link>https://blog.chensoul.cc/posts/2024/05/07/websockets-java/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websockets-java/</guid><description>&lt;p>原文：&lt;a href="https://ably.com/topic/websockets-java" target="_blank">https://ably.com/topic/websockets-java&lt;/a>&lt;/p>
&lt;p>在全球范围内，人们对实时传输数据的需求不断增长，&lt;a href="https://ably.com/topic/websockets" target="_blank">WebSocket&lt;/a>可能是此类用例中最流行的传输协议。在 WebSocket 出现之前，“实时”网络已经存在，但它很难实现，通常速度较慢，并且是通过破解现有的网络技术来实现的，而这些技术并不是为实时应用程序设计的。 WebSocket 协议为真正的实时网络铺平了道路。&lt;/p>
&lt;p>Java是一种流行的编程语言和计算语言。它是 Android 智能手机应用程序的核心编程语言之一，是构建实时系统的可靠选择。 WebSockets 成为 Java 标准版 SDK 的一部分已经有一段时间了。WebSocket 协议最初是在 2013 年作为&lt;a href="https://www.oracle.com/technical-resources/articles/java/jsr356.html" target="_blank">JSR 356&lt;/a>的一部分提出的，目前已作为&lt;a href="https://docs.oracle.com/javaee/7/api/index.html?javax/websocket/package-summary.html" target="_blank">javax.websocket&lt;/a>包的一部分包含在 Java SDK 中。&lt;/p></description></item><item><title>[译]WebSocket API和协议说明</title><link>https://blog.chensoul.cc/posts/2024/05/07/the-websocket-api-and-protocol-explained/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/the-websocket-api-and-protocol-explained/</guid><description>&lt;p>原文地址：&lt;a href="https://ably.com/topic/websockets" target="_blank">https://ably.com/topic/websockets&lt;/a>&lt;/p>
&lt;p>WebSocket 标志着 Web 开发的转折点。 WebSocket 技术旨在以事件为驱动，并针对低延迟进行了优化，已成为许多寻求构建交互式实时数字体验以提供令人愉悦的用户体验的组织和开发人员的首选。本文探讨了与 WebSocket 相关的关键主题：&lt;/p></description></item><item><title>[译]WebSocket与REST</title><link>https://blog.chensoul.cc/posts/2024/05/07/websocket-vs-rest/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websocket-vs-rest/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/websocket-vs-rest" target="_blank">https://ably.com/topic/websocket-vs-rest&lt;/a>&lt;/p>
&lt;p>无论您是将客户端连接到服务器、将微服务相互连接，还是将应用程序的一部分连接到外部服务，在通信方法方面，您几乎都会有多种选择。不过，有两个比较突出：WebSocket 和 REST。&lt;/p>
&lt;p>好消息是，尽管为应用程序选择核心技术是一项严肃的责任，但由于 WebSocket 和 REST 不同的架构选择、性能特征和实现考虑因素，在 WebSocket 和 REST 之间进行选择相对简单。这意味着双方都可以解决对方可能遇到的问题。&lt;/p></description></item><item><title>[译]什么是WebSocket？</title><link>https://blog.chensoul.cc/posts/2024/05/07/websockets/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websockets/</guid><description>&lt;p>原文链接：&lt;a href="https://www.pubnub.com/guides/websockets/" target="_blank">https://www.pubnub.com/guides/websockets/&lt;/a>&lt;/p>
&lt;h2 id="什么是-websocket">什么是 WebSocket？&lt;/h2>
&lt;p>&lt;a href="https://www.pubnub.com/guides/tcp-ip/" target="_blank">WebSocket 是一种通过单个TCP&lt;/a>连接提供全双工通信通道的通信协议。它支持客户端和服务器之间的实时、事件驱动的连接。&lt;/p>
&lt;p>与遵循请求-响应模型的传统 HTTP 软件不同，WebSocket 允许双向（双向）通信。这意味着客户端和服务器可以随时向对方发送数据，而无需持续轮询。&lt;/p></description></item><item><title>[译]如何通过 WebSocket 将 Kafka 消息流式传输到面向互联网的客户端</title><link>https://blog.chensoul.cc/posts/2024/05/07/websockets-kafka/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://blog.chensoul.cc/posts/2024/05/07/websockets-kafka/</guid><description>&lt;p>原文链接：&lt;a href="https://ably.com/topic/websockets-kafka" target="_blank">https://ably.com/topic/websockets-kafka&lt;/a>&lt;/p>
&lt;p>Apache Kafka 是目前最强大的异步消息传递技术之一。 Kafka 由 Jay Kreps、Jun Rao 和 Neha Narkhede 等团队于 2010 年在 LinkedIn 设计，并于 2011 年初开源。如今，该工具被众多公司（包括科技巨头，例如 Slack、Airbnb 或 Netflix 使用）为其实时数据流管道提供支持。&lt;/p></description></item></channel></rss>